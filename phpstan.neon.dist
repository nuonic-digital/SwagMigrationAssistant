includes:
    - phpstan-baseline.neon
    - ../../../vendor/phpstan/phpstan/conf/bleedingEdge.neon
    - ../../../src/Core/DevOps/StaticAnalyze/PHPStan/extension.neon
    - ../../../src/Core/DevOps/StaticAnalyze/PHPStan/rules.neon

parameters:
    phpVersion: 80100
    level: 8
    tmpDir: var/cache/phpstan
    treatPhpDocTypesAsCertain: false
    checkFunctionNameCase: true
    checkInternalClassCaseSensitivity: true
    checkUninitializedProperties: true
    paths:
        - .
    bootstrapFiles:
        - Test/TestBootstrap.php
    symfony:
        constantHassers: false
        containerXmlPath: '../../../var/cache/swag_migration_assistant_phpstan/Shopware_Core_DevOps_StaticAnalyze_StaticAnalyzeKernelSwag_migration_assistant_phpstanDebugContainer.xml'
        consoleApplicationLoader: ../../../src/Core/DevOps/StaticAnalyze/console-application.php
    excludePaths:
        - vendor
        - var
        - ecs.php

    ignoreErrors:
        - message: '#Service ".*" is private#'
          paths:
              - Test/**/*Test.php

        - # PHPStan does not recognize correctly that the properties are initialized in a private method called in the setUp method
            message: '#Access to an uninitialized property SwagMigrationAssistant\\Test.*(mappingService|connection|runId)#'
            paths:
                - Test/Migration/Controller/StatusControllerTest.php
                - Test/Migration/Services/MigrationDataWriterTest.php
                - Test/Migration/Services/MigrationProgressServiceTest.php
                - Test/Profile/Shopware/Gateway/Local/

services:
    -   # register the class, so we can decorate it, but don't tag it as a rule, so only our decorator is used by PHPStan
        class: Symplify\PHPStanRules\Rules\NoReturnSetterMethodRule

rules:
    # Shopware core rules
    - Shopware\Core\DevOps\StaticAnalyze\PHPStan\Rules\Deprecation\DeprecatedMethodsThrowDeprecationRule
    - Shopware\Core\DevOps\StaticAnalyze\PHPStan\Rules\Tests\CoversAttributeRule
    - Shopware\Core\DevOps\StaticAnalyze\PHPStan\Rules\Tests\MockingSimpleObjectsNotAllowedRule
    - Shopware\Core\DevOps\StaticAnalyze\PHPStan\Rules\FinalClassRule
    - Shopware\Core\DevOps\StaticAnalyze\PHPStan\Rules\DecorationPatternRule
    - Shopware\Core\DevOps\StaticAnalyze\PHPStan\Rules\PackageAnnotationRule
    - Shopware\Core\DevOps\StaticAnalyze\PHPStan\Rules\DomainExceptionRule
    - Shopware\Core\DevOps\StaticAnalyze\PHPStan\Rules\NoAfterStatementRule

    # rules from https://github.com/symplify/phpstan-rules
    # domain
    - Symplify\PHPStanRules\Rules\Enum\RequireUniqueEnumConstantRule
    - Symplify\PHPStanRules\Rules\ForbiddenParamTypeRemovalRule
    - Symplify\PHPStanRules\Rules\PreventParentMethodVisibilityOverrideRule

    # paths
    - Symplify\PHPStanRules\Rules\NoMissingDirPathRule
    - Symplify\PHPStanRules\Rules\NoArrayAccessOnObjectRule

    # dead-code
    - Symplify\PHPStanRules\Rules\NoIssetOnObjectRule

    # explicit naming
    - Symplify\PHPStanRules\Rules\ForbiddenMultipleClassLikeInOneFileRule

    - Symplify\PHPStanRules\Rules\Complexity\ForbiddenArrayMethodCallRule

    # complexity rules
    - Symplify\PHPStanRules\Rules\Explicit\NoMixedPropertyFetcherRule
    - Symplify\PHPStanRules\Rules\Explicit\NoMixedMethodCallerRule
    - Symplify\PHPStanRules\Rules\NoDynamicNameRule

    # naming rules
    - Shopware\Core\DevOps\StaticAnalyze\PHPStan\Rules\Symplify\NoReturnSetterMethodWithFluentSettersRule
    - Symplify\PHPStanRules\Rules\NoVoidGetterMethodRule
    - Symplify\PHPStanRules\Rules\UppercaseConstantRule
    - Symplify\PHPStanRules\Rules\CheckClassNamespaceFollowPsr4Rule
