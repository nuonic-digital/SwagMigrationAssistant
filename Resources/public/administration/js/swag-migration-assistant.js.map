{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware/api/swag-migration-profile-shopware-api-page-information/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware/api/swag-migration-profile-shopware-api-page-information/swag-migration-profile-shopware-api-page-information.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware57/local/swag-migration-profile-shopware57-local-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-progress-bar/swag-migration-progress-bar.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-confirm-warning/swag-migration-confirm-warning.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-premapping/swag-migration-premapping.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware57/api/swag-migration-profile-shopware57-api-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware54/api/swag-migration-profile-shopware54-api-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-dashboard-card/swag-migration-dashboard-card.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware55/api/swag-migration-profile-shopware55-api-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-empty-screen/swag-migration-empty-screen.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware6/api/swag-migration-profile-shopware6-api-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware6/api/swag-migration-profile-shopware6-api-credential-form/swag-migration-profile-shopware6-api-credential-form.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-assistant/swag-migration-assistant.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware55/api/swag-migration-profile-shopware55-api-page-information/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-expand-div/swag-migration-expand-div.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen-takeover/swag-migration-loading-screen-takeover.scss","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware56/api/swag-migration-profile-shopware56-api-page-information/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen-connection-lost/swag-migration-loading-screen-connection-lost.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware54/local/swag-migration-profile-shopware54-local-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware54/api/swag-migration-profile-shopware54-api-page-information/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware/api/swag-migration-profile-shopware-api-credential-form/swag-migration-profile-shopware-api-credential-form.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware/api/swag-migration-profile-shopware-api-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history/swag-migration-history.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware/local/swag-migration-profile-shopware-local-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware/local/swag-migration-profile-shopware-local-credential-form/swag-migration-profile-shopware-local-credential-form.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-main-page/swag-migration-main-page.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile sync \\.\\/[a-z0-9-]+\\/[a-z0-9-]+\\/[a-z0-9-]+\\/index\\.js$","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware56/local/swag-migration-profile-shopware56-local-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware56/api/swag-migration-profile-shopware56-api-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail-errors/swag-migration-history-detail-errors.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-tab-card/swag-migration-tab-card.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware6/api/swag-migration-profile-shopware6-api-page-information/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware6/api/swag-migration-profile-shopware6-api-page-information/swag-migration-profile-shopware6-api-page-information.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail-data/swag-migration-history-detail-data.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-shop-information/swag-migration-shop-information.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-settings-icon/swag-migration-settings-icon.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-process-screen/swag-migration-process-screen.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail/swag-migration-history-detail.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-data-selector/swag-migration-data-selector.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-result-screen/swag-migration-result-screen.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-connection-create/swag-migration-wizard-page-connection-create.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/init/worker-notification.init.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard/swag-migration-wizard.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware55/local/swag-migration-profile-shopware55-local-credential-form/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-grid-selection/swag-migration-grid-selection.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware6/api/swag-migration-profile-shopware6-api-page-information/swag-migration-profile-shopware6-api-page-information.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-grid-extended/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-grid-extended/swag-migration-grid-extended.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-history-selected-data/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-history-selected-data/swag-migration-history-selected-data.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/migration/swag-migration-worker-status-manager.service.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen/swag-migration-loading-screen.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-result-screen/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-result-screen/swag-migration-result-screen.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen-takeover/swag-migration-loading-screen-takeover.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen-takeover/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen-connection-lost/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen-connection-lost/swag-migration-loading-screen-connection-lost.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-pause-screen/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-pause-screen/swag-migration-pause-screen.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-shop-information/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-shop-information/swag-migration-shop-information.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-data-selector/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-data-selector/swag-migration-data-selector.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-premapping/swag-migration-premapping.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/data/migrationUI.store.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-premapping/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-progress-bar/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-progress-bar/swag-migration-progress-bar.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-assistant/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-assistant/swag-migration-assistant.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-confirm-warning/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-confirm-warning/swag-migration-confirm-warning.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-media-process/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-media-process/swag-migration-media-process.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-tab-card/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-tab-card/swag-migration-tab-card.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-tab-card-item/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-tab-card-item/swag-migration-tab-card-item.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-grid-selection/swag-migration-grid-selection.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-grid-selection/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-expand-div/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-expand-div/swag-migration-expand-div.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-shop-avatar/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-shop-avatar/swag-migration-shop-avatar.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-settings-icon/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-settings-icon/swag-migration-settings-icon.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-dashboard-card/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-dashboard-card/swag-migration-dashboard-card.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-index/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-index/swag-migration-index.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-empty-screen/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-empty-screen/swag-migration-empty-screen.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-main-page/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-main-page/swag-migration-main-page.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history/swag-migration-history.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail/swag-migration-history-detail.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail-errors/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail-errors/swag-migration-history-detail-errors.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail-data/swag-migration-history-detail-data.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail-data/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/storage-broadcaster.service.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/migration/swag-migration-worker-request.service.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/migration/swag-migration-worker.service.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-process-screen/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-process-screen/swag-migration-process-screen.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard/swag-migration-wizard.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-introduction/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-introduction/swag-migration-wizard-page-introduction.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-profile-installation/swag-migration-wizard-page-profile-installation.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-profile-installation/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-connection-select/swag-migration-wizard-page-connection-select.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-connection-select/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-connection-create/swag-migration-wizard-page-connection-create.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-connection-create/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-profile-information/swag-migration-wizard-page-profile-information.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-profile-information/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-credentials/swag-migration-wizard-page-credentials.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-credentials/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-credentials-success/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-credentials-success/swag-migration-wizard-page-credentials-success.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-credentials-error/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-credentials-error/swag-migration-wizard-page-credentials-error.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/extension/sw-dashboard-index/sw-dashboard-index.html.twig","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/extension/sw-dashboard-index/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/data/migrationProcess.store.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/api/swag-migration.api.service.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/migration/swag-migration-process-store-init.service.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/migration/swag-migration-ui-store-init.service.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/api/swag-migration-indexing.api.service.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/init/api-service.init.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/migration/swag-migration-indexing-worker.service.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/init/migration-worker-service.init.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware57/api/swag-migration-profile-shopware57-api-page-information/index.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/mixin/swag-wizard.mixin.js","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-shop-avatar/swag-migration-shop-avatar.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-pause-screen/swag-migration-pause-screen.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-profile-installation/swag-migration-wizard-page-profile-installation.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen/swag-migration-loading-screen.scss","webpack:////Users/m.janz/Repos/platform/custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-media-process/swag-migration-media-process.scss"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Shopware","Component","register","template","computed","assetFilter","Filter","getByName","extend","content","default","locals","add","context","require","keys","forEach","props","credentials","type","data","inputCredentials","endpoint","apiUser","apiPassword","apiPasswordLength","this","length","watch","immediate","handler","newCredentials","emitCredentials","emitOnChildRouteReadyChanged","areCredentialsValid","deep","newInputCredentials","bearer_token","methods","apiPasswordValid","validateInput","input","isReady","$emit","onKeyPressEnter","listToStyles","parentId","list","styles","newStyles","item","id","part","css","media","sourceMap","parts","push","hasDocument","document","DEBUG","Error","stylesInDom","head","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","options","ssrIdKey","isOldIE","navigator","test","userAgent","toLowerCase","addStylesClient","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","j","addStyle","createStyleElement","styleElement","createElement","appendChild","obj","update","remove","querySelector","parentNode","removeChild","styleIndex","applyToSingletonTag","applyToTag","newObj","textStore","replaceText","index","replacement","filter","Boolean","join","styleSheet","cssText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","sources","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","ShopwareError","Classes","apiKey","apiKeyErrorCode","apiKeyLength","apiKeyError","code","meta","parameters","apiKeyValid","dbHost","dbPort","dbUser","dbPassword","dbName","installationRoot","map","webpackContext","req","webpackContextResolve","e","resolve","notificationId","WorkerNotification","fn","next","_ref","$root","entry","notification","mediaFileCount","size","config","title","$t","message","$tc","variant","metadata","growl","isLoading","then","uuid","disabledAttribute","String","isDisabled","extendedGridRowClasses","classes","isSelected","isDeleted","isLocal","concat","entityGroups","Array","dataSnippets","snippets","group","snippet","_regeneratorRuntime","a","iterator","asyncIterator","u","define","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","h","f","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","__await","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","self","args","arguments","apply","err","undefined","_defineProperties","target","descriptor","hint","prim","toPrimitive","res","Number","_toPrimitive","State","MIGRATION_STATUS","freeze","WAITING","PREMAPPING","FETCH_DATA","WRITE_DATA","PROCESS_MEDIA_FILES","FINISHED","MIGRATION_DISPLAY_STATUS","WorkerStatusManager","migrationService","instance","Constructor","_classCallCheck","_migrationService","_migrationProcessState","protoProps","staticProps","runId","_this","newStatus","statusIndex","onStatusPreparationFinished","onFinish","beforeProcessMedia","beforeWriteProgress","commit","_this2","_callee","requestRetry","requestFailedCount","_context","updateWriteProgress","response","_x","_x2","_this3","_ref2","_callee2","_context2","updateMediaFilesProgress","newEntityGroups","_x3","_x4","_this4","_ref3","_callee3","_context3","finishMigration","_x5","_x6","_Shopware","_Shopware$Component$g","getComponentHelper","mapState","mapGetters","_objectSpread","currentStatus","progressBarValue","displayEntityGroups","reduce","sum","currentCount","progressBarMaxValue","total","progressBarTitle","currentEntityGroupId","progressBarLeftPointDescription","caption","statusLong","created","createdComponent","required","TAKEOVER_STATE","RUNNING","INTERRUPTED","ABORTED","inject","migrationWorkerService","isTakeoverForbidden","isMigrationInterrupted","possibleState","state","showTakeoverModal","showAbortModal","showRedirectModal","titleSnippet","messageSnippet","refreshState","isMigrationRunningInOtherTab","isRunning","checkForRunningMigration","runState","isMigrationRunning","onCheckButtonClick","status","onCloseTakeoverModal","onTakeover","$nextTick","onCloseAbortModal","onAbort","onCloseRedirectModal","onRedirect","_this5","$router","onNavigateMainClick","window","location","reload","Mixin","format","Utils","Criteria","Data","BADGE_TYPE","SUCCESS","DANGER","migrationProcessStoreInitService","repositoryFactory","mixins","filters","localizedNumberFormat","locale","adminLocaleLanguage","adminLocaleRegion","Intl","NumberFormat","connected","showMoreInformation","confirmModalIsLoading","showRemoveCredentialsConfirmModal","showResetChecksumsConfirmModal","showResetMigrationConfirmModal","lastConnectionCheck","lastMigrationDate","connection","api","displayEnvironmentInformation","environmentInformation","migrationRunRepository","migrationConnectionRepository","connectionName","shopUrl","sourceSystemDomain","replace","shopUrlPrefix","match","sslActive","shopUrlPrefixClass","connectionBadgeLabel","serverUnreachable","connectionBadgeVariant","shopFirstLetter","sourceSystemName","profile","version","author","profileIcon","icon","gateway","lastConnectionCheckDateTimeParams","date","getDateString","time","getTimeString","lastMigrationDateTimeParams","$route","resetMigration","connectionId","newConnectionId","fetchConnection","updateLastMigrationDate","openResetMigrationModal","onCloseResetModal","criteria","addSorting","sort","search","runs","first","createdAt","credentialFields","Date","getProfileInformation","profileName","gatewayName","profileInformation","day","month","year","hour","minute","onClickEditConnectionCredentials","params","onClickCreateConnection","onClickSelectConnection","onClickProfileInstallation","onClickRemoveConnectionCredentials","updateConnectionCredentials","go","onClickResetChecksums","resetChecksums","onClickResetMigration","cleanupMigrationData","initProcessStore","createNotificationError","displayWarnings","fetchTableData","dataSelectionTableData","$refs","tableDataGrid","dataSelectionIds","_this$$refs$tableData","selectItem","onGridSelectItem","selection","selectionIds","requiredSelection","includes","showHelptext","entityTotals","getHelptext","string","entityNames","UI_COMPONENT_INDEX","WARNING_CONFIRM","DATA_SELECTOR","LOADING_SCREEN","MEDIA_SCREEN","RESULT_SUCCESS","PAUSE_SCREEN","TAKEOVER","CONNECTION_LOST","namespaced","componentIndex","startMigration","isPaused","isPremappingValid","premapping","unfilledPremapping","filledPremapping","mutations","setComponentIndex","newIndex","setIsLoading","setStartMigration","setIsPaused","setIsPremappingValid","isValid","setDataSelectionIds","newIds","setDataSelectionTableData","newTableData","setPremapping","newPremapping","unfilledMapping","filledMapping","newFilledGroup","choices","entity","mapping","newUnfilledGroup","destinationUuid","getters","isMigrationAllowed","tableDataIds","some","premappingInput","displayUnfilledPremapping","displayFilledPremapping","newRunId","fetchPremapping","notifyPremappingValidWatchers","validatePremapping","generatePremapping","onInvalidMigrationAccessToken","updateStore","leftPointDescription","rightPointDescription","maxValue","rightPointClasses","isCurrencyChecked","isLanguageChecked","hasDifferentCurrency","sourceSystemCurrency","targetSystemCurrency","hasDifferentLanguage","sourceSystemLanguage","targetSystemLanguage","sourceSystemLocale","targetSystemLocale","isContinuable","onCheckboxValueChanged","items","selectedNumber","tabItems","swTabsItems","mounted","mountedComponent","tabs","checkIfNeedScroll","addScrollbarOffset","setTimeout","setActiveItem","onNewActiveItem","contentContainer","setActive","getErrorCountForGroupTab","currentValue","active","disableRouteParams","limit","paginationSteps","getList","start","page","end","Math","min","onInput","getClassesAfterValidation","expandTitle","collapseTitle","isExpanded","onClick","color","fontSize","lineHeight","avatarStyle","width","height","generateAvatarInitialsSize","avatarSize","shopAvatar","offsetHeight","round","migrationUiStoreInitService","storesInitializing","metaInfo","$createTitle","storeIsMigrationAllowed","migrationDisabled","migrateButtonDisabled","isMigrating","initUiStore","finally","onMigrate","contentComponent","onActionButtonClick","methodName","onConnectClick","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","connectionEstablished","requestStatus","isWarning","migrationRuns","migrationDateOptions","second","sortBy","sortDirection","oldParams","logDownloadEndpoint","runIdForLogDownload","runIdForRunClear","showRunClearConfirmModal","runClearConfirmModalIsLoading","isMediaProcessing","migrationColumns","getMigrationColumns","dateFilter","getApiBasePath","dataIndex","label","primary","allowResize","visible","align","normalizeListingParams","getMainListingParams","naturalSorting","parseInt","onMigrateButtonClick","onContextDownloadLogFile","downloadLogsOfRunForm","submit","clearDataOfRun","onContextClearRunClicked","onClearRunConfirmed","migrationRun","showModal","currentTab","runStatusSnippet","runStatusClasses","onCloseModal","addFilter","equals","tabReference","dataTabItem","newActiveTabItem","allMigrationErrors","migrationErrors","downloadUrl","columns","sortable","startIndex","endIndex","loadAllMigrationErrors","applySorting","getGroupedLogsOfRun","getErrorTitleSnippet","snippetKey","$te","submitDownload","downloadForm","allMigrationData","migrationData","progress","utils","StorageBroadcastService","receiveCallback","channelKey","_clientId","createId","_channelKey","_receiveCallback","addEventListener","messageReceived","localStorage","setItem","event","parse","getItem","removeItem","Application","WORKER_API_OPERATION","WorkerRequest","requestParams","workerStatusManager","onInterruptCB","_MAX_REQUEST_TIME","_DEFAULT_CHUNK_SIZE","_CHUNK_PROPORTION_UP_WEIGHT","_CHUNK_PROPORTION_DOWN_WEIGHT","_runId","runUuid","_requestParams","_workerStatusManager","_interrupt","_chunkSize","_lastChunkSize","_successfulChunk","_onInterruptCB","_migrateEntity2","_migrateProcess","set","_callInterruptCB","groupStartIndex","entityStartIndex","entityOffset","_args2","statusChangedError","groupIndex","groupProgress","entityIndex","entityName","entityCount","changeStatus","interrupt","WORKER_INTERRUPT_TYPE","STOP","entities","_migrateEntity","currentOffset","newOffset","_args3","_migrateEntityRequest","groupId","groupCurrentCount","groupTotal","offset","_callee4","_loop","_context5","beforeRequestTime","_context4","operation","_handleChunkSize","validToken","afterRequestTime","getTime","PAUSE","_x7","requestTime","factor","weightedFactor","ceil","_applicationRoot","getApplicationRoot","MIGRATION_ACCESS_TOKEN_NAME","MigrationWorkerService","migrationIndexingWorker","_broadcastResponseFlag","_broadcastService","_onBroadcastReceived","_migrationIndexingWorker","_workRunner","_interruptSubscriber","_restoreState","onBrowserTabClosing","preventDefault","returnValue","_callInterruptSubscriber","getState","swagMigrationAccessToken","migrationAccessToken","processStateResponse","isMigrationAccessTokenValid","accessToken","requestErrorCode","createMigration","returnState","runProgress","validMigrationRunToken","migrationRunning","indicies","_getIndiciesByEntityName","finishedCount","takeoverMigration","callback","processMediaFiles","_onInterrupt","_startWorkRunner","_migrateFinish","_resetProgress","migrateProcess","_this6","oldFlag","sendMessage","migrationMessage","_this7","_showFinishNotification","_assignThemes","_handleIndexing","dispatch","applicationRoot","actions","route","assignThemes","_this8","visited","token","errorList","isOtherMigrationRunning","showAbortMigrationConfirmDialog","isPausedBeforeAbortDialog","displayFlowChart","flowChartItemIndex","flowChartItemVariant","flowChartInitialItemVariants","isWarningConfirmed","abortMigrationBackText","componentIndexIsResult","abortButtonVisible","backButtonVisible","migrateButtonVisible","isFetching","startButtonVisible","premappingIsNotReady","warningIsNotReady","startButtonDisabled","pauseButtonVisible","pauseButtonDisabled","continueButtonVisible","onProcessMediaFiles","onFinishWithoutErrors","valid","beforeDestroy","beforeDestroyedComponent","shouldStartMigration","otherInstanceMigrating","restoreFlowChart","checkConnection","connectionCheckResponse","restoreRunningMigration","unsubscribeInterrupt","resetFlowChart","subscribeInterrupt","onInterrupt","onAbortButtonClick","pauseMigration","onSaveButtonClick","writePremapping","createNotificationSuccess","onBackButtonClick","onStartButtonClick","onPauseButtonClick","onContinueButtonClick","_callee5","onCloseAbortMigrationConfirmDialog","onTakeoverMigration","_callee6","_context6","onAbortOtherMigration","_this9","_callee7","_context7","abortMigration","onConfiscatedMigration","onStop","onPause","onConnectionLost","_this10","loadingScreenTakeover","_this11","onWarningConfirmationChanged","confirmed","SSL_REQUIRED_ERROR_CODE","CONNECTION_NAME_ERRORS","NAME_TO_SHORT","NAME_ALREADY_EXISTS","routes","getRoutes","childIsLoading","selectedProfile","childRouteReady","errorMessageSnippet","connectionNameErrorCode","currentErrorCode","migrationGeneralSettingRepository","modalSize","credentialsSuccess","credentialsError","currentRoute","modalTitleSnippet","buttonBackSnippet","buttonBackVisible","profileInformationComponentIsLoaded","buttonSecondarySnippet","buttonSecondaryVisible","buttonPrimarySnippet","introduction","connectionCreate","connectionSelect","buttonPrimaryDisabled","profileInformationComponent","getComponentRegistry","has","credentialsComponent","beforeRouteLeave","to","from","loadSelectedConnection","onChildRouteChanged","profileInstallation","trimCredentials","field","trim","onConnect","errors","onResponseError","doConnectionCheck","navigateToRoute","errorCode","checkForDisabledRoute","onNoConnectionSelected","onButtonBackClick","onButtonSecondaryClick","triggerPrimaryClick","onButtonPrimaryClick","navigateToNext","saveSelectedConnection","createNewConnection","selectedConnectionId","connectionResponse","chooseAction","checkConnectionName","newConnection","save","setting","onChildRouteReadyChanged","onCredentialsChanged","onProfileSelected","onChangeConnectionName","onChildIsLoadingChanged","onConnectionSelected","pluginIsLoading","pluginIsSaveSuccessful","isInstalled","pluginName","pluginRepository","refreshPlugin","pluginCriteria","setLimit","result","onInstall","setupPlugin","extensionHelperService","downloadStoreExtension","installStoreExtension","activateStoreExtension","cacheApiService","clear","currentConnectionId","connections","find","con","profiles","gateways","connectionNameError","profileHint","getProfiles","pushLinkToProfiles","selectDefaultProfile","profileSearch","searchParams","searchTerm","option","gatewaySearch","getText","onSelectProfile","onSelectGateway","getGateways","componentIsLoaded","override","runExists","loading","run","$super","acl","isAdmin","setConnectionId","setEnvironmentInformation","setRunId","setIsMigrating","setStatusIndex","setCurrentEntityGroupId","newId","setEntityGroups","setEntityProgress","targetGroup","resetProgress","Module","registerModule","MigrationProcessStore","MigrationUIStore","description","targetVersion","emptyScreen","component","path","parentPath","privilege","redirect","children","main","history","detail","dataSelector","processScreen","wizard","settingsItem","iconComponent","ApiService","MigrationApiService","_ApiService","_inherits","_super","_createSuper","httpClient","loginService","apiEndpoint","basicConfig","timeout","apiVersion","additionalHeaders","headers","getBasicHeaders","post","handleResponse","ProcessStoreInitService","_migrationGeneralSettingRepository","settings","UiStoreInitService","getDataSelection","dataSelection","selectedIds","MigrationIndexingApiService","lastIndexer","timestamp","addServiceProvider","container","initContainer","getContainer","MigrationIndexingWorker","indexingApiService","_indexingApiService","running","lastResult","indexing","migrationIndexingWorkerService","migrationIndexingApiService","debug","routeIndex","floor","routeCount","routeIndices","routePrevious","previousRoute","routeNext","nextRoute","navigateToPreviousPossible","navigateToNextPossible","matchCurrentRoute","updated","notifyCallback","routerCurrentRoute","warn","console","navigateToPrevious"],"mappings":"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","file":"static/js/swag-migration-assistant.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/bundles/swagmigrationassistant/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"p+FR\");\n","import template from './swag-migration-profile-shopware-api-page-information.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-profile-shopware-api-page-information', {\n    template,\n\n    computed: {\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n});\n","export default \"{% block swag_migration_wizard_page_plugin_information %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-plugin-information\\\">\\n\\n        {% block swag_migration_wizard_page_plugin_information_content %}\\n            <div class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_plugin_information_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                        {% block swag_migration_wizard_page_plugin_information_svg %}\\n                            <img class=\\\"swag-migration-wizard__plugin\\\" :src=\\\"assetFilter('/swagmigrationassistant/static/img/wizard-shopware55-api-plugin-information.svg')\\\">\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_plugin_information_title %}\\n                            <h3 class=\\\"information__header\\\">\\n                                {{ $tc('swag-migration.wizard.pages.profileInformation.shopware55Api.contentTitle') }}\\n                            </h3>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_plugin_information_api_hint %}\\n                            <p class=\\\"swag-migration-wizard__description\\\">\\n                                {{ $tc('swag-migration.wizard.pages.profileInformation.shopware55Api.contentInformation') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_plugin_information_plugin_link %}\\n                            <div class=\\\"swag-migration-wizard__link\\\">\\n                                <a class=\\\"link\\\" target=\\\"_blank\\\" href=\\\"https://store.shopware.com/search?sSearch=Swag226607479310\\\">{{ $tc('swag-migration.wizard.pages.profileInformation.shopware55Api.pluginLink') }}</a>\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware57-local-credential-form',\n    'swag-migration-profile-shopware-local-credential-form',\n    {},\n);\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-progress-bar.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2161c9b4\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-confirm-warning.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7962499c\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-premapping.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"0958cc28\", content, true, {});","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware57-api-credential-form',\n    'swag-migration-profile-shopware-api-credential-form',\n    {},\n);\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware54-api-credential-form',\n    'swag-migration-profile-shopware-api-credential-form',\n    {},\n);\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-dashboard-card.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"631e0776\", content, true, {});","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware55-api-credential-form',\n    'swag-migration-profile-shopware-api-credential-form',\n    {},\n);\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-empty-screen.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"04bbe4fe\", content, true, {});","const context = require.context('./', true, /\\.\\/[a-z0-9-]+\\/[a-z0-9-]+\\/[a-z0-9-]+\\/index\\.js$/);\ncontext.keys().forEach((key) => {\n    context(key);\n});\n","import template from './swag-migration-profile-shopware6-api-credential-form.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-profile-shopware6major-api-credential-form', {\n    template,\n\n    props: {\n        credentials: {\n            type: Object,\n            default() {\n                return {};\n            },\n        },\n    },\n\n    data() {\n        return {\n            inputCredentials: {\n                endpoint: '',\n                apiUser: '',\n                apiPassword: '',\n            },\n        };\n    },\n\n    computed: {\n        apiPasswordLength() {\n            if (this.inputCredentials.apiPassword === null) {\n                return 0;\n            }\n\n            return this.inputCredentials.apiPassword.length;\n        },\n    },\n\n    watch: {\n        credentials: {\n            immediate: true,\n            handler(newCredentials) {\n                if (newCredentials === null || Object.keys(newCredentials).length < 1) {\n                    this.emitCredentials(this.inputCredentials);\n                    return;\n                }\n\n                this.inputCredentials = newCredentials;\n                this.emitOnChildRouteReadyChanged(\n                    this.areCredentialsValid(this.inputCredentials),\n                );\n            },\n        },\n\n        inputCredentials: {\n            deep: true,\n            handler(newInputCredentials) {\n                delete newInputCredentials.bearer_token;\n                this.emitCredentials(newInputCredentials);\n            },\n        },\n    },\n\n    methods: {\n        areCredentialsValid(newInputCredentials) {\n            return (\n                this.apiPasswordValid(newInputCredentials.apiPassword) &&\n                this.validateInput(newInputCredentials.endpoint) &&\n                this.validateInput(newInputCredentials.apiUser) &&\n                newInputCredentials.endpoint !== 'http://' &&\n                newInputCredentials.endpoint !== 'https://'\n            );\n        },\n\n        validateInput(input) {\n            return input !== null && input !== '';\n        },\n\n        apiPasswordValid(apiPassword) {\n            return apiPassword !== null && apiPassword.length >= 1;\n        },\n\n        emitOnChildRouteReadyChanged(isReady) {\n            this.$emit('onChildRouteReadyChanged', isReady);\n        },\n\n        emitCredentials(newInputCredentials) {\n            this.$emit('onCredentialsChanged', newInputCredentials);\n            this.emitOnChildRouteReadyChanged(\n                this.areCredentialsValid(newInputCredentials),\n            );\n        },\n\n        onKeyPressEnter() {\n            this.$emit('onTriggerPrimaryClick');\n        },\n    },\n});\n","export default \"<div class=\\\"swag-migration-wizard swag-migration-wizard-page-credentials\\\"\\n     @keypress.enter=\\\"onKeyPressEnter\\\">\\n\\n    {% block swag_migration_wizard_page_credentials_content %}\\n        <div class=\\\"swag-migration-wizard__content\\\">\\n\\n            {% block swag_migration_wizard_page_credentials_information %}\\n                <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                    {% block swag_migration_wizard_page_credentials_api_hint %}\\n                        <p class=\\\"swag-migration-wizard__description\\\">\\n                            {{ $tc('swag-migration.wizard.pages.credentials.shopware6.api.contentInformation') }}\\n                        </p>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_migration_wizard_page_credentials_credentials %}\\n                <div class=\\\"swag-migration-wizard__form\\\">\\n\\n                    {% block swag_migration_wizard_page_credentials_apiuser_field %}\\n                        <sw-text-field v-autofocus\\n                                       v-model:value=\\\"inputCredentials.apiUser\\\"\\n                                       name=\\\"sw-field--apiUser\\\"\\n                                       :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiUserLabel')\\\"\\n                                       :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiUserPlaceholder')\\\"\\n                                       :helpText=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiUserTooltip')\\\"\\n                                       validation=\\\"required\\\"\\n                                       required>\\n\\n                            {% block swag_migration_wizard_page_credentials_apiuser_icon %}\\n                                <template #suffix>\\n                                    <sw-icon name=\\\"regular-user\\\"></sw-icon>\\n                                </template>\\n                            {% endblock %}\\n                        </sw-text-field>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_page_credentials_apiPassword_field %}\\n                        <sw-password-field\\n                                       v-model:value=\\\"inputCredentials.apiPassword\\\"\\n                                       name=\\\"sw-field--apiPassword\\\"\\n                                       :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiPasswordLabel')\\\"\\n                                       :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiPasswordPlaceholder')\\\"\\n                                       :helpText=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiPasswordTooltip')\\\"\\n                                       validation=\\\"required\\\"\\n                                       required>\\n                        </sw-password-field>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_page_credentials_endpoint_field %}\\n                        <sw-url-field\\n                                      v-model:value=\\\"inputCredentials.endpoint\\\"\\n                                      :validation=\\\"inputCredentials.endpoint !== 'http://' && inputCredentials.endpoint !== 'https://'\\\"\\n                                      :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.endpointLabel')\\\"\\n                                      :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.endpointPlaceholder')\\\"\\n                                      :switchLabel=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.endpointSSLLabel')\\\"\\n                                      required>\\n                        </sw-url-field>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n        </div>\\n    {% endblock %}\\n</div>\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-assistant.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"f5f62cba\", content, true, {});","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware55-api-page-information',\n    'swag-migration-profile-shopware-api-page-information',\n    {},\n);\n\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-expand-div.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7ffe1981\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-loading-screen-takeover.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"79d5e9ee\", content, true, {});","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware56-api-page-information',\n    'swag-migration-profile-shopware-api-page-information',\n    {},\n);\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-loading-screen-connection-lost.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"655793d7\", content, true, {});","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware54-local-credential-form',\n    'swag-migration-profile-shopware-local-credential-form',\n    {},\n);\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware54-api-page-information',\n    'swag-migration-profile-shopware-api-page-information',\n    {},\n);\n\n","export default \"<div class=\\\"swag-migration-wizard swag-migration-wizard-page-credentials\\\"\\n     @keypress.enter=\\\"onKeyPressEnter\\\">\\n\\n    {% block swag_migration_wizard_page_credentials_content %}\\n        <div class=\\\"swag-migration-wizard__content\\\">\\n\\n            {% block swag_migration_wizard_page_credentials_information %}\\n                <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                    {% block swag_migration_wizard_page_credentials_api_hint %}\\n                        <p class=\\\"swag-migration-wizard__description\\\">\\n                            {{ $tc('swag-migration.wizard.pages.credentials.shopware55.api.contentInformation') }}\\n                        </p>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_migration_wizard_page_credentials_credentials %}\\n            <div class=\\\"swag-migration-wizard__form\\\">\\n\\n                {% block swag_migration_wizard_page_credentials_apikey_field %}\\n                    <sw-text-field v-autofocus\\n                                   v-model:value=\\\"inputCredentials.apiKey\\\"\\n                                   name=\\\"sw-field--apiKey\\\"\\n                                   :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiKeyLabel')\\\"\\n                                   :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiKeyPlaceholder')\\\"\\n                                   :helpText=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiKeyTooltip')\\\"\\n                                   :error=\\\"apiKeyError\\\">\\n\\n                        {% block swag_migration_wizard_page_credentials_apikey_icon %}\\n                            <template #suffix>\\n                                <sw-icon name=\\\"regular-key\\\"></sw-icon>\\n                            </template>\\n                        {% endblock %}\\n                    </sw-text-field>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_credentials_apiuser_field %}\\n                    <sw-text-field\\n                                   v-model:value=\\\"inputCredentials.apiUser\\\"\\n                                   name=\\\"sw-field--apiUser\\\"\\n                                   :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiUserLabel')\\\"\\n                                   :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiUserPlaceholder')\\\"\\n                                   :helpText=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiUserTooltip')\\\"\\n                                   validation=\\\"required\\\">\\n\\n                        {% block swag_migration_wizard_page_credentials_apiuser_icon %}\\n                            <template #suffix>\\n                                <sw-icon name=\\\"regular-user\\\"></sw-icon>\\n                            </template>\\n                        {% endblock %}\\n                    </sw-text-field>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_credentials_endpoint_field %}\\n                    <sw-url-field\\n                                  v-model:value=\\\"inputCredentials.endpoint\\\"\\n                                  :validation=\\\"inputCredentials.endpoint !== 'http://' && inputCredentials.endpoint !== 'https://'\\\"\\n                                  :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.endpointLabel')\\\"\\n                                  :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.endpointPlaceholder')\\\"\\n                                  :switchLabel=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.endpointSSLLabel')\\\">\\n                    </sw-url-field>\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n        </div>\\n    {% endblock %}\\n</div>\\n\";","import template from './swag-migration-profile-shopware-api-credential-form.html.twig';\n\nconst { Component } = Shopware;\nconst ShopwareError = Shopware.Classes.ShopwareError;\nconst API_KEY_INVALID_ERROR_CODE = 'SWAG_MIGRATION_INVALID_API_KEY';\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-profile-shopware-api-credential-form', {\n    template,\n\n    props: {\n        credentials: {\n            type: Object,\n            default() {\n                return {};\n            },\n        },\n    },\n\n    data() {\n        return {\n            inputCredentials: {\n                endpoint: '',\n                apiUser: '',\n                apiKey: '',\n            },\n            apiKeyErrorCode: '',\n        };\n    },\n\n    computed: {\n        apiKeyLength() {\n            if (this.inputCredentials.apiKey === null) {\n                return 0;\n            }\n\n            return this.inputCredentials.apiKey.length;\n        },\n\n        apiKeyError() {\n            if (this.apiKeyErrorCode === '') {\n                return null;\n            }\n\n            return new ShopwareError({\n                code: this.apiKeyErrorCode,\n                meta: {\n                    parameters: {\n                        length: this.apiKeyLength,\n                    },\n                },\n            });\n        },\n    },\n\n    watch: {\n        credentials: {\n            immediate: true,\n            handler(newCredentials) {\n                if (newCredentials === null || Object.keys(newCredentials).length < 1) {\n                    this.emitCredentials(this.inputCredentials);\n                    return;\n                }\n\n                this.inputCredentials = newCredentials;\n                this.emitOnChildRouteReadyChanged(\n                    this.areCredentialsValid(this.inputCredentials),\n                );\n            },\n        },\n\n        inputCredentials: {\n            deep: true,\n            handler(newInputCredentials) {\n                this.emitCredentials(newInputCredentials);\n            },\n        },\n    },\n\n    methods: {\n        areCredentialsValid(newInputCredentials) {\n            return (\n                this.apiKeyValid(newInputCredentials.apiKey) &&\n                this.validateInput(newInputCredentials.endpoint) &&\n                this.validateInput(newInputCredentials.apiUser) &&\n                newInputCredentials.endpoint !== 'http://' &&\n                newInputCredentials.endpoint !== 'https://'\n            );\n        },\n\n        validateInput(input) {\n            return input !== null && input !== '';\n        },\n\n        apiKeyValid(apiKey) {\n            if (apiKey === null || apiKey.length < 40 || apiKey.length > 40) {\n                this.apiKeyErrorCode = API_KEY_INVALID_ERROR_CODE;\n                return false;\n            }\n\n            this.apiKeyErrorCode = '';\n            return true;\n        },\n\n        emitOnChildRouteReadyChanged(isReady) {\n            this.$emit('onChildRouteReadyChanged', isReady);\n        },\n\n        emitCredentials(newInputCredentials) {\n            this.$emit('onCredentialsChanged', newInputCredentials);\n            this.emitOnChildRouteReadyChanged(\n                this.areCredentialsValid(newInputCredentials),\n            );\n        },\n\n        onKeyPressEnter() {\n            this.$emit('onTriggerPrimaryClick');\n        },\n    },\n});\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-history.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"b461c0ca\", content, true, {});","import template from './swag-migration-profile-shopware-local-credential-form.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-profile-shopware-local-credential-form', {\n    template,\n\n    props: {\n        credentials: {\n            type: Object,\n            default() {\n                return {};\n            },\n        },\n    },\n\n    data() {\n        return {\n            inputCredentials: {\n                dbHost: '',\n                dbPort: '3306',\n                dbUser: '',\n                dbPassword: '',\n                dbName: '',\n                installationRoot: '',\n            },\n        };\n    },\n\n    watch: {\n        credentials: {\n            immediate: true,\n            handler(newCredentials) {\n                if (newCredentials === null || Object.keys(newCredentials).length < 1) {\n                    this.emitCredentials(this.inputCredentials);\n                    return;\n                }\n\n                this.inputCredentials = newCredentials;\n                this.emitOnChildRouteReadyChanged(\n                    this.areCredentialsValid(this.inputCredentials),\n                );\n            },\n        },\n\n        inputCredentials: {\n            deep: true,\n            handler(newInputCredentials) {\n                this.emitCredentials(newInputCredentials);\n            },\n        },\n    },\n\n    methods: {\n        areCredentialsValid(newInputCredentials) {\n            return (newInputCredentials.dbHost !== '' &&\n                newInputCredentials.dbPort !== '' &&\n                newInputCredentials.dbName !== '' &&\n                newInputCredentials.dbUser !== '' &&\n                newInputCredentials.dbPassword !== '' &&\n                newInputCredentials.installationRoot !== ''\n            );\n        },\n\n        emitOnChildRouteReadyChanged(isReady) {\n            this.$emit('onChildRouteReadyChanged', isReady);\n        },\n\n        emitCredentials(newInputCredentials) {\n            this.$emit('onCredentialsChanged', newInputCredentials);\n            this.emitOnChildRouteReadyChanged(\n                this.areCredentialsValid(newInputCredentials),\n            );\n        },\n\n        onKeyPressEnter() {\n            this.$emit('onTriggerPrimaryClick');\n        },\n    },\n});\n","export default \"<div class=\\\"swag-migration-wizard swag-migration-wizard-page-credentials\\\"\\n     @keypress.enter=\\\"onKeyPressEnter\\\">\\n\\n    {% block swag_migration_wizard_page_credentials_content %}\\n        <div class=\\\"swag-migration-wizard__content\\\">\\n\\n            {% block swag_migration_wizard_page_credentials_information %}\\n                <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                    {% block swag_migration_wizard_page_credentials_local_hint %}\\n                        {{ $tc('swag-migration.wizard.pages.credentials.shopware55.local.contentInformation') }}\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_migration_wizard_page_credentials_credentials %}\\n                <div class=\\\"swag-migration-wizard__form\\\">\\n\\n                    {% block swag_migration_wizard_page_credentials_local_db_host_port_group %}\\n                        <sw-container columns=\\\"1fr 80px\\\"\\n                                      gap=\\\"16px\\\">\\n\\n                            {% block swag_migration_wizard_page_credentials_local_dbhost_field %}\\n                                <sw-text-field v-autofocus\\n                                               v-model:value=\\\"inputCredentials.dbHost\\\"\\n                                               name=\\\"sw-field--dbHost\\\"\\n                                               :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbHostLabel')\\\"\\n                                               :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbHostPlaceholder')\\\">\\n                                </sw-text-field>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_wizard_page_credentials_local_dbport_field %}\\n                                <sw-text-field\\n                                               v-model:value=\\\"inputCredentials.dbPort\\\"\\n                                               name=\\\"sw-field--dbPort\\\"\\n                                               :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbPortLabel')\\\">\\n                                </sw-text-field>\\n                            {% endblock %}\\n                        </sw-container>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_page_credentials_local_dbuser_field %}\\n                        <sw-text-field\\n                                       v-model:value=\\\"inputCredentials.dbUser\\\"\\n                                       name=\\\"sw-field--dbUser\\\"\\n                                       :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbUserLabel')\\\"\\n                                       :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbUserPlaceholder')\\\">\\n                        </sw-text-field>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_page_credentials_local_dbpassword_field %}\\n                        <sw-password-field\\n                                           v-model:value=\\\"inputCredentials.dbPassword\\\"\\n                                           name=\\\"sw-field--dbPassword\\\"\\n                                           :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbPasswordLabel')\\\"\\n                                           :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbPasswordPlaceholder')\\\">\\n                        </sw-password-field>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_page_credentials_local_dbname_field %}\\n                        <sw-text-field\\n                                       v-model:value=\\\"inputCredentials.dbName\\\"\\n                                       name=\\\"sw-field--dbName\\\"\\n                                       :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbNameLabel')\\\"\\n                                       :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbNamePlaceholder')\\\">\\n                        </sw-text-field>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_page_credentials_local_installationroot_field %}\\n                        <sw-text-field\\n                                       v-model:value=\\\"inputCredentials.installationRoot\\\"\\n                                       name=\\\"sw-field--installationRoot\\\"\\n                                       :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.installationRoot')\\\"\\n                                       :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.installationRootPlaceholder')\\\">\\n                        </sw-text-field>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n        </div>\\n    {% endblock %}\\n</div>\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-main-page.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"892da8e8\", content, true, {});","var map = {\n\t\"./shopware/api/swag-migration-profile-shopware-api-credential-form/index.js\": \"S74U\",\n\t\"./shopware/api/swag-migration-profile-shopware-api-page-information/index.js\": \"1IpX\",\n\t\"./shopware/local/swag-migration-profile-shopware-local-credential-form/index.js\": \"Sj8j\",\n\t\"./shopware54/api/swag-migration-profile-shopware54-api-credential-form/index.js\": \"CtuJ\",\n\t\"./shopware54/api/swag-migration-profile-shopware54-api-page-information/index.js\": \"RHoj\",\n\t\"./shopware54/local/swag-migration-profile-shopware54-local-credential-form/index.js\": \"PxKa\",\n\t\"./shopware55/api/swag-migration-profile-shopware55-api-credential-form/index.js\": \"G90u\",\n\t\"./shopware55/api/swag-migration-profile-shopware55-api-page-information/index.js\": \"LT5b\",\n\t\"./shopware55/local/swag-migration-profile-shopware55-local-credential-form/index.js\": \"m64i\",\n\t\"./shopware56/api/swag-migration-profile-shopware56-api-credential-form/index.js\": \"V2My\",\n\t\"./shopware56/api/swag-migration-profile-shopware56-api-page-information/index.js\": \"PFh6\",\n\t\"./shopware56/local/swag-migration-profile-shopware56-local-credential-form/index.js\": \"UWos\",\n\t\"./shopware57/api/swag-migration-profile-shopware57-api-credential-form/index.js\": \"BeaA\",\n\t\"./shopware57/api/swag-migration-profile-shopware57-api-page-information/index.js\": \"rDrH\",\n\t\"./shopware57/local/swag-migration-profile-shopware57-local-credential-form/index.js\": \"1p9f\",\n\t\"./shopware6/api/swag-migration-profile-shopware6-api-credential-form/index.js\": \"Jw9O\",\n\t\"./shopware6/api/swag-migration-profile-shopware6-api-page-information/index.js\": \"awJz\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"Toqh\";","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware56-local-credential-form',\n    'swag-migration-profile-shopware-local-credential-form',\n    {},\n);\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware56-api-credential-form',\n    'swag-migration-profile-shopware-api-credential-form',\n    {},\n);\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-history-detail-errors.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"74128601\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-tab-card.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"ed376352\", content, true, {});","import template from './swag-migration-profile-shopware6-api-page-information.html.twig';\nimport './swag-migration-profile-shopware6-api-page-information.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-profile-shopware6major-api-page-information', {\n    template,\n});\n","export default \"{% block swag_migration_wizard_page_plugin_information_shopware6 %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-plugin-information swag-migration-profile-shopware6-api-page-information\\\">\\n\\n        {% block swag_migration_wizard_page_plugin_information_shopware6_content %}\\n            <div class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_plugin_information_shopware6_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                        {% block swag_migration_wizard_page_plugin_information_shopware6_icon %}\\n                            <div class=\\\"swag-migration-profile-shopware6-api-page-information__icon sw-settings-item\\\">\\n                                <div class=\\\"sw-settings-item__icon background--enabled\\\">\\n                                    <sw-icon name=\\\"regular-cog\\\">\\n                                    </sw-icon>\\n                                </div>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_plugin_information_shopware6_title %}\\n                            <h3 class=\\\"information__header\\\">\\n                                {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.contentTitle') }}\\n                            </h3>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_plugin_information_shopware6_api_hint %}\\n\\n                            {% block swag_migration_wizard_page_plugin_information_shopware6_api_hint_plugin %}\\n                                <div class=\\\"swag-migration-wizard__description swag-migration-profile-shopware6-api-page-information__card\\\">\\n                                    <h4 class=\\\"information__header\\\">\\n                                        {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.plugin.title') }}\\n                                    </h4>\\n                                    <p>{{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.plugin.description') }}</p>\\n\\n                                    <div class=\\\"swag-migration-wizard__link\\\">\\n                                        <a class=\\\"link\\\"\\n                                           target=\\\"_blank\\\"\\n                                           :href=\\\"$tc('swag-migration.wizard.pages.profileInformation.shopware6Api.plugin.link')\\\">\\n                                            {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.plugin.linkText') }}\\n                                        </a>\\n                                    </div>\\n                                </div>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_wizard_page_plugin_information_shopware6_api_hint_integration %}\\n                                <div class=\\\"swag-migration-wizard__description swag-migration-profile-shopware6-api-page-information__card\\\">\\n                                    <h4 class=\\\"information__header\\\">\\n                                        {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.integration.title') }}\\n                                    </h4>\\n                                    <p>{{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.integration.description') }}</p>\\n\\n                                    <div class=\\\"swag-migration-wizard__link\\\">\\n                                        <a class=\\\"link\\\"\\n                                           target=\\\"_blank\\\"\\n                                           :href=\\\"$tc('swag-migration.wizard.pages.profileInformation.shopware6Api.integration.link')\\\">\\n                                            {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.integration.linkText') }}\\n                                        </a>\\n                                    </div>\\n                                </div>\\n                            {% endblock %}\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-history-detail-data.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"fe5abd7c\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-shop-information.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6ed95d4e\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-settings-icon.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"32473a04\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-process-screen.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6bae53a7\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-history-detail.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3dba3d47\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-data-selector.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"aceed842\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-result-screen.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7518f2f8\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-wizard-page-connection-create.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5bc4e13d\", content, true, {});","let notificationId = null;\n\nShopware.WorkerNotification.register('newsletterRecipientTask', {\n    name: 'SwagMigrationAssistant\\\\Migration\\\\MessageQueue\\\\Message\\\\ProcessMediaMessage',\n    fn: onMediaProcessingMessageFound,\n});\n\n/**\n * @package services-settings\n */\nfunction onMediaProcessingMessageFound(next, { $root, entry, notification }) {\n    const mediaFileCount = entry.size * 5;\n\n    // Create notification config object\n    const config = {\n        title: $root.$t('swag-migration.worker-listener.mediaProcessing.title'),\n        message: $root.$tc(\n            'swag-migration.worker-listener.mediaProcessing.message',\n            mediaFileCount,\n        ),\n        variant: 'info',\n        metadata: {\n            size: mediaFileCount,\n        },\n        growl: false,\n        isLoading: true,\n    };\n\n    // Create new notification\n    if (mediaFileCount && notificationId === null) {\n        notification.create(config).then((uuid) => {\n            notificationId = uuid;\n        });\n        next();\n    }\n\n    // Update existing notification\n    if (notificationId !== null) {\n        config.uuid = notificationId;\n\n        if (mediaFileCount === 0) {\n            config.title = $root.$t(\n                'swag-migration.worker-listener.mediaProcessing.titleSuccess',\n            );\n            config.message = $root.$t(\n                'swag-migration.worker-listener.mediaProcessing.messageSuccess',\n            );\n            config.isLoading = false;\n        }\n        notification.update(config);\n    }\n\n    next();\n}\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-wizard.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6705130b\", content, true, {});","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware55-local-credential-form',\n    'swag-migration-profile-shopware-local-credential-form',\n    {},\n);\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-grid-selection.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"b02ec94c\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-profile-shopware6-api-page-information.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"f40d46f6\", content, true, {});","import template from './swag-migration-grid-extended.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend('swag-migration-grid-extended', 'sw-grid', {\n    template,\n\n    props: {\n        disabledAttribute: {\n            type: String,\n            default: 'disabled',\n        },\n    },\n\n    methods: {\n        isDisabled(item) {\n            return item[this.disabledAttribute];\n        },\n\n        extendedGridRowClasses(item, index) {\n            const classes = {\n                'is--selected': this.isSelected(item.id) && !this.isDisabled(item),\n                'is--deleted': item.isDeleted,\n                'is--new': item.isLocal,\n                'is--disabled': this.isDisabled(item),\n            };\n\n            classes[`sw-grid__row--${index}`] = true;\n\n            return classes;\n        },\n    },\n});\n","export default \"{% block sw_grid_body_slot_items %}\\n    <sw-grid-row :class=\\\"extendedGridRowClasses(item, index)\\\"\\n                 :style=\\\"columnFlex\\\"\\n                 :key=\\\"item.id\\\"\\n                 :item=\\\"item\\\"\\n                 :index=\\\"index\\\"\\n                 @inline-edit-finish=\\\"onInlineEditFinish\\\"\\n                 @inline-edit-start=\\\"onInlineEditStart\\\">\\n\\n        {% block sw_grid_body_item_selectable %}\\n            <div v-if=\\\"selectable\\\" class=\\\"sw-grid-column\\\">\\n                <div class=\\\"sw-grid__cell-content\\\">\\n                    <sw-checkbox-field :value=\\\"isSelected(item.id)\\\"\\n                                       :disabled=\\\"isDisabled(item)\\\"\\n                                       @update:value=\\\"selectItem($event, item)\\\">\\n                    </sw-checkbox-field>\\n                </div>\\n            </div>\\n        {% endblock %}\\n\\n        <slot name=\\\"columns\\\" :item=\\\"item\\\">\\n            {% block sw_grid_slot_columns %}{% endblock %}\\n        </slot>\\n    </sw-grid-row>\\n{% endblock %}\\n\";","import template from './swag-migration-history-selected-data.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-history-selected-data', {\n    template,\n\n    props: {\n        entityGroups: {\n            type: Array,\n            default: () => { return []; },\n        },\n    },\n\n    computed: {\n        dataSnippets() {\n            const snippets = [];\n            this.entityGroups.forEach((group) => {\n                if (group.id !== 'processMediaFiles') {\n                    snippets.push(\n                        group.snippet,\n                    );\n                }\n            });\n\n            return snippets;\n        },\n    },\n});\n","export default \"{% block swag_migration_history_selected_data %}\\n    <div class=\\\"swag-migration-history-selected-data\\\">\\n        <template v-for=\\\"(snippet, index) in dataSnippets\\\">\\n\\n            {% block swag_migration_history_selected_data_entityGroupSnippet %}\\n                {{ $tc(snippet) }}<template v-if=\\\"index !== (dataSnippets.length - 1)\\\">, </template>\\n            {% endblock %}\\n        </template>\\n    </div>\\n{% endblock %}\";","const { State } = Shopware;\n\n/**\n * Describes the current step in the migration (status).\n *\n * @package services-settings\n * @type {Readonly<{\n *                  WAITING: number,\n *                  PREMAPPING:number,\n *                  FETCH_DATA: number,\n *                  WRITE_DATA: number,\n *                  PROCESS_MEDIA_FILES: number,\n *                  FINISHED: number\n *                 }>}\n */\nexport const MIGRATION_STATUS = Object.freeze({\n    WAITING: -1,\n    PREMAPPING: 0,\n    FETCH_DATA: 1,\n    WRITE_DATA: 2,\n    PROCESS_MEDIA_FILES: 3,\n    FINISHED: 4,\n});\n\nconst MIGRATION_DISPLAY_STATUS = {};\nObject.keys(MIGRATION_STATUS).forEach((key) => {\n    if (!(key === 'WAITING' || key === 'PREMAPPING' || key === 'FINISHED')) {\n        MIGRATION_DISPLAY_STATUS[MIGRATION_STATUS[key]] = key;\n    }\n});\n\n\nexport { MIGRATION_DISPLAY_STATUS };\n\n\nexport class WorkerStatusManager {\n    /**\n     * @param {MigrationApiService} migrationService\n     */\n    constructor(migrationService) {\n        this._migrationService = migrationService;\n        this._migrationProcessState = State.get('swagMigration/process');\n    }\n\n    /**\n     * This handles the necessary things before we start working on the new status.\n     * For example it resets the progress and updates the counts before the 'WRITE_DATA' operation.\n     *\n     * @param {string} runId\n     * @param {?number} newStatus\n     * @returns {Promise}\n     */\n    changeStatus(runId, newStatus = null) {\n        if (newStatus === null) {\n            newStatus = this._migrationProcessState.statusIndex;\n        }\n\n        return new Promise((resolve, reject) => {\n            if (newStatus === MIGRATION_STATUS.WRITE_DATA) {\n                this.beforeWriteProgress(runId).then((...params) => {\n                    this.onStatusPreparationFinished(newStatus);\n                    resolve(...params);\n                }).catch((err) => {\n                    this.onStatusPreparationFinished(newStatus);\n                    reject(err);\n                });\n                return;\n            }\n\n            if (newStatus === MIGRATION_STATUS.PROCESS_MEDIA_FILES) {\n                this.beforeProcessMedia(runId).then((...params) => {\n                    this.onStatusPreparationFinished(newStatus);\n                    resolve(...params);\n                }).catch((err) => {\n                    this.onStatusPreparationFinished(newStatus);\n                    reject(err);\n                });\n                return;\n            }\n\n            if (newStatus === MIGRATION_STATUS.FINISHED) {\n                this.onFinish(runId).then((...params) => {\n                    this.onStatusPreparationFinished(newStatus);\n                    resolve(...params);\n                }).catch((err) => {\n                    this.onStatusPreparationFinished(newStatus);\n                    reject(err);\n                });\n                return;\n            }\n\n            this.onStatusPreparationFinished(newStatus);\n            resolve();\n        });\n    }\n\n    onStatusPreparationFinished(newStatus) {\n        State.commit('swagMigration/process/setStatusIndex', newStatus);\n    }\n\n    beforeWriteProgress(runId) {\n        return new Promise(async (resolve, reject) => {\n            let requestRetry = true;\n            let requestFailedCount = 0;\n            /* eslint-disable no-await-in-loop, no-loop-func */\n            while (requestRetry) {\n                await this._migrationService.updateWriteProgress(runId).then((response) => {\n                    response = response.filter((group) => {\n                        return group.id !== 'processMediaFiles';\n                    });\n                    State.commit('swagMigration/process/setEntityGroups', response);\n                    requestRetry = false;\n                }).catch(() => {\n                    requestFailedCount += 1;\n                });\n\n                if (requestFailedCount >= 3) {\n                    requestRetry = false;\n                    reject();\n                    return;\n                }\n            }\n            /* eslint-enable no-await-in-loop, no-loop-func */\n\n            resolve();\n        });\n    }\n\n    beforeProcessMedia(runId) {\n        return new Promise(async (resolve, reject) => {\n            let requestRetry = true;\n            let requestFailedCount = 0;\n            /* eslint-disable no-await-in-loop, no-loop-func */\n            while (requestRetry) {\n                await this._migrationService.updateMediaFilesProgress(runId).then((response) => {\n                    const newEntityGroups = response.filter(group => group.id === 'processMediaFiles');\n                    State.commit('swagMigration/process/setEntityGroups', newEntityGroups);\n                    requestRetry = false;\n                }).catch(() => {\n                    requestFailedCount += 1;\n                });\n\n                if (requestFailedCount >= 3) {\n                    requestRetry = false;\n                    reject();\n                    return;\n                }\n            }\n            /* eslint-enable no-await-in-loop, no-loop-func */\n\n            resolve();\n        });\n    }\n\n    onFinish(runId) {\n        return new Promise(async (resolve, reject) => {\n            let requestRetry = true;\n            let requestFailedCount = 0;\n            /* eslint-disable no-await-in-loop, no-loop-func */\n            while (requestRetry) {\n                await this._migrationService.finishMigration(runId).then(() => {\n                    requestRetry = false;\n                }).catch(() => {\n                    requestFailedCount += 1;\n                });\n\n                if (requestFailedCount >= 3) {\n                    requestRetry = false;\n                    reject();\n                    return;\n                }\n            }\n            /* eslint-enable no-await-in-loop, no-loop-func */\n\n            resolve();\n        });\n    }\n}\n\nexport default {\n    WorkerStatusManager,\n    MIGRATION_STATUS,\n};\n","import template from './swag-migration-loading-screen.html.twig';\nimport './swag-migration-loading-screen.scss';\nimport { MIGRATION_DISPLAY_STATUS } from\n'../../../../../core/service/migration/swag-migration-worker-status-manager.service';\n\nconst { Component, State } = Shopware;\nconst { mapState, mapGetters } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-loading-screen', {\n    template,\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'statusIndex',\n            'currentEntityGroupId',\n        ]),\n\n        ...mapState('swagMigration/ui', [\n            'isPaused',\n        ]),\n\n        ...mapGetters('swagMigration/process', [\n            'displayEntityGroups',\n        ]),\n\n        currentStatus() {\n            return MIGRATION_DISPLAY_STATUS[this.statusIndex];\n        },\n\n        progressBarValue() {\n            return this.displayEntityGroups.reduce((sum, group) => sum + group.currentCount, 0);\n        },\n\n        progressBarMaxValue() {\n            return this.displayEntityGroups.reduce((sum, group) => sum + group.total, 0);\n        },\n\n        progressBarTitle() {\n            if (this.currentEntityGroupId === '') {\n                return '';\n            }\n\n            return `${this.$tc(\n                `swag-migration.index.selectDataCard.dataSelection.${this.currentEntityGroupId}`,\n            )}`;\n        },\n\n        progressBarLeftPointDescription() {\n            return this.currentStatus === undefined ? '' :\n                `${this.$tc(`swag-migration.index.loadingScreenCard.status.${this.currentStatus}.short`)}`;\n        },\n\n        caption() {\n            return this.currentStatus === undefined ? '' :\n                this.$tc(`swag-migration.index.loadingScreenCard.status.${this.currentStatus}.caption`);\n        },\n\n        statusLong() {\n            return this.currentStatus === undefined ? '' :\n                this.$tc(`swag-migration.index.loadingScreenCard.status.${this.currentStatus}.long`);\n        },\n\n        hint() {\n            return this.currentStatus === undefined ? '' :\n                this.$tc(`swag-migration.index.loadingScreenCard.status.${this.currentStatus}.hint`);\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            State.commit('swagMigration/process/resetProgress');\n        },\n    },\n});\n","export default \"{% block swag_migration_loading_screen %}\\n    <div class=\\\"swag-migration-loading-screen\\\">\\n\\n        {% block swag_migration_loading_screen_card %}\\n            <sw-card\\n                v-show=\\\"!isPaused\\\"\\n                class=\\\"swag-migration-loading-screen__card\\\"\\n                position-identifier=\\\"swag-migration-loading-screen__card\\\"\\n            >\\n\\n                {% block swag_migration_index_loading_screen_content %}\\n                    <div class=\\\"swag-migration-loading-screen__content\\\">\\n\\n                        {% block swag_migration_index_loading_screen_header %}\\n                            <div class=\\\"swag-migration-loading-screen__header\\\">\\n\\n                                {% block swag_migration_index_loading_screen_title %}\\n                                    <div class=\\\"swag-migration-loading-screen__title\\\">\\n                                        {{ statusLong }}\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_index_loading_screen_caption %}\\n                                    <div class=\\\"swag-migration-loading-screen__caption\\\">\\n                                        {{ caption }}\\n                                    </div>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_index_loading_screen_progress_bar %}\\n                            <swag-migration-progress-bar\\n                                    :title=\\\"progressBarTitle\\\"\\n                                    :leftPointDescription=\\\"progressBarLeftPointDescription\\\"\\n                                    :rightPointDescription=\\\"$tc('swag-migration.index.loadingScreenCard.status.finish')\\\"\\n                                    :value=\\\"progressBarValue\\\"\\n                                    :maxValue=\\\"progressBarMaxValue\\\"></swag-migration-progress-bar>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_index_loading_screen_alert %}\\n                            <sw-alert class=\\\"swag-migration-loading-screen__hint\\\" variant=\\\"success\\\">\\n                                {{ hint }}\\n                                <template #customIcon>\\n                                    <sw-icon class=\\\"swag-migration-loading-screen__alert-icon\\\"\\n                                             name=\\\"regular-lightbulb\\\"\\n                                             size=\\\"20px\\\"\\n                                             decorative>\\n                                    </sw-icon>\\n                                </template>\\n                            </sw-alert>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_loading_screen_pause_overlay %}\\n            <swag-migration-pause-screen v-show=\\\"isPaused\\\"></swag-migration-pause-screen>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-result-screen.html.twig';\nimport './swag-migration-result-screen.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-result-screen', {\n    template,\n\n    computed: {\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    props: {\n        runId: {\n            type: String,\n            required: true,\n        },\n    },\n});\n","export default \"{% block swag_migration_result_screen %}\\n    <div>\\n\\n        {% block swag_migration_result_screen_card %}\\n            <sw-card class=\\\"swag-migration-result-screen\\\" position-identifier=\\\"swag-migration-result-screen\\\">\\n\\n                {% block swag_migration_result_screen_content %}\\n                    <div class=\\\"swag-migration-result-screen__content\\\">\\n\\n                        {% block swag_migration_result_screen_icon %}\\n                            <div class=\\\"swag-migration-result-screen__bubble\\\">\\n                                <sw-icon class=\\\"swag-migration-result-screen__icon\\\"\\n                                         name=\\\"regular-thumbs-up\\\"\\n                                         size=\\\"36px\\\"\\n                                         decorative>\\n                                </sw-icon>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_result_screen_title %}\\n                            <div class=\\\"swag-migration-result-screen__title\\\">\\n                                {{ $tc('swag-migration.index.loadingScreenCard.result.title') }}\\n                            </div>\\n                            <div class=\\\"swag-migration-result-screen__caption\\\">\\n                                {{ $tc('swag-migration.index.loadingScreenCard.result.caption') }}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_result_screen_link %}\\n                            <router-link class=\\\"swag-migration-result-screen__link\\\"\\n                                         :to=\\\"{ name: 'swag.migration.index.history.detail', params: { id: runId } }\\\">\\n                                {{ $tc('swag-migration.index.loadingScreenCard.result.historyLink') }}\\n                            </router-link>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block swag_migration_result_screen_survey_card %}\\n            <sw-card class=\\\"swag-migration-result-survey\\\" position-identifier=\\\"swag-migration-result-survey\\\">\\n\\n                {% block swag_migration_result_screen_survey_content %}\\n                    <div class=\\\"swag-migration-result-survey__content\\\">\\n\\n                        {% block swag_migration_result_screen_survey_title %}\\n                            <div class=\\\"swag-migration-result-survey__title\\\">\\n                                {{ $tc('swag-migration.index.loadingScreenCard.result.survey.title') }}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_result_screen_survey_caption %}\\n                            <div class=\\\"swag-migration-result-survey__caption\\\">\\n                                {{ $tc('swag-migration.index.loadingScreenCard.result.survey.caption') }}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_result_screen_survey_link %}\\n                            <a class=\\\"sw-button sw-button--small\\\"\\n                               :href=\\\"$tc('swag-migration.index.loadingScreenCard.result.survey.link')\\\"\\n                               target=\\\"_blank\\\"\\n                               rel=\\\"noopener\\\">\\n                                {{ $tc('swag-migration.index.loadingScreenCard.result.survey.buttonText') }}\\n                                <sw-icon class=\\\"swag-migration-result-survey__external-icon\\\" name=\\\"regular-external-link-s\\\" size=\\\"8\\\"></sw-icon>\\n                            </a>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_result_screen_survey_icon %}\\n                            <div>\\n                                <img class=\\\"swag-migration-result-survey__icon\\\"\\n                                     :src=\\\"assetFilter('/swagmigrationassistant/static/img/wizard-result-survey-icon.svg')\\\">\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","export default \"{% block swag_migration_loading_screen_takeover %}\\n    <sw-card\\n        class=\\\"swag-migration-loading-screen-takeover\\\"\\n        :isLoading=\\\"isLoading\\\"\\n        position-identifier=\\\"swag-migration-loading-screen-takeover\\\"\\n    >\\n\\n        {% block swag_migration_loading_screen_takeover_content %}\\n            <div class=\\\"swag-migration-loading-screen-takeover__content\\\">\\n\\n                {% block swag_migration_loading_screen_takeover_content_icon %}\\n                    <div class=\\\"swag-migration-loading-screen-takeover__icon-wrapper\\\">\\n                        <sw-icon name=\\\"regular-comment\\\" color=\\\"#189EFF\\\" large></sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_loading_screen_takeover_content_title %}\\n                    <h5 class=\\\"swag-migration-loading-screen-takeover__title\\\">\\n                        {{ $tc(titleSnippet) }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_loading_screen_takeover_content_message %}\\n                    {{ $tc(messageSnippet) }}\\n                {% endblock %}\\n\\n                {% block swag_migration_loading_screen_takeover_hint %}\\n                    <div class=\\\"swag-migration-loading-screen-takeover__actions\\\">\\n                        <sw-button v-if=\\\"state !== possibleState.ABORTED && !isTakeoverForbidden\\\"\\n                                   variant=\\\"ghost\\\"\\n                                   @click=\\\"onCheckButtonClick\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.buttonCheck') }}\\n                        </sw-button>\\n                        <sw-button v-if=\\\"state === possibleState.ABORTED\\\"\\n                                   variant=\\\"ghost\\\"\\n                                   @click=\\\"onRedirect\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.buttonRedirect') }}\\n                        </sw-button>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n\\n            {% block swag_migration_loading_screen_takeover_modal %}\\n                <sw-modal v-if=\\\"showTakeoverModal\\\"\\n                          class=\\\"swag-migration-loading-screen-takeover__modal\\\"\\n                          :title=\\\"$tc('swag-migration.index.loadingScreenCard.takeoverScreen.takeoverModal.title')\\\"\\n                          variant=\\\"small\\\"\\n                          @modal-close=\\\"onCloseTakeoverModal\\\">\\n\\n                    {% block swag_migration_loading_screen_takeover_modal_message %}\\n                        <p class=\\\"swag-migration-loading-screen-takeover__modal-message\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.takeoverModal.message') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_loading_screen_takeover_modal_hint %}\\n                        <p class=\\\"swag-migration-loading-screen-takeover__modal-hint\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.takeoverModal.hint') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_loading_screen_takeover_modal_footer %}\\n                        <template #modal-footer>\\n\\n                            {% block swag_migration_loading_screen_takeover_modal_footer_cancelAction %}\\n                                <sw-button size=\\\"small\\\"\\n                                           @click=\\\"onCloseTakeoverModal\\\">\\n                                    {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.takeoverModal.cancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_loading_screen_takeover_modal_footer_confirmAction %}\\n                                <sw-button variant=\\\"primary\\\"\\n                                           size=\\\"small\\\"\\n                                           @click=\\\"onTakeover\\\">\\n                                    {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.takeoverModal.confirm') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n\\n            {% block swag_migration_loading_screen_abort_modal %}\\n                <sw-modal v-if=\\\"showAbortModal\\\"\\n                          class=\\\"swag-migration-loading-screen-takeover__modal\\\"\\n                          :title=\\\"$tc('swag-migration.index.loadingScreenCard.takeoverScreen.abortModal.title')\\\"\\n                          variant=\\\"small\\\"\\n                          @modal-close=\\\"onCloseAbortModal\\\">\\n\\n                    {% block swag_migration_loading_screen_abort_modal_message %}\\n                        <p class=\\\"swag-migration-loading-screen-takeover__modal-message\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.abortModal.message') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_loading_screen_abort_modal_hint %}\\n                        <p class=\\\"swag-migration-loading-screen-takeover__modal-hint\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.abortModal.hint') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_loading_screen_abort_modal_footer %}\\n                        <template #modal-footer>\\n\\n                            {% block swag_migration_loading_screen_abort_modal_footer_cancelAction %}\\n                                <sw-button size=\\\"small\\\"\\n                                           @click=\\\"onCloseAbortModal\\\">\\n                                    {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.abortModal.cancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_loading_screen_abort_modal_footer_confirmAction %}\\n                                <sw-button variant=\\\"primary\\\"\\n                                           size=\\\"small\\\"\\n                                           @click=\\\"onAbort\\\">\\n                                    {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.abortModal.confirm') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n\\n            {% block swag_migration_loading_screen_redirect_modal %}\\n                <sw-modal v-if=\\\"showRedirectModal\\\"\\n                          class=\\\"swag-migration-loading-screen-takeover__modal\\\"\\n                          :title=\\\"$tc('swag-migration.index.loadingScreenCard.takeoverScreen.redirectModal.title')\\\"\\n                          variant=\\\"small\\\"\\n                          @modal-close=\\\"onCloseRedirectModal\\\">\\n\\n                    {% block swag_migration_loading_screen_redirect_modal_message %}\\n                        <p class=\\\"swag-migration-loading-screen-takeover__modal-message\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.redirectModal.message') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_loading_screen_redirect_modal_footer %}\\n                        <template #modal-footer>\\n                            {% block swag_migration_loading_screen_redirect_modal_footer_confirmAction %}\\n                                <sw-button variant=\\\"primary\\\"\\n                                           size=\\\"small\\\"\\n                                           @click=\\\"onRedirect\\\">\\n                                    {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.redirectModal.confirm') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-loading-screen-takeover.html.twig';\nimport './swag-migration-loading-screen-takeover.scss';\nimport { MIGRATION_STATUS } from '../../../../../core/service/migration/swag-migration-worker-status-manager.service';\n\nconst { Component, State } = Shopware;\n\nconst TAKEOVER_STATE = Object.freeze({\n    RUNNING: 'running',\n    INTERRUPTED: 'interrupted',\n    ABORTED: 'aborted',\n});\n\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-loading-screen-takeover', {\n    template,\n\n    inject: {\n        /** @var {MigrationWorkerService} migrationWorkerService */\n        migrationWorkerService: 'migrationWorkerService',\n    },\n\n    props: {\n        isTakeoverForbidden: {\n            type: Boolean,\n        },\n        isMigrationInterrupted: {\n            type: Boolean,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: true,\n            possibleState: TAKEOVER_STATE,\n            state: TAKEOVER_STATE.RUNNING,\n            showTakeoverModal: false,\n            showAbortModal: false,\n            showRedirectModal: false,\n        };\n    },\n\n    computed: {\n        titleSnippet() {\n            if (this.isTakeoverForbidden) {\n                return 'swag-migration.index.loadingScreenCard.takeoverScreen.forbidden.title';\n            }\n\n            return `swag-migration.index.loadingScreenCard.takeoverScreen.${this.state}.title`;\n        },\n        messageSnippet() {\n            if (this.isTakeoverForbidden) {\n                return 'swag-migration.index.loadingScreenCard.takeoverScreen.forbidden.message';\n            }\n\n            return `swag-migration.index.loadingScreenCard.takeoverScreen.${this.state}.message`;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.isMigrationInterrupted) {\n                this.state = TAKEOVER_STATE.INTERRUPTED;\n            } else {\n                this.state = TAKEOVER_STATE.RUNNING;\n            }\n\n            this.isLoading = false;\n        },\n\n        refreshState() {\n            this.isLoading = true;\n            return this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                if (isRunning) {\n                    this.isLoading = false;\n                    return Promise.resolve();\n                }\n\n                return this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                    if (runState.isMigrationRunning === false) {\n                        this.isLoading = false;\n                        this.state = TAKEOVER_STATE.ABORTED;\n                        return;\n                    }\n\n                    if (this.isMigrationInterrupted) {\n                        this.state = TAKEOVER_STATE.INTERRUPTED;\n                    } else {\n                        this.state = TAKEOVER_STATE.RUNNING;\n                    }\n\n                    this.isLoading = false;\n                }).catch(() => {\n                    this.isLoading = false;\n                });\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        onCheckButtonClick() {\n            this.isLoading = true;\n            return this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                if (runState.isMigrationRunning === false) {\n                    this.isLoading = false;\n                    this.showRedirectModal = true;\n                    return;\n                }\n\n                if (runState.status === MIGRATION_STATUS.PREMAPPING) {\n                    this.isLoading = false;\n                    this.showAbortModal = true;\n                    return;\n                }\n\n                this.isLoading = false;\n                this.showTakeoverModal = true;\n            });\n        },\n\n        onCloseTakeoverModal() {\n            this.showTakeoverModal = false;\n        },\n\n        onTakeover() {\n            this.showTakeoverModal = false;\n            this.$nextTick(() => {\n                // this will remove this component from the DOM so it must be called after the modal ist closed.\n                this.$emit('onTakeoverMigration');\n            });\n        },\n\n        onCloseAbortModal() {\n            this.showAbortModal = false;\n        },\n\n        onAbort() {\n            this.showAbortModal = false;\n            this.$nextTick(() => {\n                // this will remove this component from the DOM so it must be called after the modal ist closed.\n                this.$emit('onAbortMigration');\n            });\n        },\n\n        onCloseRedirectModal() {\n            this.showRedirectModal = false;\n        },\n\n        onRedirect() {\n            this.showRedirectModal = false;\n            this.$nextTick(() => {\n                State.commit('swagMigration/process/setIsMigrating', false);\n                State.commit('swagMigration/ui/setIsLoading', false);\n                this.$router.push({ name: 'swag.migration.index.main' });\n            });\n        },\n    },\n});\n","import template from './swag-migration-loading-screen-connection-lost.html.twig';\nimport './swag-migration-loading-screen-connection-lost.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-loading-screen-connection-lost', {\n    template,\n\n    methods: {\n        onNavigateMainClick() {\n            window.location.reload(); // trigger full page refresh, because the user can be still offline.\n        },\n    },\n});\n","export default \"{% block swag_migration_loading_screen_connection_lost %}\\n    <sw-card class=\\\"swag-migration-loading-screen-connection-lost\\\" position-identifier=\\\"swag-migration-loading-screen-connection-lost\\\">\\n\\n        {% block swag_migration_loading_screen_connection_lost_content %}\\n            <div class=\\\"swag-migration-loading-screen-connection-lost__content\\\">\\n\\n                {% block swag_migration_loading_screen_connection_lost_content_icon %}\\n                    <div class=\\\"swag-migration-loading-screen-connection-lost__icon-wrapper\\\">\\n                        <sw-icon name=\\\"regular-exclamation-triangle\\\" color=\\\"#ffb75d\\\" large></sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_loading_screen_connection_lost_content_title %}\\n                    <h5 class=\\\"swag-migration-loading-screen-connection-lost__title\\\">\\n                        {{ $tc('swag-migration.index.loadingScreenCard.connectionLostScreen.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_loading_screen_connection_lost_content_message %}\\n                    <p class=\\\"swag-migration-loading-screen-connection-lost__content-message\\\">\\n                        {{ $tc('swag-migration.index.loadingScreenCard.connectionLostScreen.message') }}\\n                    </p>\\n                {% endblock %}\\n\\n                {% block swag_migration_loading_screen_connection_lost_hint %}\\n                    <div class=\\\"swag-migration-loading-screen-connection-lost__actions\\\">\\n                        <sw-button variant=\\\"ghost\\\"\\n                                   @click=\\\"onNavigateMainClick\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.connectionLostScreen.buttonNavigateToMain') }}\\n                        </sw-button>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-pause-screen.html.twig';\nimport './swag-migration-pause-screen.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-pause-screen', {\n    template,\n});\n","export default \"{% block swag_migration_pause_screen %}\\n    <sw-card class=\\\"swag-migration-pause-screen\\\" position-identifier=\\\"swag-migration-pause-screen\\\">\\n\\n        {% block swag_migration_pause_screen_content %}\\n            <div class=\\\"swag-migration-pause-screen__content\\\">\\n\\n                {% block swag_migration_pause_screen_content_icon %}\\n                    <div class=\\\"swag-migration-pause-screen__icon-wrapper\\\">\\n                        <sw-icon name=\\\"regular-sofa\\\" color=\\\"#189eff\\\" large></sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_pause_screen_content_title %}\\n                    <h5 class=\\\"swag-migration-pause-screen__title\\\">\\n                        {{ $tc('swag-migration.index.loadingScreenCard.pauseScreen.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_pause_screen_content_message %}\\n                    <p class=\\\"swag-migration-pause-screen__content-message\\\">\\n                        {{ $tc('swag-migration.index.loadingScreenCard.pauseScreen.message') }}\\n                    </p>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-shop-information.html.twig';\nimport './swag-migration-shop-information.scss';\n\nconst { Component, Mixin } = Shopware;\nconst { mapState, mapGetters } = Shopware.Component.getComponentHelper();\nconst { format } = Shopware.Utils;\nconst { Criteria } = Shopware.Data;\n\nconst BADGE_TYPE = Object.freeze({\n    SUCCESS: 'success',\n    DANGER: 'danger',\n});\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-shop-information', {\n    template,\n    inject: {\n        /** @var {MigrationProcessStoreInitService} migrationProcessStoreInitService */\n        migrationProcessStoreInitService: 'processStoreInitService',\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n        repositoryFactory: 'repositoryFactory',\n    },\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    filters: {\n        localizedNumberFormat(value) {\n            const locale = `${this.adminLocaleLanguage}-${this.adminLocaleRegion}`;\n            const formatter = new Intl.NumberFormat(locale);\n            return formatter.format(value);\n        },\n    },\n\n    props: {\n        connected: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            showMoreInformation: true,\n            confirmModalIsLoading: false,\n            showRemoveCredentialsConfirmModal: false,\n            showResetChecksumsConfirmModal: false,\n            showResetMigrationConfirmModal: false,\n            lastConnectionCheck: '-',\n            lastMigrationDate: '-',\n            connection: null,\n            context: Shopware.Context.api,\n        };\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'connectionId',\n            'environmentInformation',\n        ]),\n\n        ...mapGetters([\n            'adminLocaleLanguage',\n            'adminLocaleRegion',\n        ]),\n\n        displayEnvironmentInformation() {\n            return this.environmentInformation === null ? {} :\n                this.environmentInformation;\n        },\n\n        migrationRunRepository() {\n            return this.repositoryFactory.create('swag_migration_run');\n        },\n\n        migrationConnectionRepository() {\n            return this.repositoryFactory.create('swag_migration_connection');\n        },\n\n        connectionName() {\n            return this.connection === null ? '' :\n                this.connection.name;\n        },\n\n        shopUrl() {\n            return this.displayEnvironmentInformation.sourceSystemDomain === undefined ? '' :\n                this.displayEnvironmentInformation.sourceSystemDomain.replace(/^\\s*https?:\\/\\//, '');\n        },\n\n        shopUrlPrefix() {\n            if (this.displayEnvironmentInformation.sourceSystemDomain === undefined) {\n                return '';\n            }\n\n            const match = this.displayEnvironmentInformation.sourceSystemDomain.match(/^\\s*https?:\\/\\//);\n            if (match === null) {\n                return '';\n            }\n\n            return match[0];\n        },\n\n        sslActive() {\n            return (this.shopUrlPrefix === 'https://');\n        },\n\n        shopUrlPrefixClass() {\n            return this.sslActive ? 'swag-migration-shop-information__shop-domain-prefix--is-ssl' : '';\n        },\n\n        connectionBadgeLabel() {\n            if (this.serverUnreachable) {\n                return 'swag-migration.index.shopInfoCard.serverUnreachable';\n            }\n\n            if (this.connected) {\n                return 'swag-migration.index.shopInfoCard.connected';\n            }\n\n            return 'swag-migration.index.shopInfoCard.notConnected';\n        },\n\n        connectionBadgeVariant() {\n            if (this.connected) {\n                return BADGE_TYPE.SUCCESS;\n            }\n\n            return BADGE_TYPE.DANGER;\n        },\n\n        shopFirstLetter() {\n            return this.displayEnvironmentInformation.sourceSystemName === undefined ? 'S' :\n                this.displayEnvironmentInformation.sourceSystemName[0];\n        },\n\n        profile() {\n            return this.connection === null || this.connection.profile === undefined ? '' :\n                `${this.connection.profile.sourceSystemName} ${this.connection.profile.version} - ${this.connection.profile.author}`;\n        },\n\n        profileIcon() {\n            return this.connection === null ||\n                this.connection.profile === undefined ||\n                this.connection.profile.icon === undefined ? null : this.connection.profile.icon;\n        },\n\n        gateway() {\n            return this.connection === null || this.connection.gateway === undefined ? '' :\n                this.connection.gateway.snippet;\n        },\n\n        lastConnectionCheckDateTimeParams() {\n            return {\n                date: this.getDateString(this.lastConnectionCheck),\n                time: this.getTimeString(this.lastConnectionCheck),\n            };\n        },\n\n        lastMigrationDateTimeParams() {\n            return {\n                date: this.getDateString(this.lastMigrationDate),\n                time: this.getTimeString(this.lastMigrationDate),\n            };\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        $route: {\n            immediate: true,\n            handler() {\n                this.showResetMigrationConfirmModal = this.$route.meta.resetMigration;\n            },\n        },\n\n        connectionId: {\n            immediate: true,\n            /**\n             * @param {string} newConnectionId\n             */\n            handler(newConnectionId) {\n                this.fetchConnection(newConnectionId);\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.updateLastMigrationDate();\n        },\n\n        openResetMigrationModal() {\n            this.showResetMigrationConfirmModal = true;\n            this.$router.push({\n                name: 'swag.migration.index.resetMigration',\n            });\n        },\n\n        onCloseResetModal() {\n            this.showResetMigrationConfirmModal = false;\n            this.$router.push({\n                name: 'swag.migration.index.main',\n            });\n        },\n\n        updateLastMigrationDate() {\n            const criteria = new Criteria(1, 1);\n            criteria.addSorting(Criteria.sort('createdAt', 'DESC'));\n\n            return this.migrationRunRepository.search(criteria, this.context).then((runs) => {\n                if (runs.length > 0) {\n                    this.lastMigrationDate = runs.first().createdAt;\n                } else {\n                    this.lastMigrationDate = '-';\n                }\n            });\n        },\n\n        /**\n         * @param {string} connectionId\n         */\n        fetchConnection(connectionId) {\n            return this.migrationConnectionRepository.get(connectionId, this.context).then((connection) => {\n                delete connection.credentialFields;\n                this.connection = connection;\n                this.lastConnectionCheck = new Date();\n\n                return this.migrationService.getProfileInformation(\n                    connection.profileName,\n                    connection.gatewayName,\n                ).then((profileInformation) => {\n                    this.connection.profile = profileInformation.profile;\n                    this.connection.gateway = profileInformation.gateway;\n                });\n            });\n        },\n\n        getTimeString(date) {\n            return format.date(date, {\n                day: undefined,\n                month: undefined,\n                year: undefined,\n                hour: 'numeric',\n                minute: '2-digit',\n            });\n        },\n\n        getDateString(date) {\n            return format.date(date);\n        },\n\n        onClickEditConnectionCredentials() {\n            this.$router.push({\n                name: 'swag.migration.wizard.credentials',\n                params: {\n                    connectionId: this.connectionId,\n                },\n            });\n        },\n\n        onClickCreateConnection() {\n            this.$router.push({\n                name: 'swag.migration.wizard.connectionCreate',\n            });\n        },\n\n        onClickSelectConnection() {\n            this.$router.push({\n                name: 'swag.migration.wizard.connectionSelect',\n            });\n        },\n\n        onClickProfileInstallation() {\n            this.$router.push({\n                name: 'swag.migration.wizard.profileInstallation',\n            });\n        },\n\n        onClickRemoveConnectionCredentials() {\n            this.confirmModalIsLoading = true;\n            return this.migrationService.updateConnectionCredentials(\n                this.connectionId,\n                { },\n            ).then(() => {\n                this.$router.go(); // Refresh the page\n            });\n        },\n\n        onClickResetChecksums() {\n            this.confirmModalIsLoading = true;\n            return this.migrationService.resetChecksums(this.connectionId).then(() => {\n                this.showResetChecksumsConfirmModal = false;\n                this.confirmModalIsLoading = false;\n            });\n        },\n\n        onClickResetMigration() {\n            this.confirmModalIsLoading = true;\n            return this.migrationService.cleanupMigrationData().then(() => {\n                this.showResetMigrationConfirmModal = false;\n                this.confirmModalIsLoading = false;\n                this.migrationProcessStoreInitService.initProcessStore();\n\n                this.$nextTick(() => {\n                    this.$router.push({ name: 'swag.migration.emptyScreen' });\n                });\n            }).catch(() => {\n                this.showResetMigrationConfirmModal = false;\n                this.confirmModalIsLoading = false;\n\n                this.createNotificationError({\n                    title: this.$t('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.errorNotification.title'),\n                    message: this.$t('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.errorNotification.message'),\n                    variant: 'error',\n                    growl: true,\n                });\n            });\n        },\n    },\n});\n","export default \"{% block swag_migration_shop_information %}\\n    <sw-card\\n        class=\\\"swag-migration-shop-information\\\"\\n        :title=\\\"$tc('swag-migration.index.shopInfoCard.cardTitle')\\\"\\n        position-identifier=\\\"swag-migration-shop-information\\\"\\n    >\\n\\n        {% block swag_migration_shop_information_content %}\\n            <template #grid>\\n                <sw-container rows=\\\"auto auto\\\">\\n                    <sw-card-section :divider=\\\"showMoreInformation ? 'bottom' : ''\\\">\\n\\n                        {% block swag_migration_shop_information_connection %}\\n                            <div class=\\\"swag-migration-shop-information__connection\\\">\\n\\n                                {% block swag_migration_shop_information_connection_avatar %}\\n                                    <template v-if=\\\"profileIcon === null || profileIcon === ''\\\">\\n                                        <swag-migration-shop-avatar class=\\\"swag-migration-shop-information__connection-avatar\\\"\\n                                                                    color=\\\"#189EFF\\\"\\n                                                                    size=\\\"80px\\\">\\n                                            {{ shopFirstLetter }}\\n                                        </swag-migration-shop-avatar>\\n                                    </template>\\n\\n                                    <template v-else>\\n                                        <img class=\\\"swag-migration-shop-information__profile-avatar\\\"\\n                                             :src=\\\"assetFilter(profileIcon)\\\"\\n                                             size=\\\"80px\\\">\\n                                    </template>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_shop_information_connection_info %}\\n                                    <div class=\\\"swag-migration-shop-information__connection-info\\\">\\n\\n                                        {% block swag_migration_shop_information_shop_system %}\\n                                            <div class=\\\"swag-migration-shop-information__connection-name\\\">\\n                                                {{ connectionName }}\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                        {% block swag_migration_shop_information_shop_domain %}\\n                                            <div v-if=\\\"shopUrl !== ''\\\" class=\\\"swag-migration-shop-information__shop-domain\\\">\\n                                                <span class=\\\"swag-migration-shop-information__shop-domain-prefix\\\"\\n                                                      :class=\\\"shopUrlPrefixClass\\\">\\n                                                    <sw-icon v-if=\\\"sslActive\\\"\\n                                                             class=\\\"swag-migration-shop-information__shop-domain-prefix-icon\\\"\\n                                                             name=\\\"regular-lock\\\"\\n                                                             size=\\\"12px\\\">\\n                                                    </sw-icon>\\n                                                    <sw-icon v-else\\n                                                             class=\\\"swag-migration-shop-information__shop-domain-prefix-icon\\\"\\n                                                             name=\\\"regular-lock-open-s\\\"\\n                                                             size=\\\"12px\\\">\\n                                                    </sw-icon>\\n                                                    {{ shopUrlPrefix }}</span>{{ shopUrl }}\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                        {% block swag_migration_shop_information_actions %}\\n                                            <div class=\\\"swag-migration-shop-information__actions\\\">\\n\\n                                                {% block swag_migration_shop_information_actions_editSettings %}\\n                                                    <sw-button size=\\\"small\\\"\\n                                                               @click=\\\"onClickEditConnectionCredentials\\\">\\n                                                        {{ $tc('swag-migration.index.shopInfoCard.buttonEditSettings') }}\\n                                                    </sw-button>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_shop_information_actions_contextMenu %}\\n                                                    <sw-context-button>\\n                                                        <template #button>\\n                                                            <sw-button size=\\\"small\\\" square>\\n                                                                <sw-icon name=\\\"solid-ellipsis-h-s\\\" small></sw-icon>\\n                                                            </sw-button>\\n                                                        </template>\\n\\n                                                        {% block swag_migration_shop_information_actions_createConnectionItem %}\\n                                                            <sw-context-menu-item @click=\\\"onClickCreateConnection\\\">\\n                                                                {{ $tc('swag-migration.index.shopInfoCard.buttonCreateConnection') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block swag_migration_shop_information_actions_selectConnectionItem %}\\n                                                            <sw-context-menu-item @click=\\\"onClickSelectConnection\\\">\\n                                                                {{ $tc('swag-migration.index.shopInfoCard.buttonSelectConnection') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block swag_migration_shop_information_actions_profileInstallationItem %}\\n                                                            <sw-context-menu-item @click=\\\"onClickProfileInstallation\\\">\\n                                                                {{ $tc('swag-migration.index.shopInfoCard.buttonProfileInstallation') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block swag_migration_shop_information_actions_removeCredentialsItem %}\\n                                                            <sw-context-menu-item variant=\\\"danger\\\" @click=\\\"showRemoveCredentialsConfirmModal = true\\\">\\n                                                                {{ $tc('swag-migration.index.shopInfoCard.buttonRemoveCredentials') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block swag_migration_shop_information_actions_resetChecksumsItem %}\\n                                                            <sw-context-menu-item variant=\\\"danger\\\" @click=\\\"showResetChecksumsConfirmModal = true\\\">\\n                                                                {{ $tc('swag-migration.index.shopInfoCard.buttonResetChecksums') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block swag_migration_shop_information_actions_divider %}\\n                                                            <sw-context-menu-divider></sw-context-menu-divider>\\n                                                        {% endblock %}\\n\\n                                                        {% block swag_migration_shop_information_actions_resetMigrationItem %}\\n                                                            <sw-context-menu-item @click=\\\"openResetMigrationModal\\\">\\n                                                                {{ $tc('swag-migration.index.shopInfoCard.buttonResetMigration') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n                                                    </sw-context-button>\\n                                                {% endblock %}\\n                                            </div>\\n                                        {% endblock %}\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_shop_information_connection %}\\n                                    <div class=\\\"swag-migration-shop-information__connection\\\">\\n                                        <div class=\\\"swag-migration-shop-information__connection-badge\\\">\\n                                            <sw-label class=\\\"swag-migration-shop-information__connection-status\\\"\\n                                                      :variant=\\\"connectionBadgeVariant\\\"\\n                                                      appearance=\\\"pill\\\">\\n                                                <sw-color-badge class=\\\"swag-migration-shop-information__connection-status-dot\\\"\\n                                                                :variant=\\\"connectionBadgeVariant\\\"\\n                                                                rounded>\\n                                                </sw-color-badge>\\n                                                <span class=\\\"swag-migration-shop-information__connection-status-text\\\">\\n                                                    {{ $tc(connectionBadgeLabel) }}\\n                                                </span>\\n                                            </sw-label>\\n                                        </div>\\n                                    </div>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </sw-card-section>\\n\\n                    <sw-card-section v-if=\\\"showMoreInformation\\\" secondary slim>\\n                        <sw-container class=\\\"swag-migration-shop-information__metadata\\\"\\n                                      columns=\\\"repeat(auto-fit, minmax(250px, 1fr)\\\"\\n                                      gap=\\\"0px 15px\\\">\\n\\n                            {% block swag_migration_shop_information_metadata_columns %}\\n                                <div class=\\\"swag-migration-shop-information__metadata-columns\\\">\\n\\n                                    {% block swag_migration_shop_information_metadata_column_left %}\\n                                        {% block swag_migration_shop_information_metadata_profile %}\\n                                            <sw-description-list>\\n                                                <dt>{{ $tc('swag-migration.index.shopInfoCard.profile') }}</dt>\\n                                                <dd>{{ profile }}</dd>\\n                                            </sw-description-list>\\n                                        {% endblock %}\\n\\n                                        {% block swag_migration_shop_information_metadata_gateway %}\\n                                            <sw-description-list>\\n                                                    <dt>{{ $tc('swag-migration.index.shopInfoCard.gateway') }}</dt>\\n                                                    <dd>{{ $tc(gateway) }}</dd>\\n                                            </sw-description-list>\\n                                        {% endblock %}\\n                                    {% endblock %}\\n                                </div>\\n                                <div class=\\\"swag-migration-shop-information__metadata-columns\\\">\\n\\n                                    {% block swag_migration_shop_information_column_right %}\\n                                        {% block swag_migration_shop_information_metadata_lastConnectionCheck %}\\n                                            <sw-description-list>\\n                                                <dt>{{ $tc('swag-migration.index.shopInfoCard.connectionCheck') }}</dt>\\n                                                <dd v-if=\\\"lastConnectionCheck !== '-'\\\">\\n                                                    {{ $tc('swag-migration.index.shopInfoCard.displayDateTime', 0, lastConnectionCheckDateTimeParams) }}\\n                                                </dd>\\n                                                <dd v-else>-</dd>\\n                                            </sw-description-list>\\n                                        {% endblock %}\\n\\n                                        {% block swag_migration_shop_information_metadata_lastMigration %}\\n                                            <sw-description-list>\\n                                                    <dt>{{ $tc('swag-migration.index.shopInfoCard.lastMigration') }}</dt>\\n                                                    <dd v-if=\\\"lastMigrationDate !== '-'\\\">\\n                                                        {{ $tc('swag-migration.index.shopInfoCard.displayDateTime', 0, lastMigrationDateTimeParams) }}\\n                                                    </dd>\\n                                                    <dd v-else>\\n                                                        {{ $tc('swag-migration.index.shopInfoCard.noMigrationDoneYet') }}\\n                                                    </dd>\\n                                            </sw-description-list>\\n                                        {% endblock %}\\n                                    {% endblock %}\\n                                </div>\\n                            {% endblock %}\\n                        </sw-container>\\n                    </sw-card-section>\\n                </sw-container>\\n\\n                {% block swag_migration_shop_information_remove_credentials_confirm_modal %}\\n                    <sw-modal v-if=\\\"showRemoveCredentialsConfirmModal\\\"\\n                              class=\\\"swag-migration-shop-information__confirm-modal\\\"\\n                              :title=\\\"$tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.title')\\\"\\n                              :isLoading=\\\"confirmModalIsLoading\\\"\\n                              size=\\\"460px\\\"\\n                              @modal-close=\\\"showRemoveCredentialsConfirmModal = false\\\">\\n\\n                        {% block swag_migration_shop_information_remove_credentials_confirm_modal_content %}\\n                            <p class=\\\"swag-migration-shop-information__confirm-modal-content\\\">\\n                                {{ $tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.content') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_remove_credentials_confirm_modal_content_hint %}\\n                            <p class=\\\"swag-migration-shop-information__confirm-modal-content-hint\\\">\\n                                {{ $tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.contentHint') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_remove_credentials_confirm_modal_footer %}\\n                            <template #modal-footer>\\n\\n                                {% block swag_migration_shop_information_remove_credentials_confirm_modal_abort %}\\n                                    <sw-button size=\\\"small\\\"\\n                                               :disabled=\\\"confirmModalIsLoading\\\"\\n                                               @click=\\\"showRemoveCredentialsConfirmModal = false\\\">\\n                                        {{ $tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.abortButtonText') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_shop_information_remove_credentials_confirm_modal_confirm %}\\n                                    <sw-button size=\\\"small\\\"\\n                                               variant=\\\"primary\\\"\\n                                               :disabled=\\\"confirmModalIsLoading\\\"\\n                                               @click=\\\"onClickRemoveConnectionCredentials\\\">\\n                                        {{ $tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.confirmButtonText') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n                            </template>\\n                        {% endblock %}\\n                    </sw-modal>\\n                {% endblock %}\\n\\n                {% block swag_migration_shop_information_reset_checksums_confirm_modal %}\\n                    <sw-modal v-if=\\\"showResetChecksumsConfirmModal\\\"\\n                              class=\\\"swag-migration-shop-information__confirm-modal\\\"\\n                              :title=\\\"$tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.title')\\\"\\n                              :isLoading=\\\"confirmModalIsLoading\\\"\\n                              size=\\\"460px\\\"\\n                              @modal-close=\\\"showResetChecksumsConfirmModal = false\\\">\\n\\n                        {% block swag_migration_shop_information_reset_checksums_confirm_modal_content %}\\n                            <p class=\\\"swag-migration-shop-information__confirm-modal-content\\\"\\n                               v-html=\\\"$tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.content')\\\">\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_reset_checksums_confirm_modal_content_hint %}\\n                            <p class=\\\"swag-migration-shop-information__confirm-modal-content-hint\\\">\\n                                {{ $tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.contentHint') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_reset_checksums_confirm_modal_footer %}\\n                            <template #modal-footer>\\n\\n                                {% block swag_migration_shop_information_reset_checksums_confirm_modal_abort %}\\n                                    <sw-button size=\\\"small\\\"\\n                                               :disabled=\\\"confirmModalIsLoading\\\"\\n                                               @click=\\\"showResetChecksumsConfirmModal = false\\\">\\n                                        {{ $tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.abortButtonText') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_shop_information_reset_checksums_confirm_modal_confirm %}\\n                                    <sw-button size=\\\"small\\\"\\n                                               variant=\\\"primary\\\"\\n                                               :disabled=\\\"confirmModalIsLoading\\\"\\n                                               @click=\\\"onClickResetChecksums\\\">\\n                                        {{ $tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.confirmButtonText') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n                            </template>\\n                        {% endblock %}\\n                    </sw-modal>\\n                {% endblock %}\\n\\n                {% block swag_migration_shop_information_reset_migration_confirm_modal %}\\n                    <sw-modal v-if=\\\"showResetMigrationConfirmModal\\\"\\n                              class=\\\"swag-migration-shop-information__reset-confirm-modal\\\"\\n                              :title=\\\"$tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.title')\\\"\\n                              :isLoading=\\\"confirmModalIsLoading\\\"\\n                              @modal-close=\\\"onCloseResetModal\\\">\\n\\n                        {% block swag_migration_shop_information_reset_migration_confirm_modal_icon %}\\n                            <div class=\\\"swag-migration-shop-information__reset-confirm-modal-icon-wrapper\\\">\\n                                <sw-icon class=\\\"swag-migration-shop-information__confirm-modal-icon\\\" name=\\\"regular-trophy\\\" color=\\\"#37D046\\\" size=\\\"40\\\"></sw-icon>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_reset_migration_confirm_modal_header %}\\n                            <p class=\\\"swag-migration-shop-information__reset-confirm-modal-header\\\"\\n                               v-html=\\\"$tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.header')\\\">\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_reset_migration_confirm_modal_content %}\\n                            <p class=\\\"swag-migration-shop-information__reset-confirm-modal-content\\\"\\n                               v-html=\\\"$tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.content')\\\">\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_reset_migration_confirm_modal_content_hint %}\\n                            <p class=\\\"swag-migration-shop-information__reset-confirm-modal-content-hint\\\">\\n                                {{ $tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.contentHint') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_reset_migration_confirm_modal_footer %}\\n                        <template #modal-footer>\\n\\n                            {% block swag_migration_shop_information_reset_migration_confirm_modal_abort %}\\n                                <sw-button size=\\\"small\\\"\\n                                           :disabled=\\\"confirmModalIsLoading\\\"\\n                                           @click=\\\"onCloseResetModal\\\">\\n                                    {{ $tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.abortButtonText') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_shop_information_reset_migration_confirm_modal_confirm %}\\n                                <sw-button size=\\\"small\\\"\\n                                           variant=\\\"primary\\\"\\n                                           :disabled=\\\"confirmModalIsLoading\\\"\\n                                           @click=\\\"onClickResetMigration\\\">\\n                                    {{ $tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.confirmButtonText') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                        {% endblock %}\\n                    </sw-modal>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-data-selector.html.twig';\nimport './swag-migration-data-selector.scss';\n\nconst { Component, State } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-data-selector', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'environmentInformation',\n        ]),\n\n        ...mapState('swagMigration/ui', [\n            'dataSelectionTableData',\n            'dataSelectionIds',\n        ]),\n\n        displayWarnings() {\n            return this.environmentInformation.displayWarnings;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.fetchTableData();\n        },\n\n        fetchTableData() {\n            if (this.dataSelectionTableData.length > 0) {\n                this.$nextTick(() => {\n                    if (!this.$refs.tableDataGrid) {\n                        this.fetchTableData();\n                    }\n\n                    this.dataSelectionIds.forEach((id) => {\n                        this.$refs.tableDataGrid?.selectItem(true, { id });\n                    });\n                });\n            }\n        },\n\n        onGridSelectItem(selection) {\n            const selectionIds = Object.keys(selection);\n\n            this.dataSelectionTableData.forEach((data) => {\n                if (data.requiredSelection !== true) {\n                    return;\n                }\n\n                if (!selectionIds.includes(data.id)) {\n                    selectionIds.push(data.id);\n                    this.$nextTick(() => {\n                        this.$refs.tableDataGrid.selectItem(true, data);\n                    });\n                }\n            });\n\n            State.commit('swagMigration/ui/setDataSelectionIds', selectionIds);\n        },\n\n        showHelptext(entityTotals) {\n            return entityTotals !== undefined && Object.keys(entityTotals).length > 1;\n        },\n\n        getHelptext(item) {\n            if (item.entityTotals === undefined || Object.keys(item.entityTotals).length === 0) {\n                return '';\n            }\n\n            let string = '';\n            Object.keys(item.entityTotals).forEach((key) => {\n                string += `${this.$tc(item.entityNames[key])\n                } ${\n                    item.entityTotals[key]\n                }</br>`;\n            });\n\n            return string;\n        },\n    },\n});\n","export default \"{% block swag_migration_data_selector %}\\n    <div class=\\\"swag-migration-data-selector\\\">\\n\\n        {% block swag_migration_data_selector_warnings %}\\n            <div class=\\\"swag-migration-data-selector__warnings\\\">\\n                <sw-alert v-for=\\\"warning in displayWarnings\\\"\\n                          class=\\\"swag-migration-data-selector__warning\\\"\\n                          :key=\\\"warning.snippetKey\\\"\\n                          variant=\\\"warning\\\">\\n                    {{ $tc(warning.snippetKey, warning.pluralizationCount, warning.snippetArguments) }}\\n                </sw-alert>\\n            </div>\\n        {% endblock %}\\n\\n        <sw-card\\n            v-if=\\\"this.dataSelectionTableData.length > 0\\\"\\n            :title=\\\"$tc('swag-migration.index.selectDataCard.cardTitle')\\\"\\n            position-identifier=\\\"swag-migration-data-selector\\\"\\n        >\\n\\n            {% block swag_migration_data_selector_grid %}\\n                <template #grid>\\n                    <swag-migration-grid-extended\\n                        ref=\\\"tableDataGrid\\\"\\n                        :items=\\\"dataSelectionTableData\\\"\\n                        disabledAttribute=\\\"requiredSelection\\\"\\n                        table\\n                        @sw-grid-select-item=\\\"onGridSelectItem\\\"\\n                        @sw-grid-select-all=\\\"onGridSelectItem\\\">\\n                        <template #columns=\\\"{ item }\\\">\\n\\n                            {% block swag_migration_data_selector_grid_column_data %}\\n                                <sw-grid-column flex=\\\"1fr\\\" :label=\\\"$tc('swag-migration.index.selectDataCard.headers.name')\\\">\\n                                    {{ $tc(item.snippet) }}\\n                                </sw-grid-column>\\n\\n                                <sw-grid-column flex=\\\"1fr\\\" :label=\\\"$tc('swag-migration.index.selectDataCard.headers.dataType')\\\">\\n                                    {{ $tc('swag-migration.index.selectDataCard.dataTypes.' + item.dataType) }}\\n                                </sw-grid-column>\\n\\n                                <sw-grid-column flex=\\\"1fr\\\" :label=\\\"$tc('swag-migration.index.selectDataCard.headers.total')\\\" align=\\\"right\\\">\\n                                    {{ item.total }}\\n\\n                                    <sw-help-text v-if=\\\"showHelptext(item.entityTotals)\\\"\\n                                                  class=\\\"swag-migration-data-selector__help-text\\\"\\n                                                  :text=\\\"getHelptext(item)\\\">\\n                                    </sw-help-text>\\n                                    <div v-else class=\\\"swag-migration-data-selector__help-text-placeholder\\\"></div>\\n                                </sw-grid-column>\\n                            {% endblock %}\\n                        </template>\\n                    </swag-migration-grid-extended>\\n                </template>\\n            {% endblock %}\\n        </sw-card>\\n\\n        <sw-card v-else class=\\\"swag-migration-data-selector\\\" position-identifier=\\\"swag-migration-data-selector-no-data\\\">\\n\\n            {% block swag_migration_data_selector_no_data %}\\n                <div class=\\\"swag-migration-index-data-selector__no-data\\\">\\n                    <p class=\\\"swag-migration-index-data-selector__no-data-label\\\">\\n                        {{ $tc('swag-migration.index.selectDataCard.noData') }}\\n                    </p>\\n                </div>\\n            {% endblock %}\\n        </sw-card>\\n    </div>\\n{% endblock %}\\n\";","export default \"{% block swag_migration_premapping %}\\n    <div class=\\\"swag-migration-premapping\\\">\\n\\n        {% block swag_migration_premapping_unfilled_alert %}\\n            <sw-alert v-if=\\\"!isLoading && !isPremappingValid\\\"\\n                      class=\\\"swag-migration-premapping__alert\\\"\\n                      variant=\\\"error\\\">\\n                {{ $tc('swag-migration.index.premappingCard.unfilledAlert') }}\\n            </sw-alert>\\n        {% endblock %}\\n\\n        {% block swag_migration_premapping_unfilled_card %}\\n            <sw-card\\n                v-if=\\\"!isLoading && !isPremappingValid\\\"\\n                class=\\\"swag-migration-premapping__unfilled-card\\\"\\n                position-identifier=\\\"swag-migration-premapping\\\"\\n            >\\n\\n                {% block swag_migration_premapping_unfilled_title %}\\n                    <div class=\\\"swag-migration-premapping__unfilled-title\\\">\\n                        {{ $tc('swag-migration.index.premappingCard.unfilledTitle') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_premapping_unfilled_caption %}\\n                    <div class=\\\"swag-migration-premapping__unfilled-caption\\\">\\n                        {{ $tc('swag-migration.index.premappingCard.unfilledCaption') }}\\n                    </div>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block swag_migration_premapping_success_card %}\\n            <sw-card v-if=\\\"!isLoading && isPremappingValid\\\"\\n                     class=\\\"swag-migration-premapping__success-card\\\"\\n                     position-identifier=\\\"swag-migration-premapping__success-card\\\">\\n\\n                {% block swag_migration_premapping_success_bubble %}\\n                    <div class=\\\"swag-migration-premapping__success-bubble\\\">\\n                        <sw-icon class=\\\"swag-migration-premapping__success-icon\\\"\\n                                 name=\\\"regular-checkmark\\\"\\n                                 size=\\\"36px\\\"\\n                                 decorative>\\n                        </sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_premapping_success_title %}\\n                    <div class=\\\"swag-migration-premapping__success-title\\\">\\n                        {{ $tc('swag-migration.index.premappingCard.validTitle') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_premapping_success_caption %}\\n                    <div class=\\\"swag-migration-premapping__success-caption\\\">\\n                        {{ $tc('swag-migration.index.premappingCard.validCaption') }}\\n                    </div>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block swag_migration_premapping_unfilled_mapping %}\\n            <swag-migration-tab-card\\n                v-if=\\\"displayUnfilledPremapping\\\"\\n                class=\\\"swag-migration-premapping__tab-card\\\"\\n                :title=\\\"$tc('swag-migration.index.premappingCard.unfilledCardTitle')\\\"\\n                :items=\\\"unfilledPremapping\\\"\\n            >\\n                <template #items=\\\"{ item }\\\" >\\n                    <swag-migration-grid-selection\\n                        :choices=\\\"item.choices\\\"\\n                        :mapping=\\\"item.mapping\\\"\\n                        @input=\\\"validatePremapping\\\"\\n                    ></swag-migration-grid-selection>\\n                </template>\\n            </swag-migration-tab-card>\\n        {% endblock %}\\n\\n        {% block swag_migration_premapping_expand_div %}\\n            <swag-migration-expand-div\\n                v-if=\\\"!isLoading && displayFilledPremapping\\\"\\n                class=\\\"swag-migration-premapping__expand-div\\\"\\n                :expandTitle=\\\"$tc('swag-migration.index.premappingCard.expandTitle')\\\"\\n                :collapseTitle=\\\"$tc('swag-migration.index.premappingCard.collapseTitle')\\\"\\n            >\\n                {% block swag_migration_premapping_filled_mapping %}\\n                    <swag-migration-tab-card\\n                        v-if=\\\"displayFilledPremapping\\\"\\n                        class=\\\"swag-migration-premapping__filled-tab-card swag-migration-premapping__tab-card\\\"\\n                        :title=\\\"$tc('swag-migration.index.premappingCard.filledCardTitle')\\\"\\n                        :items=\\\"filledPremapping\\\"\\n                    >\\n                        <template #items=\\\"{ item }\\\">\\n                            <swag-migration-grid-selection\\n                                :choices=\\\"item.choices\\\"\\n                                :mapping=\\\"item.mapping\\\"\\n                                @input=\\\"validatePremapping\\\"\\n                            ></swag-migration-grid-selection>\\n                        </template>\\n                    </swag-migration-tab-card>\\n                {% endblock %}\\n            </swag-migration-expand-div>\\n        {% endblock %}\\n\\n        <sw-card v-if=\\\"isLoading\\\"\\n                 class=\\\"swag-migration-premapping__loading-card\\\"\\n                 position-identifier=\\\"swag-migration-premapping__loading-card\\\">\\n            <div>\\n\\n                {% block swag_migration_premapping_loader %}\\n                    <sw-loader class=\\\"swag-migration-premapping__loader\\\"></sw-loader>\\n                {% endblock %}\\n\\n                {% block swag_migration_premapping_loading_title %}\\n                    <div class=\\\"swag-migration-premapping__loading-title\\\">\\n                        {{ $tc('swag-migration.index.premappingCard.loadingTitle') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_premapping_loading_caption %}\\n                    <div class=\\\"swag-migration-premapping__loading-caption\\\">\\n                        {{ $tc('swag-migration.index.premappingCard.loadingCaption') }}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        </sw-card>\\n    </div>\\n{% endblock %}\\n\";","/**\n * @package services-settings\n */\nexport const UI_COMPONENT_INDEX = Object.freeze({\n    WARNING_CONFIRM: -1,\n    DATA_SELECTOR: 0,\n    PREMAPPING: 1,\n    LOADING_SCREEN: 2,\n    MEDIA_SCREEN: 3,\n    RESULT_SUCCESS: 4,\n    PAUSE_SCREEN: 5,\n    TAKEOVER: 6,\n    CONNECTION_LOST: 7,\n});\n\n/**\n * The vuex store for global data handling inside the UI components of the migration module.\n * These are used for preparing and supporting the migration process (which is running in the background)\n * and to display the correct things to the user.\n * @module\n * @package services-settings\n */\nexport default {\n    namespaced: true,\n\n    state: {\n        /**\n         * The current component to display in the migration process. This is very similar to the migration status,\n         * but only represents which component to render at the moment.\n         */\n        componentIndex: UI_COMPONENT_INDEX.DATA_SELECTOR,\n\n        /**\n         * Flag which sets the whole module into a loading state\n         */\n        isLoading: false,\n\n        /**\n         * Flag to start the migration process when redirecting from different pages.\n         */\n        startMigration: false,\n\n        /**\n         * Flag to set the migration ui into a pause state\n         */\n        isPaused: false,\n\n        /**\n         * Flag to specify that the premapping is valid\n         */\n        isPremappingValid: false,\n\n        /**\n         * The selected data ids that the user wants to migrate.\n         */\n        dataSelectionIds: [],\n\n        /**\n         * The possible data that the user can migrate.\n         */\n        dataSelectionTableData: [],\n\n        /**\n         * The premapping structure, that the user must match.\n         */\n        premapping: [],\n\n        /**\n         * Only the unfilled part of the premapping.\n         */\n        unfilledPremapping: [],\n\n        /**\n         * Only the filled part of the premapping.\n         */\n        filledPremapping: [],\n    },\n\n    mutations: {\n        setComponentIndex(state, newIndex) {\n            state.componentIndex = newIndex;\n        },\n\n        setIsLoading(state, isLoading) {\n            state.isLoading = isLoading;\n        },\n\n        setStartMigration(state, startMigration) {\n            state.startMigration = startMigration;\n        },\n\n        setIsPaused(state, isPaused) {\n            state.isPaused = isPaused;\n        },\n\n        setIsPremappingValid(state, isValid) {\n            state.isPremappingValid = isValid;\n        },\n\n        setDataSelectionIds(state, newIds) {\n            state.dataSelectionIds = newIds;\n        },\n\n        setDataSelectionTableData(state, newTableData) {\n            state.dataSelectionTableData = newTableData;\n        },\n\n        setPremapping(state, newPremapping) {\n            if (newPremapping === undefined && newPremapping.length < 1) {\n                state.unfilledPremapping = [];\n                state.filledPremapping = [];\n                return;\n            }\n\n            const unfilledMapping = [];\n            const filledMapping = [];\n\n            newPremapping.forEach((group) => {\n                const newFilledGroup = {\n                    choices: group.choices,\n                    entity: group.entity,\n                    mapping: [],\n                };\n\n                const newUnfilledGroup = {\n                    choices: group.choices,\n                    entity: group.entity,\n                    mapping: [],\n                };\n\n                group.mapping.forEach((mapping) => {\n                    if (mapping.destinationUuid.length > 0) {\n                        newFilledGroup.mapping.push(mapping);\n                    } else {\n                        newUnfilledGroup.mapping.push(mapping);\n                    }\n                });\n\n                if (newFilledGroup.mapping.length > 0) {\n                    filledMapping.push(newFilledGroup);\n                }\n\n                if (newUnfilledGroup.mapping.length > 0) {\n                    unfilledMapping.push(newUnfilledGroup);\n                }\n            });\n\n            state.unfilledPremapping = unfilledMapping;\n            state.filledPremapping = filledMapping;\n            state.premapping = newPremapping;\n        },\n    },\n\n    getters: {\n        isMigrationAllowed(state) {\n            const tableDataIds = state.dataSelectionTableData.map((data) => {\n                if (data.requiredSelection === false) {\n                    return data.id;\n                }\n\n                return null;\n            });\n            return state.dataSelectionIds.some(id => tableDataIds.includes(id));\n        },\n    },\n};\n","import template from './swag-migration-premapping.html.twig';\nimport { UI_COMPONENT_INDEX } from '../../../../../core/data/migrationUI.store';\nimport './swag-migration-premapping.scss';\n\nconst { Component, State } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-premapping', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n        /** @var {MigrationWorkerService} migrationWorkerService */\n        migrationWorkerService: 'migrationWorkerService',\n    },\n\n    data() {\n        return {\n            isLoading: false,\n            premappingInput: [],\n        };\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'runId',\n        ]),\n\n        ...mapState('swagMigration/ui', [\n            'unfilledPremapping',\n            'filledPremapping',\n            'isPremappingValid',\n            'premapping',\n        ]),\n\n        displayUnfilledPremapping() {\n            return this.unfilledPremapping.length > 0;\n        },\n\n        displayFilledPremapping() {\n            return this.filledPremapping.length > 0;\n        },\n    },\n\n    watch: {\n        runId: {\n            immediate: true,\n            handler(newRunId) {\n                if (newRunId.length < 1) {\n                    return;\n                }\n\n                this.fetchPremapping(newRunId);\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            State.commit('swagMigration/ui/setIsPremappingValid', false);\n        },\n\n        fetchPremapping(runId) {\n            this.isLoading = true;\n\n            if (this.premapping !== null && this.premapping.length > 0) {\n                this.$nextTick(() => {\n                    this.notifyPremappingValidWatchers(\n                        this.validatePremapping(false),\n                    );\n                    this.isLoading = false;\n                });\n                return Promise.resolve();\n            }\n\n            return this.migrationService.generatePremapping(runId).then((premapping) => {\n                if (premapping.length === 0) {\n                    State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.LOADING_SCREEN);\n                    this.migrationWorkerService.startMigration(this.runId).catch(() => {\n                        this.onInvalidMigrationAccessToken();\n                    });\n                } else {\n                    State.commit('swagMigration/ui/setPremapping', premapping);\n                    this.notifyPremappingValidWatchers(\n                        this.validatePremapping(false),\n                    );\n\n                    this.isLoading = false;\n                }\n            });\n        },\n\n        notifyPremappingValidWatchers(isValid) {\n            if (isValid !== this.isPremappingValid) {\n                State.commit('swagMigration/ui/setIsPremappingValid', isValid);\n                return;\n            }\n\n            // It is needed to trigger a watcher event here, even if the value does not have been changed.\n            State.commit('swagMigration/ui/setIsPremappingValid', !isValid);\n            this.$nextTick(() => {\n                State.commit('swagMigration/ui/setIsPremappingValid', isValid);\n            });\n        },\n\n        validatePremapping(updateStore = true) {\n            const isValid = !this.premapping.some((group) => {\n                return group.mapping.some((mapping) => {\n                    return mapping.destinationUuid === null || mapping.destinationUuid.length === 0;\n                });\n            });\n\n            if (updateStore) {\n                State.commit('swagMigration/ui/setIsPremappingValid', isValid);\n            }\n\n            return isValid;\n        },\n    },\n});\n","import template from './swag-migration-progress-bar.html.twig';\nimport './swag-migration-progress-bar.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-progress-bar', {\n    template,\n\n    props: {\n        title: {\n            type: String,\n            default: '',\n            required: false,\n        },\n        leftPointDescription: {\n            type: String,\n            default: '',\n            required: false,\n        },\n        rightPointDescription: {\n            type: String,\n            default: '',\n            required: false,\n        },\n        value: {\n            type: Number,\n            default: 0,\n            required: false,\n        },\n        maxValue: {\n            type: Number,\n            default: 100,\n            required: false,\n        },\n    },\n\n    computed: {\n        rightPointClasses() {\n            return {\n                'swag-migration-progress-bar__bubble': true,\n                'swag-migration-progress-bar__bubble--disabled': this.value < this.maxValue,\n                'swag-migration-progress-bar__bubble--active': this.value >= this.maxValue,\n            };\n        },\n    },\n});\n","export default \"{% block swag_migration_progress_bar %}\\n    <div class=\\\"swag-migration-progress-bar\\\">\\n\\n        {% block swag_migration_progress_bar_heading %}\\n            <div class=\\\"swag-migration-progress-bar__heading\\\">\\n                {{ title }}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_migration_progress_bar %}\\n            <div class=\\\"swag-migration-progress-bar__progress-bar-container\\\">\\n\\n                {% block swag_migration_progress_bar_left_point %}\\n                    <div class=\\\"swag-migration-progress-bar__point swag-migration-progress-bar__left-point\\\">\\n\\n                        {% block swag_migration_progress_bar_left_bubble %}\\n                            <div class=\\\"swag-migration-progress-bar__bubble swag-migration-progress-bar__bubble--active\\\">\\n                                <sw-icon class=\\\"swag-migration-progress-bar__icon\\\" name=\\\"regular-circle-xs\\\" size=\\\"16px\\\" small></sw-icon>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_progress_bar_left_description %}\\n                            <div class=\\\"swag-migration-progress-bar__left-description\\\">\\n                                {{ leftPointDescription }}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_progress_bar_center_bar %}\\n                    <div class=\\\"swag-migration-progress-bar__center-bar\\\">\\n\\n                        {% block swag_migration_progress_bar_progress_bar %}\\n                            <sw-progress-bar class=\\\"swag-migration-progress-bar__progress-bar\\\" :value=\\\"value\\\" :maxValue=\\\"maxValue\\\"></sw-progress-bar>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_progress_bar_caption %}\\n                            <div class=\\\"swag-migration-progress-bar__caption\\\">\\n                                {{ value }} / {{ maxValue }}\\n                            </div>\\n                        {% endblock%}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_progress_bar_right_point %}\\n                    <div class=\\\"swag-migration-progress-bar__point swag-migration-progress-bar__right-point\\\">\\n\\n                        {% block swag_migration_progress_bar_right_bubble %}\\n                            <div :class=\\\"rightPointClasses\\\">\\n                                <sw-icon class=\\\"swag-migration-progress-bar__icon\\\" name=\\\"regular-checkmark-xs\\\" size=\\\"16px\\\" small></sw-icon>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_progress_bar_right_description %}\\n                            <div class=\\\"swag-migration-progress-bar__right-description\\\">\\n                                {{ rightPointDescription }}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-assistant.html.twig';\nimport './swag-migration-assistant.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-assistant', {\n    computed: {\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    template,\n});\n","export default \"{% block swag_migration_assistant %}\\n    <sw-card class=\\\"swag-migration-assistant\\\"\\n             position-identifier=\\\"swag-migration-assistant\\\"\\n             :title=\\\"$tc('swag-migration.index.assistantCard.title')\\\">\\n\\n        {% block swag_migration_assistant_headline %}\\n            <h4 class=\\\"swag-migration-assistant__headline\\\">\\n                {{ $tc('swag-migration.index.assistantCard.headline') }}\\n            </h4>\\n        {% endblock %}\\n\\n        {% block swag_migration_assistant_connection %}\\n            <div class=\\\"swag-migration-assistant__paragraph\\\">\\n\\n                {% block swag_migration_assistant_connection_illustration %}\\n                    <img class=\\\"swag-migration-assistant__illustration\\\"\\n                         :src=\\\"assetFilter('/swagmigrationassistant/static/img/assistant-connection.svg')\\\">\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_connection_title %}\\n                    <h5 class=\\\"swag-migration-assistant__title\\\">\\n                        {{ $tc('swag-migration.index.assistantCard.connection.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_connection_content %}\\n                    <p class=\\\"swag-migration-assistant__content\\\">\\n                        {{ $tc('swag-migration.index.assistantCard.connection.content') }}\\n                    </p>\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_connection_content_link %}\\n                    <div class=\\\"swag-migration-assistant__link\\\">\\n                        <a class=\\\"link\\\" target=\\\"_blank\\\" href=\\\"http://docs.shopware.com/en/migration-en\\\">{{ $tc('swag-migration.index.assistantCard.connection.link') }}</a>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_migration_assistant_dataSelection %}\\n            <div class=\\\"swag-migration-assistant__paragraph\\\">\\n\\n                {% block swag_migration_assistant_dataSelection_illustration %}\\n                    <img class=\\\"swag-migration-assistant__illustration\\\"\\n                         :src=\\\"assetFilter('/swagmigrationassistant/static/img/assistant-dataSelection.svg')\\\">\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_dataSelection_title %}\\n                    <h5 class=\\\"swag-migration-assistant__title\\\">\\n                        {{ $tc('swag-migration.index.assistantCard.dataSelection.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_dataSelection_content %}\\n                    <p class=\\\"swag-migration-assistant__content\\\">\\n                        {{ $tc('swag-migration.index.assistantCard.dataSelection.content') }}\\n                    </p>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_migration_assistant_migrationOverview %}\\n            <div class=\\\"swag-migration-assistant__paragraph\\\">\\n\\n                {% block swag_migration_assistant_migrationOverview_illustration %}\\n                    <img class=\\\"swag-migration-assistant__illustration\\\"\\n                         :src=\\\"assetFilter('/swagmigrationassistant/static/img/assistant-migrationOverview.svg')\\\">\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_migrationOverview_title %}\\n                    <h5 class=\\\"swag-migration-assistant__title\\\">\\n                        {{ $tc('swag-migration.index.assistantCard.migrationOverview.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_migrationOverview_content %}\\n                <p class=\\\"swag-migration-assistant__content\\\">{{ $tc('swag-migration.index.assistantCard.migrationOverview.content') }}</p>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_migration_assistant_finish %}\\n            <div class=\\\"swag-migration-assistant__paragraph\\\">\\n\\n                {% block swag_migration_assistant_finish_title %}\\n                    <h5 class=\\\"swag-migration-assistant__title\\\">\\n                        {{ $tc('swag-migration.index.assistantCard.finish') }}\\n                    </h5>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-confirm-warning.html.twig';\nimport './swag-migration-confirm-warning.scss';\n\nconst { Component } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-confirm-warning', {\n    template,\n\n    data() {\n        return {\n            isCurrencyChecked: false,\n            isLanguageChecked: false,\n        };\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'environmentInformation',\n        ]),\n\n        hasDifferentCurrency() {\n            return this.sourceSystemCurrency !== this.targetSystemCurrency;\n        },\n\n        sourceSystemCurrency() {\n            return this.environmentInformation.sourceSystemCurrency;\n        },\n\n        targetSystemCurrency() {\n            return this.environmentInformation.targetSystemCurrency;\n        },\n\n        hasDifferentLanguage() {\n            return this.sourceSystemLanguage !== this.targetSystemLanguage;\n        },\n\n        sourceSystemLanguage() {\n            return this.environmentInformation.sourceSystemLocale;\n        },\n\n        targetSystemLanguage() {\n            return this.environmentInformation.targetSystemLocale;\n        },\n\n        isContinuable() {\n            return (!this.hasDifferentCurrency || this.isCurrencyChecked) &&\n                (!this.hasDifferentLanguage || this.isLanguageChecked);\n        },\n    },\n\n    methods: {\n        onCheckboxValueChanged() {\n            this.$emit('confirmation-change', this.isContinuable);\n        },\n    },\n});\n","export default \"{% block swag_migration_confirm_warning %}\\n    <div class=\\\"swag-migration-confirm-warning\\\">\\n\\n        {% block swag_migration_confirm_warning_card %}\\n            <sw-card\\n                v-if=\\\"hasDifferentCurrency\\\"\\n                class=\\\"swag-migration-confirm-warning\\\"\\n                position-identifier=\\\"swag-migration-confirm-warning\\\"\\n            >\\n\\n                {% block swag_migration_confirm_warning_bubble %}\\n                    <div class=\\\"swag-migration-confirm-warning__bubble\\\">\\n                        <sw-icon class=\\\"swag-migration-confirm-warning__bubble-icon\\\"\\n                                 name=\\\"regular-exclamation-triangle\\\"\\n                                 size=\\\"36px\\\"\\n                                 decorative>\\n                        </sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_warning_title %}\\n                    <h5 class=\\\"swag-migration-confirm-warning__title\\\">\\n                        {{ $tc('swag-migration.index.confirmWarningCard.currencyMismatch.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_warning_text %}\\n                    <p class=\\\"swag-migration-confirm-warning__text\\\">\\n                        {{ $tc('swag-migration.index.confirmWarningCard.currencyMismatch.text', 0, { sourceSystemCurrency, targetSystemCurrency }) }}\\n                    </p>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_warning_question %}\\n                    <p class=\\\"swag-migration-confirm-warning__question\\\">\\n                        {{ $tc('swag-migration.index.confirmWarningCard.currencyMismatch.question', 0, { targetSystemCurrency }) }}\\n                    </p>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_warning_checkbox %}\\n                    <sw-checkbox-field class=\\\"swag-migration-confirm-warning__checkbox\\\"\\n                                       :label=\\\"$tc('swag-migration.index.confirmWarningCard.currencyMismatch.checkboxLabel')\\\"\\n                                       v-model:value=\\\"isCurrencyChecked\\\"\\n                                       @update:value=\\\"onCheckboxValueChanged\\\">\\n                    </sw-checkbox-field>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block swag_migration_confirm_language_warning_card %}\\n            <sw-card\\n                v-if=\\\"hasDifferentLanguage\\\"\\n                class=\\\"swag-migration-confirm-warning__card\\\"\\n                position-identifier=\\\"swag-migration-confirm-warning__card\\\"\\n            >\\n\\n                {% block swag_migration_confirm_language_warning_bubble %}\\n                    <div class=\\\"swag-migration-confirm-warning__bubble\\\">\\n                        <sw-icon class=\\\"swag-migration-confirm-warning__bubble-icon\\\"\\n                                 name=\\\"regular-exclamation-triangle\\\"\\n                                 size=\\\"36px\\\"\\n                                 decorative>\\n                        </sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_language_warning_title %}\\n                    <h5 class=\\\"swag-migration-confirm-warning__title\\\">\\n                        {{ $tc('swag-migration.index.confirmWarningCard.languageMismatch.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_language_warning_text %}\\n                    <p class=\\\"swag-migration-confirm-warning__text\\\">\\n                        {{ $tc('swag-migration.index.confirmWarningCard.languageMismatch.text', 0, { sourceSystemLanguage, targetSystemLanguage }) }}\\n                    </p>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_language_warning_question %}\\n                    <p class=\\\"swag-migration-confirm-warning__question\\\">\\n                        {{ $tc('swag-migration.index.confirmWarningCard.languageMismatch.question', 0, { targetSystemLanguage }) }}\\n                    </p>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_language_warning_checkbox %}\\n                    <sw-checkbox-field class=\\\"swag-migration-confirm-warning__checkbox\\\"\\n                                       :label=\\\"$tc('swag-migration.index.confirmWarningCard.currencyMismatch.checkboxLabel')\\\"\\n                                       v-model:value=\\\"isLanguageChecked\\\"\\n                                       @update:value=\\\"onCheckboxValueChanged\\\">\\n                    </sw-checkbox-field>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-media-process.html.twig';\nimport './swag-migration-media-process.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-media-process', {\n    template,\n});\n","export default \"{% block swag_migration_media_process %}\\n    <sw-card class=\\\"swag-migration-media-process\\\" position-identifier=\\\"swag-migration-media-process\\\">\\n\\n        {% block swag_migration_media_process_content %}\\n            <div class=\\\"swag-migration-media-process__content\\\">\\n\\n                {% block swag_migration_media_process_icon %}\\n                    <div class=\\\"swag-migration-media-process__bubble\\\">\\n                        <sw-icon class=\\\"swag-migration-media-process__icon\\\" name=\\\"regular-activity\\\" size=\\\"36px\\\" decorative></sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_media_process_title %}\\n                    <div class=\\\"swag-migration-media-process__title\\\">\\n                        {{ $tc('swag-migration.index.loadingScreenCard.mediaProcessScreen.title') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_media_process_message %}\\n                    <p class=\\\"swag-migration-media-process__message\\\">\\n                        {{ $tc('swag-migration.index.loadingScreenCard.mediaProcessScreen.message') }}\\n                    </p>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-tab-card.html.twig';\nimport './swag-migration-tab-card.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @example\n * <swag-migration-tab-card>\n *  <swag-migration-tab-card-item title=\"Item 1\">\n *      My item content 1\n *  </swag-migration-tab-card-item>\n *  <swag-migration-tab-card-item title=\"Item 2\">\n *      My item content 2\n *  </swag-migration-tab-card-item>\n * </swag-migration-tab-card>\n *\n * @package services-settings\n */\nComponent.register('swag-migration-tab-card', {\n    template,\n\n    props: {\n        title: {\n            type: String,\n            default: '',\n            required: false,\n        },\n        items: {\n            type: Array,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            selectedNumber: '',\n        };\n    },\n\n    computed: {\n        tabItems() {\n            return this.$refs.swTabsItems;\n        },\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        mountedComponent() {\n            this.$nextTick(() => {\n                // let the tabs component know that the content may need a scrollbar\n                this.$refs.tabs.checkIfNeedScroll();\n                this.$refs.tabs.addScrollbarOffset();\n\n                // select first tab\n                if (this.tabItems !== undefined && this.tabItems.length > 0) {\n                    this.selectedNumber = this.tabItems[0].name;\n                    setTimeout(() => {\n                        this.$refs.tabs.setActiveItem(this.tabItems[0]);\n                    });\n                }\n            });\n        },\n\n        onNewActiveItem(item) {\n            this.$refs.contentContainer[this.selectedNumber].setActive(false);\n            this.selectedNumber = item.name;\n            this.$refs.contentContainer[this.selectedNumber].setActive(true);\n        },\n\n        getErrorCountForGroupTab(group) {\n            return group.mapping.reduce((currentValue, mapping) => {\n                if (mapping.destinationUuid === null || mapping.destinationUuid.length === 0) {\n                    return currentValue + 1;\n                }\n\n                return currentValue;\n            }, 0);\n        },\n    },\n});\n","export default \"{% block swag_migration_tab_card %}\\n    <div class=\\\"swag-migration-tab-card\\\">\\n        <sw-card\\n            class=\\\"sw-card--grid\\\"\\n            ref=\\\"card\\\"\\n            :title=\\\"title\\\"\\n            position-identifier=\\\"swag-migration-tab-card\\\"\\n        >\\n            <template #tabs>\\n\\n                {% block swag_migration_tab_card_item_tab %}\\n                    <sw-tabs\\n                        :small=\\\"false\\\"\\n                        ref=\\\"tabs\\\"\\n                        @new-item-active=\\\"onNewActiveItem\\\"\\n                        position-identifier=\\\"swag-migration-tab-card-item-tab\\\"\\n                    >\\n                        <sw-tabs-item\\n                            v-for=\\\"(item, key) in items\\\"\\n                            :name=\\\"key.toString()\\\"\\n                            :key=\\\"key.toString() + '-tab'\\\"\\n                            ref=\\\"swTabsItems\\\"\\n                        >\\n\\n                            {% block swag_migration_tab_card_item_tab_content %}\\n                                <span class=\\\"swag-migration-tab-card__title\\\">\\n                                    {{ $tc(`swag-migration.index.premappingCard.group.${item.entity}`) }}\\n                                </span>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_tab_card_item_tab_invalid_badge %}\\n                                <span v-show=\\\"item.errorBadgeNumber\\\" class=\\\"swag-migration-tab-card__invalid-badge\\\">\\n                                    {{ getErrorCountForGroupTab(item) }}\\n                                </span>\\n                            {% endblock %}\\n                        </sw-tabs-item>\\n                    </sw-tabs>\\n                {% endblock %}\\n            </template>\\n\\n            <template\\n                v-for=\\\"(item, key) in items\\\"\\n                :key=\\\"key.toString() + '-content'\\\"\\n            >\\n                <swag-migration-tab-card-item ref=\\\"contentContainer\\\">\\n                    <slot\\n                        name=\\\"items\\\"\\n                        :item=\\\"item\\\"\\n                    ></slot>\\n                </swag-migration-tab-card-item>\\n            </template>\\n\\n            <slot>\\n                {% block swag_migration_tab_card_slot %}{% endblock %}\\n            </slot>\\n        </sw-card>\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-tab-card-item.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-tab-card-item', {\n    template,\n\n    data() {\n        return {\n            active: false,\n        };\n    },\n\n    methods: {\n        setActive(active) {\n            this.active = active;\n        },\n    },\n});\n","export default \"{% block swag_migration_tab_card_item %}\\n    <div class=\\\"swag-migration-tab-card-item\\\">\\n        <div v-show=\\\"active\\\">\\n            <slot>\\n                {% block swag_migration_tab_card_item_slot %}{% endblock %}\\n            </slot>\\n        </div>\\n    </div>\\n{% endblock %}\";","export default \"{% block swag_migration_grid_selection %}\\n    <div class=\\\"swag-migration-grid-selection\\\">\\n\\n        {% block swag_migration_grid_selection_grid %}\\n            <sw-grid ref=\\\"tableDataGrid\\\"\\n                     :items=\\\"items\\\"\\n                     :selectable=\\\"false\\\">\\n                <template #columns=\\\"{ item }\\\">\\n\\n                    {% block swag_migration_grid_selection_grid_column_description %}\\n                        <sw-grid-column flex=\\\"1fr\\\" :label=\\\"$tc('swag-migration.index.premappingCard.previousTitle')\\\">\\n                            {{ item.description }}\\n                        </sw-grid-column>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_grid_selection_grid_column_choice %}\\n                        <sw-grid-column class=\\\"swag-migration-grid-selection__choice-column\\\"\\n                                        flex=\\\"1fr\\\"\\n                                        :label=\\\"$tc('swag-migration.index.premappingCard.newAssignmentTitle')\\\">\\n\\n                            {% block swag_migration_grid_selection_grid_column_choice_field %}\\n                                <sw-select-field\\n                                    v-model:value=\\\"item.destinationUuid\\\"\\n                                    class=\\\"swag-migration-grid-selection__choice-field\\\"\\n                                    :class=\\\"getClassesAfterValidation(item)\\\"\\n                                    @update:value=\\\"onInput\\\"\\n                                >\\n                                    <option\\n                                        class=\\\"sw-field--select__placeholder-option\\\"\\n                                        :value=\\\"''\\\"\\n                                    >\\n                                        {{ $tc('swag-migration.index.premappingCard.placeholder') }}\\n                                    </option>\\n                                    <option v-for=\\\"choice in choices\\\" :key=\\\"choice.uuid\\\" :value=\\\"choice.uuid\\\">\\n                                        {{ choice.description }}\\n                                    </option>\\n                                </sw-select-field>\\n                            {% endblock %}\\n                        </sw-grid-column>\\n                    {% endblock %}\\n                </template>\\n\\n                {% block swag_migration_grid_selection_grid_pagination %}\\n                    <template #pagination>\\n                        <sw-pagination\\n                            :page=\\\"page\\\"\\n                            :limit=\\\"limit\\\"\\n                            :total=\\\"total\\\"\\n                            :total-visible=\\\"7\\\"\\n                            :steps=\\\"paginationSteps\\\"\\n                            @page-change=\\\"onPageChange\\\">\\n                        </sw-pagination>\\n                    </template>\\n                {% endblock %}\\n            </sw-grid>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-grid-selection.html.twig';\nimport './swag-migration-grid-selection.scss';\n\nconst { Component, Mixin } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-grid-selection', {\n    template,\n\n    mixins: [\n        Mixin.getByName('listing'),\n    ],\n\n    props: {\n        choices: {\n            type: Array,\n            required: true,\n        },\n        mapping: {\n            type: Array,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            items: [],\n            disableRouteParams: true,\n            limit: 10,\n            paginationSteps: [5, 10, 15, 20, 25, 30],\n        };\n    },\n\n    methods: {\n        getList() {\n            this.total = this.mapping.length;\n            const start = (this.page - 1) * this.limit;\n            const end = Math.min(start + this.limit, this.total);\n            this.items = [];\n\n            // Copy the object references into the display items array (for pagination). Note: Array.slice dont work\n            for (let i = start; i < end; i += 1) {\n                this.items.push(this.mapping[i]);\n            }\n\n            return this.items;\n        },\n\n        onInput() {\n            this.$emit('input');\n        },\n\n        getClassesAfterValidation(item) {\n            const hasError = item.destinationUuid === null || item.destinationUuid.length === 0;\n            return { 'has--error': hasError };\n        },\n    },\n});\n","import template from './swag-migration-expand-div.html.twig';\nimport './swag-migration-expand-div.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-expand-div', {\n    template,\n\n    props: {\n        expandTitle: {\n            type: String,\n            default: '',\n            required: false,\n        },\n\n        collapseTitle: {\n            type: String,\n            default: '',\n            required: false,\n        },\n    },\n\n    data() {\n        return {\n            isExpanded: false,\n        };\n    },\n\n    methods: {\n        onClick() {\n            this.isExpanded = !this.isExpanded;\n        },\n    },\n});\n","export default \"{% block swag_migration_expand_div %}\\n    <div class=\\\"swag-migration-expand-div\\\">\\n        <div class=\\\"swag-migration-expand-div__title\\\">\\n            <div class=\\\"swag-migration-expand-div__link\\\"\\n                 @click=\\\"onClick\\\">\\n                <div v-if=\\\"isExpanded\\\">\\n                    {{ expandTitle }}\\n                    <sw-icon class=\\\"swag-migration-expand-div__icon\\\"\\n                             name=\\\"regular-chevron-circle-up\\\"\\n                             size=\\\"16px\\\">\\n                    </sw-icon>\\n                </div>\\n                <div v-else>\\n                    {{ collapseTitle }}\\n                    <sw-icon class=\\\"swag-migration-expand-div__icon\\\"\\n                             name=\\\"regular-chevron-circle-down\\\"\\n                             size=\\\"16px\\\">\\n                    </sw-icon>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div v-if=\\\"isExpanded\\\" class=\\\"swag-migration-expand-div__slot\\\">\\n            <slot>\\n\\n                {% block swag_migration_expand_div_slot %}\\n                {% endblock %}\\n            </slot>\\n        </div>\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-shop-avatar.html.twig';\nimport './swag-migration-shop-avatar.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-shop-avatar', {\n    template,\n\n    props: {\n        size: {\n            type: String,\n            required: true,\n        },\n        color: {\n            type: String,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            fontSize: 16,\n            lineHeight: 16,\n        };\n    },\n\n    computed: {\n        avatarStyle() {\n            return {\n                width: this.size,\n                height: this.size,\n                'background-color': this.color,\n                'font-size': `${this.fontSize}px`,\n                'line-height': `${this.lineHeight}px`,\n            };\n        },\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        mountedComponent() {\n            this.generateAvatarInitialsSize();\n        },\n\n        generateAvatarInitialsSize() {\n            const avatarSize = this.$refs.shopAvatar.offsetHeight;\n\n            this.fontSize = Math.round(avatarSize * 0.4);\n            this.lineHeight = Math.round(avatarSize * 0.98);\n        },\n    },\n});\n","export default \"{% block swag_migration_shop_avatar %}\\n    <span class=\\\"swag-migration-shop-avatar\\\"\\n          :style=\\\"avatarStyle\\\"\\n          role=\\\"img\\\"\\n          ref=\\\"shopAvatar\\\">\\n        <slot></slot>\\n    </span>\\n{% endblock %}\";","import template from './swag-migration-settings-icon.html.twig';\nimport './swag-migration-settings-icon.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-settings-icon', {\n    template,\n    computed: {\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n});\n","export default \"{% block swag_migration_settings_icon %}\\n    <img\\n        class=\\\"swag-migration-settings_icon__img\\\"\\n        :src=\\\"assetFilter('/swagmigrationassistant/static/img/migration-assistant-plugin.svg')\\\"\\n    >\\n{% endblock %}\\n\";","import template from './swag-migration-dashboard-card.html.twig';\nimport './swag-migration-dashboard-card.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-dashboard-card', {\n    template,\n\n    computed: {\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n});\n","export default \"{% block swag_migration_dashboard_card %}\\n    <sw-card class=\\\"swag-migration-dashboard-card\\\" position-identifier=\\\"swag-migration-dashboard-card\\\">\\n\\n        {% block swag_migration_dashboard_card_wrapper %}\\n            {%  block swag_migration_dashboard_card_title %}\\n                <template #title>\\n                    <span class=\\\"swag-migration-dashboard-card__title\\\">\\n                        {{ $tc('swag-migration.dashboard.title') }}\\n                    </span>\\n                </template>\\n            {% endblock %}\\n\\n            {% block swag_migration_dashboard_card_container %}\\n                <sw-container class=\\\"swag-migration-shop-information\\\" rows=\\\"auto auto\\\">\\n                    {% block fuuuu %}\\n                    {% endblock %}\\n\\n                    {%  block swag_migration_dashboard_card_content %}\\n                        <div class=\\\"swag-migration-dashboard-card__content\\\">\\n\\n                            {%  block swag_migration_dashboard_card_wrapper %}\\n                                <div class=\\\"swag-migration-dashboard-card__wrapper\\\">\\n\\n                                    {%  block swag_migration_dashboard_card_left_content %}\\n                                        <div class=\\\"swag-migration-dashboard-card__left-content\\\">\\n\\n                                            {%  block swag_migration_dashboard_card_headline %}\\n                                                <div class=\\\"swag-migration-dashboard-card__headline\\\">\\n                                                    {{ $tc('swag-migration.dashboard.headline') }}\\n                                                </div>\\n                                            {% endblock %}\\n\\n                                            {%  block swag_migration_dashboard_card_information %}\\n                                                <div class=\\\"swag-migration-dashboard-card__information\\\">\\n                                                    {{ $tc('swag-migration.dashboard.information') }}\\n                                                </div>\\n                                            {% endblock %}\\n\\n                                            {%  block swag_migration_dashboard_card_button %}\\n                                                <sw-button variant=\\\"primary\\\" :routerLink=\\\"{ name: 'swag.migration.index.main'}\\\">\\n                                                    {{ $tc('swag-migration.dashboard.button') }}\\n                                                </sw-button>\\n                                            {%  endblock %}\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                    {%  block swag_migration_dashboard_card_right_content %}\\n                                        <div class=\\\"swag-migration-dashboard-card__right-content\\\">\\n                                            <img :src=\\\"assetFilter('/swagmigrationassistant/static/img/wizard-introduction.svg')\\\">\\n                                        </div>\\n                                    {% endblock %}\\n                                </div>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n                </sw-container>\\n            {% endblock %}\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-index.html.twig';\n\nconst { Component, State } = Shopware;\nconst { mapState, mapGetters } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-index', {\n    template,\n\n    inject: {\n        /** @var {MigrationProcessStoreInitService} migrationProcessStoreInitService */\n        migrationProcessStoreInitService: 'processStoreInitService',\n        /** @var {MigrationUiStoreInitService} migrationUiStoreInitService */\n        migrationUiStoreInitService: 'uiStoreInitService',\n    },\n\n    data() {\n        return {\n            storesInitializing: true,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'isMigrating',\n            'environmentInformation',\n            'connectionId',\n        ]),\n\n        ...mapState('swagMigration/ui', [\n            'isLoading',\n            'dataSelectionTableData',\n        ]),\n\n        ...mapGetters({\n            storeIsMigrationAllowed: 'swagMigration/ui/isMigrationAllowed',\n        }),\n\n        isMigrationAllowed() {\n            return this.storeIsMigrationAllowed &&\n                this.environmentInformation.migrationDisabled === false;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        migrateButtonDisabled() {\n            return this.isLoading ||\n                this.isMigrating ||\n                !this.isMigrationAllowed;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.connectionId === null\n                || Object.keys(this.environmentInformation).length === 0\n            ) {\n                return this.migrationProcessStoreInitService.initProcessStore().then(() => {\n                    return this.migrationUiStoreInitService.initUiStore();\n                }).catch(() => {}).finally(() => {\n                    this.storesInitializing = false;\n                });\n            }\n\n            if (this.dataSelectionTableData.length === 0) {\n                return this.migrationUiStoreInitService.initUiStore().then(() => {\n                    this.storesInitializing = false;\n                }).catch(() => {\n                    this.storesInitializing = false;\n                });\n            }\n\n            this.storesInitializing = false;\n            return Promise.resolve();\n        },\n\n        onMigrate() {\n            if (this.$refs.contentComponent.onMigrate !== undefined) {\n                this.$refs.contentComponent.onMigrate();\n            } else {\n                this.$nextTick(() => {\n                    State.commit('swagMigration/ui/setStartMigration', true);\n                    this.$router.push({ name: 'swag.migration.index.main' });\n                });\n            }\n        },\n\n        /**\n         * Calls methods on the child router view component (contentComponent) dynamically\n         * if existing. This is used to trigger some method on the child via action button.\n         *\n         * @param methodName\n         */\n        onActionButtonClick(methodName) {\n            if (this.$refs.contentComponent[methodName] !== undefined) {\n                this.$refs.contentComponent[methodName]();\n            }\n        },\n    },\n});\n","export default \"{% block swag_migration_index %}\\n    <sw-page class=\\\"swag-migration-index\\\">\\n\\n        {% block swag_migration_index_smart_bar_header %}\\n            <template #smart-bar-header>\\n                <h2>\\n                    {{ $tc('sw-settings.index.title') }}\\n                    <sw-icon name=\\\"regular-chevron-right-xs\\\" small></sw-icon>\\n                    {{ $tc('swag-migration.general.mainMenuItemGeneral') }}\\n                </h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_smart_bar_actions %}\\n            <template v-if=\\\"!storesInitializing\\\" #smart-bar-actions>\\n                <sw-button variant=\\\"primary\\\" @click=\\\"onMigrate\\\" :disabled=\\\"migrateButtonDisabled\\\">\\n                    {{ $tc('swag-migration.index.migrateButton') }}\\n                </sw-button>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_content %}\\n            <template #content>\\n                <sw-card-view v-if=\\\"!storesInitializing\\\">\\n\\n                    {% block swag_migration_index_tabs %}\\n                        <sw-tabs class=\\\"swag-migration-index-tabs\\\" position-identifier=\\\"swag-migration-index-tabs\\\">\\n\\n                            {% block swag_migration_index_tab_main %}\\n                                <sw-tabs-item :route=\\\"{ name: 'swag.migration.index.main' }\\\"\\n                                              :title=\\\"$tc('swag-migration.general.tabMain')\\\">\\n                                    {{ $tc('swag-migration.general.tabMain') }}\\n                                </sw-tabs-item>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_index_tab_data_selector %}\\n                                <sw-tabs-item :route=\\\"{ name: 'swag.migration.index.dataSelector' }\\\"\\n                                              :title=\\\"$tc('swag-migration.general.tabDataSelector')\\\">\\n                                    {{ $tc('swag-migration.general.tabDataSelector') }}\\n                                </sw-tabs-item>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_index_tab_history %}\\n                                <sw-tabs-item :route=\\\"{ name: 'swag.migration.index.history' }\\\"\\n                                              :title=\\\"$tc('swag-migration.general.tabHistory')\\\">\\n                                    {{ $tc('swag-migration.general.tabHistory') }}\\n                                </sw-tabs-item>\\n                            {% endblock %}\\n                        </sw-tabs>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_index_content_view %}\\n                        <router-view ref=\\\"contentComponent\\\">\\n                        </router-view>\\n                    {% endblock %}\\n                </sw-card-view>\\n\\n                {% block swag_migration_index_loader_content %}\\n                    <sw-loader v-if=\\\"storesInitializing\\\"></sw-loader>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\\n\";","import template from './swag-migration-empty-screen.html.twig';\nimport './swag-migration-empty-screen.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-empty-screen', {\n    template,\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    methods: {\n        onConnectClick() {\n            this.$router.push({name: 'swag.migration.wizard.introduction'});\n        },\n    },\n});\n","export default \"{% block swag_migration_empty_screen %}\\n    <sw-page class=\\\"swag-migration-empty-screen\\\">\\n\\n        {% block swag_migration_index_smart_bar_header %}\\n            <template #smart-bar-header>\\n                <h2>\\n                    {{ $tc('sw-settings.index.title') }}\\n                    <sw-icon name=\\\"regular-chevron-right-xs\\\" small></sw-icon>\\n                    {{ $tc('swag-migration.general.mainMenuItemGeneral') }}\\n                </h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_smart_bar_actions %}\\n            <template #smart-bar-actions>\\n                <sw-button variant=\\\"primary\\\" disabled>\\n                    {{ $tc('swag-migration.index.migrateButton') }}\\n                </sw-button>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_content %}\\n            <template #content>\\n                <sw-empty-state :title=\\\"$tc('swag-migration.emptyScreen.title')\\\">\\n                    <template>\\n                        <i18n-t class=\\\"swag-migration-empty-screen__description\\\"\\n                                keypath=\\\"swag-migration.emptyScreen.description\\\"\\n                                tag=\\\"p\\\">\\n                            <template #linebreak>\\n                                <br>\\n                            </template>\\n                            <template #link>\\n                                <a class=\\\"link\\\"\\n                                   href=\\\"https://docs.shopware.com/en/migration-en\\\"\\n                                   target=\\\"_blank\\\">\\n                                    {{ $tc('swag-migration.emptyScreen.link') }}\\n                                </a>\\n                            </template>\\n                        </i18n-t>\\n                    </template>\\n\\n                    <template #actions>\\n                        <sw-button variant=\\\"primary\\\"\\n                                   @click=\\\"onConnectClick\\\">\\n                            {{ $tc('swag-migration.emptyScreen.connectButton') }}\\n                        </sw-button>\\n                    </template>\\n                </sw-empty-state>\\n            </template>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\\n\";","import template from './swag-migration-main-page.html.twig';\nimport './swag-migration-main-page.scss';\n\nconst { Component, State } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-main-page', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n        /** @var {MigrationWorkerService} migrationWorkerService */\n        migrationWorkerService: 'migrationWorkerService',\n        /** @var {MigrationProcessStoreInitService} migrationProcessStoreInitService */\n        migrationProcessStoreInitService: 'processStoreInitService',\n        /** @var {MigrationUiStoreInitService} migrationUiStoreInitService */\n        migrationUiStoreInitService: 'uiStoreInitService',\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'environmentInformation',\n            'connectionId',\n            'isMigrating',\n        ]),\n\n        ...mapState('swagMigration/ui', [\n            'isLoading',\n            'startMigration',\n        ]),\n\n        displayWarnings() {\n            return this.environmentInformation.displayWarnings;\n        },\n\n        connectionEstablished() {\n            return this.environmentInformation !== undefined &&\n                (\n                    this.environmentInformation.requestStatus.isWarning === true ||\n                    (\n                        this.environmentInformation.requestStatus.isWarning === false &&\n                        this.environmentInformation.requestStatus.code === ''\n                    )\n                );\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            State.commit('swagMigration/ui/setIsLoading', true);\n\n            if (this.connectionId === null) {\n                this.$router.push({ name: 'swag.migration.wizard.introduction' });\n                return;\n            }\n\n            if (Object.keys(this.environmentInformation).length < 1) {\n                this.$router.push({ name: 'swag.migration.emptyScreen' });\n                return;\n            }\n\n            if (this.isMigrating) {\n                this.$router.push({ name: 'swag.migration.processScreen' });\n                return;\n            }\n\n            let isTakeoverForbidden = false;\n            await this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                isTakeoverForbidden = isRunning;\n            });\n\n            let isMigrationRunning = isTakeoverForbidden;\n            if (!isTakeoverForbidden) {\n                await this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                    isMigrationRunning = runState.isMigrationRunning;\n                });\n            }\n\n            if (isMigrationRunning) {\n                this.$router.push({ name: 'swag.migration.processScreen' });\n                return;\n            }\n\n            if (this.startMigration) {\n                await this.onMigrate();\n            }\n\n            State.commit('swagMigration/ui/setIsLoading', false);\n        },\n\n        async onMigrate() {\n            this.$nextTick().then(() => {\n                State.commit('swagMigration/process/setIsMigrating', true);\n                /**\n                 * reset the premapping because it does not get fetched again if not empty\n                 * this will ensure that the user can navigate outside of the module and keep the premapping\n                 */\n                State.commit('swagMigration/ui/setPremapping', []);\n\n                // navigate to process screen\n                State.commit('swagMigration/ui/setIsLoading', true);\n                this.$router.push({ name: 'swag.migration.processScreen' });\n            });\n        },\n    },\n});\n","export default \"{% block swag_migration_index_main_page %}\\n    <div class=\\\"swag-migration-index-main-page\\\">\\n\\n        {% block swag_migration_index_main_page_content %}\\n            <div v-if=\\\"!isLoading\\\">\\n\\n                {% block swag_migration_index_main_page_warnings %}\\n                    <div class=\\\"swag-migration-index-main-page__warnings\\\">\\n                        <template\\n                            v-for=\\\"warning in displayWarnings\\\"\\n                            :key=\\\"warning.snippetKey\\\"\\n                        >\\n\\n                            <sw-alert\\n                                class=\\\"swag-migration-index-main-page__warning\\\"\\n                                variant=\\\"warning\\\"\\n                            >\\n                                {{ $tc(warning.snippetKey, warning.pluralizationCount, warning.snippetArguments) }}\\n                            </sw-alert>\\n                        </template>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_shopInformation %}\\n                    <swag-migration-shop-information :connected=\\\"connectionEstablished\\\">\\n                    </swag-migration-shop-information>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_main_page_assistant %}\\n            <swag-migration-assistant v-if=\\\"!isLoading\\\"></swag-migration-assistant>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_main_page_loader %}\\n            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","export default \"{% block swag_migration_history %}\\n    <sw-card class=\\\"swag-migration-history\\\"\\n             :isLoading=\\\"isLoading\\\"\\n             :large=\\\"true\\\"\\n             position-identifier=\\\"swag-migration-history\\\">\\n        <template #grid>\\n\\n            {% block swag_migration_history_grid %}\\n                <sw-data-grid v-if=\\\"migrationRuns.length > 0\\\"\\n                              identifier=\\\"swag-migration-history\\\"\\n                              :dataSource=\\\"migrationRuns\\\"\\n                              :columns=\\\"migrationColumns\\\"\\n                              :showSelection=\\\"false\\\"\\n                              :showSettings=\\\"true\\\"\\n                              :allowColumnEdit=\\\"true\\\"\\n                              :sortBy=\\\"sortBy\\\"\\n                              :sortDirection=\\\"sortDirection\\\"\\n                              @column-sort=\\\"onSortColumn\\\">\\n\\n                    {% block swag_migration_history_grid_column_status %}\\n                        <template #column-status=\\\"{ item }\\\">\\n                            <sw-icon v-if=\\\"item.status === 'finished'\\\"\\n                                     class=\\\"swag-migration-history__status-icon swag-migration-history__status-icon--finished\\\"\\n                                     name=\\\"regular-checkmark\\\"\\n                                     size=\\\"16px\\\">\\n                            </sw-icon>\\n                            <sw-icon v-else-if=\\\"item.status === 'aborted'\\\"\\n                                     class=\\\"swag-migration-history__status-icon swag-migration-history__status-icon--aborted\\\"\\n                                     name=\\\"regular-times\\\"\\n                                     size=\\\"16px\\\">\\n                            </sw-icon>\\n                            <sw-icon v-else-if=\\\"item.status === 'running'\\\"\\n                                     class=\\\"swag-migration-history__status-icon swag-migration-history__status-icon--loading\\\"\\n                                     name=\\\"regular-circle\\\"\\n                                     size=\\\"16px\\\">\\n                            </sw-icon>\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_grid_column_profile %}\\n                        <template #column-connection.profile=\\\"{ item }\\\">\\n                            {{ item.connection.profileName }} /\\n                            {{ item.connection.gatewayName }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_grid_column_createdAt %}\\n                        <template #column-createdAt=\\\"{ item }\\\">\\n                            {{ dateFilter(item.createdAt, migrationDateOptions) }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_grid_column_sourceSystemName %}\\n                        <template #column-environmentInformation.sourceSystemName=\\\"{ item }\\\">\\n                            {{ item.environmentInformation.sourceSystemName }}\\n                            {{ item.environmentInformation.sourceSystemVersion }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_grid_column_selectedData %}\\n                        <template #column-progress=\\\"{ item }\\\">\\n                            <swag-migration-history-selected-data :entityGroups=\\\"item.progress\\\">\\n                            </swag-migration-history-selected-data>\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_grid_actions %}\\n                        <template #actions=\\\"{ item }\\\">\\n                            <sw-context-menu-item :routerLink=\\\"{ name: 'swag.migration.index.history.detail', params:{ id:item.id } }\\\">\\n                                {{ $tc('swag-migration.history.contextMenu.details') }}\\n                            </sw-context-menu-item>\\n                            <sw-context-menu-item @click=\\\"onContextDownloadLogFile(item.id)\\\">\\n                                {{ $tc('swag-migration.history.contextMenu.downloadLogs') }}\\n                            </sw-context-menu-item>\\n                            <sw-context-menu-item variant=\\\"danger\\\" @click=\\\"onContextClearRunClicked(item.id)\\\" :disabled=\\\"isMediaProcessing\\\">\\n                                {{ $tc('swag-migration.history.contextMenu.clearLogs') }}\\n                            </sw-context-menu-item>\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_grid_pagination %}\\n                        <template #pagination>\\n                                <sw-pagination :page=\\\"page\\\"\\n                                               :limit=\\\"limit\\\"\\n                                               :total=\\\"total\\\"\\n                                               :total-visible=\\\"7\\\"\\n                                               @page-change=\\\"onPageChange\\\">\\n                                </sw-pagination>\\n                        </template>\\n                    {% endblock %}\\n\\n                </sw-data-grid>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_no_data %}\\n                <div v-if=\\\"migrationRuns.length === 0\\\" class=\\\"swag-migration-history__no-data\\\">\\n                    <p class=\\\"swag-migration-history__no-data-label\\\">\\n                        {{ $tc('swag-migration.history.noData') }}\\n                    </p>\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_router_view %}\\n                <router-view></router-view>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_log_download_form %}\\n                <form class=\\\"swag-migration-history-detail-errors__download-form\\\"\\n                      ref=\\\"downloadLogsOfRunForm\\\"\\n                      :action=\\\"logDownloadEndpoint\\\"\\n                      method=\\\"POST\\\">\\n                    <input type=\\\"hidden\\\"\\n                           name=\\\"runUuid\\\"\\n                           :value=\\\"runIdForLogDownload\\\">\\n                </form>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_run_clear_confirm_modal %}\\n                <sw-modal v-if=\\\"showRunClearConfirmModal\\\"\\n                          class=\\\"swag-migration-history__run-clear-confirm-modal\\\"\\n                          :title=\\\"$tc('swag-migration.history.clearRunDialog.title')\\\"\\n                          :isLoading=\\\"runClearConfirmModalIsLoading\\\"\\n                          size=\\\"460px\\\"\\n                          @modal-close=\\\"showRunClearConfirmModal = false\\\">\\n\\n                    {% block swag_migration_history_run_clear_confirm_modal_content %}\\n                        <p class=\\\"swag-migration-history__run-clear-confirm-modal-content\\\">\\n                            {{ $tc('swag-migration.history.clearRunDialog.content') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_run_clear_confirm_modal_content_hint %}\\n                        <p class=\\\"swag-migration-history__run-clear-confirm-modal-content-hint\\\">\\n                            {{ $tc('swag-migration.history.clearRunDialog.contentHint') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_run_clear_confirm_modal_footer %}\\n                        <template #modal-footer>\\n\\n                            {% block swag_migration_history_run_clear_confirm_modal_abort %}\\n                                <sw-button size=\\\"small\\\"\\n                                           :disabled=\\\"runClearConfirmModalIsLoading\\\"\\n                                           @click=\\\"showRunClearConfirmModal = false\\\">\\n                                    {{ $tc('global.default.cancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_history_run_clear_confirm_modal_confirm %}\\n                                <sw-button size=\\\"small\\\"\\n                                           variant=\\\"primary\\\"\\n                                           :disabled=\\\"runClearConfirmModalIsLoading\\\"\\n                                           @click=\\\"onClearRunConfirmed\\\">\\n                                    {{ $tc('global.default.delete') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                        </template>\\n                    {% endblock %}\\n\\n                </sw-modal>\\n            {% endblock %}\\n\\n        </template>\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-history.html.twig';\nimport './swag-migration-history.scss';\n\nconst { Component, Mixin, State } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-history', {\n    template,\n\n    inject: {\n        repositoryFactory: 'repositoryFactory',\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n    },\n\n    mixins: [\n        Mixin.getByName('listing'),\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            migrationRuns: [],\n            migrationDateOptions: {\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            },\n            sortBy: 'createdAt',\n            sortDirection: 'DESC',\n            oldParams: {},\n            context: Shopware.Context.api,\n            logDownloadEndpoint: '',\n            runIdForLogDownload: '',\n            runIdForRunClear: '',\n            showRunClearConfirmModal: false,\n            runClearConfirmModalIsLoading: false,\n            isMediaProcessing: true,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        migrationRunRepository() {\n            return this.repositoryFactory.create('swag_migration_run');\n        },\n\n        migrationColumns() {\n            return this.getMigrationColumns();\n        },\n\n        dateFilter() {\n            return Shopware.Filter.getByName('date');\n        },\n    },\n\n    created() {\n        this.migrationService.isMediaProcessing().then((response) => {\n            this.isMediaProcessing = response.data;\n        });\n        this.logDownloadEndpoint = '/api/_action/' +\n            `${this.migrationService.getApiBasePath()}/download-logs-of-run`;\n    },\n\n    methods: {\n        getMigrationColumns() {\n            return [\n                {\n                    property: 'connection.name',\n                    dataIndex: 'connection.name',\n                    label: this.$tc('swag-migration.history.connectionName'),\n                    primary: true,\n                    allowResize: true,\n                },\n                {\n                    property: 'environmentInformation.sourceSystemDomain',\n                    dataIndex: 'environmentInformation.sourceSystemDomain',\n                    label: this.$tc('swag-migration.history.shopDomain'),\n                    visible: false,\n                    allowResize: true,\n                },\n                {\n                    property: 'environmentInformation.sourceSystemName',\n                    dataIndex: 'environmentInformation.sourceSystemName',\n                    label: this.$tc('swag-migration.history.shopSystem'),\n                    visible: false,\n                    allowResize: true,\n                },\n                {\n                    property: 'connection.profile',\n                    dataIndex: 'connection.profileName',\n                    label: this.$tc('swag-migration.history.profileAndGateway'),\n                    allowResize: true,\n                },\n                {\n                    property: 'status',\n                    dataIndex: 'status',\n                    label: this.$tc('swag-migration.history.status'),\n                    align: 'center',\n                    allowResize: true,\n                },\n                {\n                    property: 'progress',\n                    dataIndex: 'progress',\n                    label: this.$tc('swag-migration.history.selectedData'),\n                    visible: false,\n                    allowResize: true,\n                },\n                {\n                    property: 'createdAt',\n                    dataIndex: 'createdAt',\n                    label: this.$tc('swag-migration.history.importDateTime'),\n                    align: 'right',\n                    allowResize: true,\n                },\n            ];\n        },\n\n        getList() {\n            this.isLoading = true;\n\n            const params = this.normalizeListingParams(\n                this.getMainListingParams(),\n            );\n\n            if (JSON.stringify(this.oldParams) === JSON.stringify(params)) {\n                // Do not request the data again if the parameters don't change.\n                // For example if the detail window (child route) is opened.\n                this.isLoading = false;\n                return Promise.resolve(this.migrationRuns);\n            }\n\n            this.oldParams = params;\n            const criteria = new Criteria(params.page, params.limit);\n            criteria.addSorting(Criteria.sort(params.sortBy, params.sortDirection, params.naturalSorting));\n\n            return this.migrationRunRepository.search(criteria, this.context).then((runs) => {\n                this.total = runs.total;\n                this.migrationRuns = runs;\n                this.isLoading = false;\n\n                return this.migrationRuns;\n            });\n        },\n\n        /**\n         * This will convert string values to int values in the param object.\n         * It is needed because Vue Routers '$router.go(-1)' method will mix up\n         * the types of the original params object for integers to strings.\n         *\n         * @param {Object} params\n         * @returns {Object}\n         */\n        normalizeListingParams(params) {\n            params.limit = parseInt(params.limit, 10);\n            params.page = parseInt(params.page, 10);\n\n            return params;\n        },\n\n        onMigrateButtonClick() {\n            State.commit('swagMigration/ui/setStartMigration', true);\n            this.$router.push({ name: 'swag.migration.index.main' });\n        },\n\n        onContextDownloadLogFile(runId) {\n            this.runIdForLogDownload = runId;\n            this.$nextTick(() => {\n                this.$refs.downloadLogsOfRunForm.submit();\n            });\n        },\n\n        clearDataOfRun(runId) {\n            this.runClearConfirmModalIsLoading = true;\n            return this.migrationService.clearDataOfRun(runId).then(() => {\n                this.showRunClearConfirmModal = false;\n                this.runClearConfirmModalIsLoading = false;\n                this.$router.go();\n            }).catch(() => {\n                this.createNotificationError({\n                    message: this.$t('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.errorNotification.message'),\n                    growl: true,\n                });\n            });\n        },\n\n        onContextClearRunClicked(runId) {\n            this.runIdForRunClear = runId;\n            this.showRunClearConfirmModal = true;\n        },\n\n        onClearRunConfirmed() {\n            this.clearDataOfRun(this.runIdForRunClear);\n        },\n    },\n});\n","export default \"{% block swag_migration_history_detail %}\\n    <div class=\\\"swag-migration-history-detail\\\">\\n        <sw-modal v-if=\\\"showModal\\\"\\n                  class=\\\"swag-migration-history-detail__modal\\\"\\n                  size=\\\"800px\\\"\\n                  :title=\\\"$tc('swag-migration.history.detailPage.title')\\\"\\n                  :isLoading=\\\"isLoading\\\"\\n                  @modal-close=\\\"onCloseModal\\\">\\n\\n            {% block swag_migration_history_detail_modal_content %}\\n                <div v-if=\\\"isLoading\\\"\\n                     class=\\\"swag-migration-history-detail__loading-placeholder\\\">\\n                </div>\\n                <div v-if=\\\"!isLoading\\\"\\n                     class=\\\"swag-migration-history-detail__content\\\">\\n\\n                    {% block swag_migration_history_detail_header %}\\n                        <div class=\\\"swag-migration-history-detail__header\\\">\\n\\n                            {% block swag_migration_history_detail_connectin_avatar %}\\n                                <template v-if=\\\"profileIcon === null || profileIcon === ''\\\">\\n                                    <swag-migration-shop-avatar class=\\\"swag-migration-shop-information__connection-avatar\\\"\\n                                                                color=\\\"#189EFF\\\"\\n                                                                size=\\\"80px\\\">\\n                                        {{ shopFirstLetter }}\\n                                    </swag-migration-shop-avatar>\\n                                </template>\\n\\n                                <template v-else>\\n                                    <img class=\\\"swag-migration-shop-information__profile-avatar\\\"\\n                                         :src=\\\"assetFilter(profileIcon)\\\"\\n                                         size=\\\"80px\\\">\\n                                </template>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_history_detail_connection_info %}\\n                                <div class=\\\"swag-migration-history-detail__connection-info\\\">\\n\\n                                    {% block swag_migration_history_detail_shop_system %}\\n                                        <div class=\\\"swag-migration-history-detail__connection-name\\\">\\n                                            {{ connectionName }}\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                    {% block swag_migration_history_detail_shop_domain %}\\n                                        <div v-if=\\\"shopUrl !== ''\\\" class=\\\"swag-migration-history-detail__shop-domain\\\">\\n                                                        <span class=\\\"swag-migration-history-detail__shop-domain-prefix\\\"\\n                                                              :class=\\\"shopUrlPrefixClass\\\">\\n                                                            <sw-icon v-if=\\\"sslActive\\\"\\n                                                                     class=\\\"swag-migration-history-detail__shop-domain-prefix-icon\\\"\\n                                                                     name=\\\"regular-lock\\\"\\n                                                                     size=\\\"12px\\\">\\n                                                            </sw-icon>\\n                                                            <sw-icon v-else\\n                                                                     class=\\\"swag-migration-history-detail__shop-domain-prefix-icon\\\"\\n                                                                     name=\\\"regular-lock-open-s\\\"\\n                                                                     size=\\\"12px\\\">\\n                                                            </sw-icon>\\n                                                            {{ shopUrlPrefix }}</span>{{ shopUrl }}\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                    {% block swag_migration_history_detail_profile %}\\n                                        <div class=\\\"swag-migration-history-detail__profile\\\">\\n                                            {{ profileName }} / {{ gatewayName }}\\n                                        </div>\\n                                    {% endblock %}\\n                                </div>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_history_detail_run_info %}\\n                                <div class=\\\"swag-migration-history-detail__run-info\\\">\\n                                    <div class=\\\"swag-migration-history-detail__run-timestamp-label\\\">\\n                                        {{ $tc('swag-migration.history.detailPage.timestamp') }}\\n                                    </div>\\n                                    <div class=\\\"swag-migration-history-detail__run-timestamp-value\\\">\\n                                        {{ dateFilter(migrationRun.createdAt, migrationDateOptions) }}\\n                                    </div>\\n\\n                                    <div class=\\\"swag-migration-history-detail__run-status-label\\\">\\n                                        {{ $tc('swag-migration.history.detailPage.runStatus') }}\\n                                    </div>\\n                                    <div class=\\\"swag-migration-history-detail__run-status-value\\\" :class=\\\"runStatusClasses\\\">\\n                                        {{ $tc(runStatusSnippet) }}\\n                                    </div>\\n                                </div>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_detail_body %}\\n                        <div class=\\\"swag-migration-history-detail__body\\\">\\n\\n                            {% block swag_migration_history_detail_body_tabs %}\\n                                <sw-tabs\\n                                    ref=\\\"tabReference\\\"\\n                                    @new-item-active=\\\"newActiveTabItem\\\"\\n                                    position-identifier=\\\"swag-migration-history-detail-body-tabs\\\"\\n                                >\\n\\n                                    {% block swag_migration_history_detail_body_tabs_data %}\\n                                        <sw-tabs-item name=\\\"data\\\" ref=\\\"dataTabItem\\\">\\n                                            {{ $tc('swag-migration.history.detailPage.data') }}\\n                                        </sw-tabs-item>\\n                                    {% endblock %}\\n\\n                                    {% block swag_migration_history_detail_body_tabs_errors %}\\n                                        <sw-tabs-item name=\\\"errors\\\" ref=\\\"errorsTabItem\\\">\\n                                            {{ $tc('swag-migration.history.detailPage.errors') }}\\n                                        </sw-tabs-item>\\n                                    {% endblock %}\\n                                </sw-tabs>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_history_detail_body_data %}\\n                                <swag-migration-history-detail-data v-show=\\\"currentTab === 'data'\\\"\\n                                                                    :migrationRun=\\\"migrationRun\\\">\\n                                </swag-migration-history-detail-data>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_history_detail_body_errors %}\\n                                <swag-migration-history-detail-errors v-show=\\\"currentTab === 'errors'\\\"\\n                                                                      :migrationRun=\\\"migrationRun\\\">\\n                                </swag-migration-history-detail-errors>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_detail_footer %}\\n                <template #modal-footer>\\n                    <sw-button size=\\\"small\\\" @click=\\\"onCloseModal\\\">\\n                        {{ $tc('swag-migration.history.detailPage.close') }}\\n                    </sw-button>\\n                </template>\\n            {% endblock %}\\n        </sw-modal>\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-history-detail.html.twig';\nimport './swag-migration-history-detail.scss';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-history-detail', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n        repositoryFactory: 'repositoryFactory',\n    },\n\n    data() {\n        return {\n            runId: '',\n            migrationRun: {},\n            showModal: true,\n            isLoading: true,\n            migrationDateOptions: {\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            },\n            currentTab: 'data',\n            context: Shopware.Context.api,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        migrationRunRepository() {\n            return this.repositoryFactory.create('swag_migration_run');\n        },\n\n        shopFirstLetter() {\n            return this.migrationRun.environmentInformation.sourceSystemName === undefined ? 'S' :\n                this.migrationRun.environmentInformation.sourceSystemName[0];\n        },\n\n        profileIcon() {\n            return this.migrationRun.connection === null ||\n                this.migrationRun.connection.profile === undefined ||\n                this.migrationRun.connection.profile.icon === undefined ? null : this.migrationRun.connection.profile.icon;\n        },\n\n        connectionName() {\n            return this.migrationRun.connection === null ? '' :\n                this.migrationRun.connection.name;\n        },\n\n        shopUrl() {\n            return this.migrationRun.environmentInformation.sourceSystemDomain === undefined ? '' :\n                this.migrationRun.environmentInformation.sourceSystemDomain.replace(/^\\s*https?:\\/\\//, '');\n        },\n\n        shopUrlPrefix() {\n            if (this.migrationRun.environmentInformation.sourceSystemDomain === undefined) {\n                return '';\n            }\n\n            const match = this.migrationRun.environmentInformation.sourceSystemDomain.match(/^\\s*https?:\\/\\//);\n            if (match === null) {\n                return '';\n            }\n\n            return match[0];\n        },\n\n        sslActive() {\n            return (this.shopUrlPrefix === 'https://');\n        },\n\n        shopUrlPrefixClass() {\n            return this.sslActive ? 'swag-migration-shop-information__shop-domain-prefix--is-ssl' : '';\n        },\n\n        profileName() {\n            return this.migrationRun.connection === null ? '' :\n                this.migrationRun.connection.profileName;\n        },\n\n        gatewayName() {\n            return this.migrationRun.connection === null ? '' :\n                this.migrationRun.connection.gatewayName;\n        },\n\n        runStatusSnippet() {\n            return this.migrationRun.status === null ? '' :\n                `swag-migration.history.detailPage.status.${this.migrationRun.status}`;\n        },\n\n        runStatusClasses() {\n            return this.migrationRun.status === null ? '' :\n                `swag-migration-history-detail__run-status-value--${this.migrationRun.status}`;\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n\n        dateFilter() {\n            return Shopware.Filter.getByName('date');\n        }\n    },\n\n    created() {\n        if (!this.$route.params.id) {\n            this.isLoading = false;\n            this.onCloseModal();\n            return Promise.resolve();\n        }\n\n        this.runId = this.$route.params.id;\n        const criteria = new Criteria(1, 1);\n        criteria.addFilter(Criteria.equals('id', this.runId));\n\n        return this.migrationRunRepository.search(criteria, this.context).then((runs) => {\n            if (runs.length < 1) {\n                this.isLoading = false;\n                this.onCloseModal();\n                return Promise.resolve();\n            }\n\n            this.migrationRun = runs.first();\n\n            return this.migrationService.getProfileInformation(this.migrationRun.connection.profileName, this.migrationRun.connection.gatewayName).then((profileInformation) => {\n                this.migrationRun.connection.profile = profileInformation.profile;\n\n                this.isLoading = false;\n                this.$nextTick(() => {\n                    this.$refs.tabReference.setActiveItem(this.$refs.dataTabItem);\n                });\n            });\n        }).catch(() => {\n            this.isLoading = false;\n            this.onCloseModal();\n        });\n    },\n\n    methods: {\n        onCloseModal() {\n            this.showModal = false;\n            this.$nextTick(() => {\n                this.$router.go(-1);\n            });\n        },\n\n        newActiveTabItem(item) {\n            this.currentTab = item.name;\n        },\n    },\n});\n","import template from './swag-migration-history-detail-errors.html.twig';\nimport './swag-migration-history-detail-errors.scss';\n\nconst { Component, Mixin } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-history-detail-errors', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n    },\n\n    mixins: [\n        Mixin.getByName('listing'),\n    ],\n\n    props: {\n        migrationRun: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: true,\n            allMigrationErrors: null,\n            migrationErrors: [],\n            sortBy: 'count',\n            sortDirection: 'DESC',\n            disableRouteParams: true,\n            limit: 10,\n            downloadUrl: '',\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        columns() {\n            return [\n                {\n                    property: 'title',\n                    dataIndex: 'title',\n                    label: this.$tc('swag-migration.history.detailPage.errorCode'),\n                    primary: true,\n                    allowResize: true,\n                    sortable: true,\n                },\n                {\n                    property: 'count',\n                    dataIndex: 'count',\n                    label: this.$tc('swag-migration.history.detailPage.errorCount'),\n                    primary: true,\n                    allowResize: true,\n                    sortable: true,\n                },\n            ];\n        },\n    },\n\n    methods: {\n        async getList() {\n            this.isLoading = true;\n            const params = this.getMainListingParams();\n\n            if (this.allMigrationErrors === null) {\n                await this.loadAllMigrationErrors();\n            }\n\n            this.applySorting(params);\n\n            const startIndex = (params.page - 1) * this.limit;\n            const endIndex = Math.min((params.page - 1) * this.limit + this.limit, this.allMigrationErrors.length);\n            this.migrationErrors = [];\n            for (let i = startIndex; i < endIndex; i += 1) {\n                this.migrationErrors.push(this.allMigrationErrors[i]);\n            }\n\n            this.isLoading = false;\n            return this.migrationErrors;\n        },\n\n        loadAllMigrationErrors() {\n            return this.migrationService.getGroupedLogsOfRun(\n                this.migrationRun.id,\n            ).then((response) => {\n                this.total = response.total;\n                this.allMigrationErrors = response.items;\n                this.allMigrationErrors.forEach((item) => {\n                    item.title = this.$tc(this.getErrorTitleSnippet(item), 0, { entity: item.entity });\n                });\n                this.downloadUrl = response.downloadUrl;\n                return this.allMigrationErrors;\n            });\n        },\n\n        applySorting(params) {\n            this.allMigrationErrors.sort((first, second) => {\n                if (params.sortDirection === 'ASC') {\n                    if (first[params.sortBy] < second[params.sortBy]) {\n                        return -1;\n                    }\n\n                    return 1;\n                }\n\n                if (first[params.sortBy] > second[params.sortBy]) {\n                    return -1;\n                }\n\n                return 1;\n            });\n        },\n\n        getErrorTitleSnippet(item) {\n            const snippetKey = item.titleSnippet;\n            if (this.$te(snippetKey)) {\n                return snippetKey;\n            }\n\n            return 'swag-migration.index.error.unknownError';\n        },\n\n        submitDownload() {\n            this.$refs.downloadForm.submit();\n        },\n    },\n});\n","export default \"{% block swag_migration_history_detail_errors %}\\n    <div class=\\\"swag-migration-history-detail-errors\\\">\\n        <div v-if=\\\"!isLoading\\\">\\n\\n            {% block swag_migration_history_detail_errors_grid %}\\n                <sw-data-grid v-if=\\\"migrationErrors.length > 0\\\"\\n                              identifier=\\\"swag-migration-history-detail-errors\\\"\\n                              :dataSource=\\\"migrationErrors\\\"\\n                              :columns=\\\"columns\\\"\\n                              :showSelection=\\\"false\\\"\\n                              :showSettings=\\\"false\\\"\\n                              :allowColumnEdit=\\\"false\\\"\\n                              :showActions=\\\"false\\\"\\n                              :sortBy=\\\"sortBy\\\"\\n                              :sortDirection=\\\"sortDirection\\\"\\n                              @column-sort=\\\"onSortColumn\\\">\\n\\n                    {% block swag_migration_history_detail_errors_grid_code%}\\n                        <template #column-title=\\\"{ item }\\\">\\n                            {{ item.title }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_detail_errors_grid_count %}\\n                        <template #column-count=\\\"{ item }\\\">\\n                            {{ item.count }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_detail_errors_grid_pagination %}\\n                        <template #pagination>\\n                            <sw-pagination :page=\\\"page\\\"\\n                                           :limit=\\\"limit\\\"\\n                                           :total=\\\"total\\\"\\n                                           :steps=\\\"[5,10]\\\"\\n                                           :total-visible=\\\"7\\\"\\n                                           @page-change=\\\"onPageChange\\\">\\n                            </sw-pagination>\\n                        </template>\\n                    {% endblock %}\\n                </sw-data-grid>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_detail_errors_noError %}\\n                <p v-if=\\\"migrationErrors.length === 0\\\"\\n                   class=\\\"swag-migration-history-detail-errors__no-error\\\">\\n                    {{ $tc('swag-migration.history.detailPage.noErrorsOccurred') }}\\n                </p>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_detail_errors_download_form %}\\n                <form class=\\\"swag-migration-history-detail-errors__download-form\\\"\\n                      ref=\\\"downloadForm\\\"\\n                      :action=\\\"downloadUrl\\\"\\n                      method=\\\"POST\\\">\\n                    <input type=\\\"hidden\\\"\\n                           name=\\\"runUuid\\\"\\n                           :value=\\\"migrationRun.id\\\">\\n                </form>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_detail_errors_description %}\\n                <p class=\\\"swag-migration-history-detail-errors__description\\\">\\n                    {{ $tc('swag-migration.history.detailPage.logDescription') }}\\n\\n                    <a class=\\\"link\\\"\\n                       href=\\\"#\\\"\\n                       @click.prevent=\\\"submitDownload\\\">\\n                        {{ $tc('swag-migration.history.detailPage.logDownload') }}\\n                    </a>\\n                </p>\\n            {% endblock %}\\n\\n        </div>\\n\\n        {% block swag_migration_history_detail_errors_noError__loader %}\\n            <div v-if=\\\"isLoading\\\"\\n                 class=\\\"swag-migration-history-detail-errors__loading-placeholder\\\"></div>\\n            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","export default \"{% block swag_migration_history_detail_data %}\\n    <div class=\\\"swag-migration-history-detail-data\\\">\\n        <div v-if=\\\"!isLoading\\\">\\n\\n            {% block swag_migration_history_detail_data_grid %}\\n                <sw-data-grid identifier=\\\"swag-migration-history-detail-data\\\"\\n                              :dataSource=\\\"migrationData\\\"\\n                              :columns=\\\"columns\\\"\\n                              :showSelection=\\\"false\\\"\\n                              :showSettings=\\\"false\\\"\\n                              :allowColumnEdit=\\\"false\\\"\\n                              :showActions=\\\"false\\\"\\n                              :sortBy=\\\"sortBy\\\"\\n                              :sortDirection=\\\"sortDirection\\\"\\n                              @column-sort=\\\"onSortColumn\\\">\\n\\n                    {% block swag_migration_history_detail_data_grid_name %}\\n                        <template #column-name=\\\"{ item }\\\">\\n                            {{ $tc(item.snippet) }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_detail_data_grid_count %}\\n                        <template #column-count=\\\"{ item }\\\">\\n                            {{ item.total }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_detail_data_grid_pagination %}\\n                        <template #pagination>\\n                            <sw-pagination :page=\\\"page\\\"\\n                                           :limit=\\\"limit\\\"\\n                                           :total=\\\"total\\\"\\n                                           :steps=\\\"[5,10]\\\"\\n                                           :total-visible=\\\"7\\\"\\n                                           @page-change=\\\"onPageChange\\\">\\n                            </sw-pagination>\\n                        </template>\\n                    {% endblock %}\\n                </sw-data-grid>\\n            {% endblock %}\\n        </div>\\n\\n        {% block swag_migration_history_detail_data_noError__loader %}\\n            <div v-if=\\\"isLoading\\\"\\n                 class=\\\"swag-migration-history-detail-data__loading-placeholder\\\"></div>\\n            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-history-detail-data.html.twig';\nimport './swag-migration-history-detail-data.scss';\n\nconst { Component, Mixin } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-history-detail-data', {\n    template,\n\n    mixins: [\n        Mixin.getByName('listing'),\n    ],\n\n    props: {\n        migrationRun: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: true,\n            allMigrationData: [],\n            migrationData: [],\n            sortBy: 'createdAt',\n            sortDirection: 'DESC',\n            disableRouteParams: true,\n            limit: 10,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        columns() {\n            return [\n                {\n                    property: 'name',\n                    label: this.$tc('swag-migration.history.detailPage.dataName'),\n                    primary: true,\n                    allowResize: true,\n                    sortable: false,\n                },\n                {\n                    property: 'count',\n                    label: this.$tc('swag-migration.history.detailPage.dataCount'),\n                    allowResize: true,\n                    sortable: false,\n                },\n            ];\n        },\n\n        entityGroups() {\n            return this.migrationRun.progress.filter((group) => (group.id !== 'processMediaFiles'));\n        },\n    },\n\n    methods: {\n        getList() {\n            this.isLoading = true;\n\n            // ToDo MIG-35 - Implement sorting\n\n            this.total = this.entityGroups.length;\n            const start = (this.page - 1) * this.limit;\n            const end = Math.min(start + this.limit, this.total);\n            this.migrationData = [];\n\n            // Copy the object references into the display items array (for pagination). Note: Array.slice dont work\n            for (let i = start; i < end; i += 1) {\n                this.migrationData.push(this.entityGroups[i]);\n            }\n\n            this.isLoading = false;\n            return this.items;\n        },\n    },\n});\n","const utils = Shopware.Utils;\n\n/**\n * @package services-settings\n */\nexport default class StorageBroadcastService {\n    constructor(receiveCallback = () => {}, channelKey) {\n        this._clientId = utils.createId();\n        this._channelKey = channelKey; // To identify the messages of all StorageBroadcastServices\n        this._receiveCallback = receiveCallback;\n\n        window.addEventListener('storage', this.messageReceived.bind(this));\n    }\n\n    getClientId() {\n        return this._clientId;\n    }\n\n    setClientId(id) {\n        this._clientId = id;\n    }\n\n    /**\n     * Send a data packet to all other browser tabs that listens\n     *\n     * @param data\n     */\n    sendMessage(data) {\n        if (!data.id || !data.id.length) {\n            data.id = this._clientId;\n        }\n\n        data = JSON.stringify(data);\n\n        localStorage.setItem(this._channelKey, data);\n    }\n\n    /**\n     * Handles receive logic, so only data from other tabs trigger the callback\n     *\n     * @param event\n     * @returns {boolean}\n     */\n    messageReceived(event) {\n        if (event.key !== this._channelKey) {\n            return false;\n        }\n\n        const data = JSON.parse(localStorage.getItem(this._channelKey));\n        localStorage.removeItem(this._channelKey);\n\n        if (!data || data.id === this._clientId) {\n            return false;\n        }\n\n        this._receiveCallback.call(null, data);\n        return true;\n    }\n}\n","import { WORKER_INTERRUPT_TYPE } from './swag-migration-worker.service';\n\nconst { Application, State } = Shopware;\n\n/**\n * Describes the current API endpoint.\n * Can be easily used together with the MIGRATION_STATUS.\n *\n * Example to get the API operation from status:\n * WORKER_API_OPERATION[MIGRATION_STATUS.FETCH_DATA]\n *\n * @type {Readonly<{\"0\": string, \"1\": string, \"2\": string}>}\n * @package services-settings\n */\nexport const WORKER_API_OPERATION = Object.freeze({\n    1: 'fetchData',\n    2: 'writeData',\n    3: 'processMedia',\n});\n\n/**\n * @package services-settings\n */\nexport class WorkerRequest {\n    /**\n     * @param {Object} requestParams\n     * @param {WorkerStatusManager} workerStatusManager\n     * @param {MigrationApiService} migrationService\n     * @param {function} onInterruptCB\n     */\n    constructor(\n        requestParams,\n        workerStatusManager,\n        migrationService,\n        onInterruptCB,\n    ) {\n        this._MAX_REQUEST_TIME = 10000; // in ms\n        this._DEFAULT_CHUNK_SIZE = 25; // in data sets\n\n        // how much does the chunk factor manipulate the chunk size for under target request times\n        this._CHUNK_PROPORTION_UP_WEIGHT = 0.1;\n\n        // how much does the chunk factor manipulate the chunk size for above target request times\n        this._CHUNK_PROPORTION_DOWN_WEIGHT = 0.9;\n\n        this._migrationProcessState = State.get('swagMigration/process');\n        this._runId = requestParams.runUuid;\n        this._requestParams = requestParams;\n        this._workerStatusManager = workerStatusManager;\n        this._migrationService = migrationService;\n        this._interrupt = '';\n        this._chunkSize = this._DEFAULT_CHUNK_SIZE;\n        this._lastChunkSize = this._DEFAULT_CHUNK_SIZE;\n        this._successfulChunk = this._DEFAULT_CHUNK_SIZE;\n\n        // callbacks\n        this._onInterruptCB = onInterruptCB;\n    }\n\n    /**\n     * @returns {string}\n     */\n    get operation() {\n        return WORKER_API_OPERATION[this._migrationProcessState.statusIndex];\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    get interrupt() {\n        return this._interrupt;\n    }\n\n    /**\n     * @param {boolean} value\n     */\n    set interrupt(value) {\n        this._interrupt = value;\n    }\n\n    /**\n     * @param {function} value\n     */\n    set onInterruptCB(value) {\n        this._callInterruptCB = value;\n    }\n\n    /**\n     * @private\n     */\n    _callInterruptCB() {\n        if (this._onInterruptCB !== null) {\n            this._onInterruptCB(this._interrupt);\n        }\n    }\n\n    /**\n     * Do all the API requests for all entities with the given methodName\n     *\n     * @param {number} statusIndex\n     * @param {number} groupStartIndex\n     * @param {number} entityStartIndex\n     * @param {number} entityOffset\n     * @returns {Promise}\n     */\n    async migrateProcess(statusIndex, groupStartIndex = 0, entityStartIndex = 0, entityOffset = 0) {\n        /* eslint-disable no-await-in-loop */\n        return new Promise(async (resolve) => {\n            let statusChangedError = false;\n            await this._workerStatusManager.changeStatus(this._runId, statusIndex).catch(() => {\n                statusChangedError = true;\n            });\n\n            if (statusChangedError === true) {\n                this.interrupt = WORKER_INTERRUPT_TYPE.STOP;\n                this._callInterruptCB();\n                resolve();\n                return;\n            }\n\n            // Reference to store state, don't mutate this!\n            const entityGroups = this._migrationProcessState.entityGroups;\n            for (let groupIndex = groupStartIndex; groupIndex < entityGroups.length; groupIndex += 1) {\n                let groupProgress = 0;\n                for (let entityIndex = 0; entityIndex < entityGroups[groupIndex].entities.length; entityIndex += 1) {\n                    const entityName = entityGroups[groupIndex].entities[entityIndex].entityName;\n                    const entityCount = entityGroups[groupIndex].entities[entityIndex].total;\n\n                    if (entityIndex >= entityStartIndex) {\n                        await this._migrateEntity(\n                            entityName,\n                            entityCount,\n                            entityGroups[groupIndex],\n                            groupProgress,\n                            entityOffset,\n                        );\n\n                        if (this._interrupt !== '') {\n                            this._callInterruptCB();\n                            resolve();\n                            return;\n                        }\n\n                        entityOffset = 0;\n                    }\n\n                    groupProgress += entityCount;\n                }\n                entityStartIndex = 0;\n            }\n\n            resolve();\n        });\n        /* eslint-enable no-await-in-loop */\n    }\n\n    /**\n     * Do all the API requests for one entity in chunks\n     *\n     * @param {string} entityName\n     * @param {number} entityCount\n     * @param {Object} group\n     * @param {number} groupProgress\n     * @param {number} currentOffset\n     * @returns {Promise<void>}\n     * @private\n     */\n    async _migrateEntity(entityName, entityCount, group, groupProgress, currentOffset = 0) {\n        /* eslint-disable no-await-in-loop */\n        while (currentOffset < entityCount) {\n            if (this._interrupt !== '') {\n                return;\n            }\n\n            await this._migrateEntityRequest(entityName, currentOffset);\n            let newOffset = currentOffset + this._successfulChunk;\n            if (newOffset > entityCount) {\n                newOffset = entityCount;\n            }\n\n            // update State\n            State.commit('swagMigration/process/setEntityProgress', {\n                groupId: group.id,\n                groupCurrentCount: groupProgress + newOffset,\n                groupTotal: group.total,\n            });\n\n            currentOffset += this._successfulChunk;\n        }\n        /* eslint-enable no-await-in-loop */\n\n        this._chunkSize = this._DEFAULT_CHUNK_SIZE;\n    }\n\n    /**\n     * Do a single API request for the given entity with given offset.\n     *\n     * @param {string} entityName\n     * @param {number} offset\n     * @returns {Promise}\n     * @private\n     */\n    _migrateEntityRequest(entityName, offset) {\n        return new Promise(async (resolve) => {\n            this._requestParams.entity = entityName;\n            this._requestParams.offset = offset;\n            this._requestParams.limit = this._chunkSize;\n\n            let requestRetry = true;\n            let requestFailedCount = 0;\n            /* eslint-disable no-await-in-loop, no-loop-func */\n            while (requestRetry) {\n                const beforeRequestTime = new Date();\n                await this._migrationService[this.operation](this._requestParams).then((response) => {\n                    if (!response) {\n                        // Request timeout behavior: scale chunk size down on first occur and back to default on second\n                        requestFailedCount += 1;\n                        if (this._requestParams.limit === this._lastChunkSize) {\n                            this._chunkSize = this._DEFAULT_CHUNK_SIZE;\n                            this._requestParams.limit = this._chunkSize;\n                        } else {\n                            this._handleChunkSize();\n                            this._lastChunkSize = this._chunkSize; // next time reset to default chunk size\n                            this._requestParams.limit = this._chunkSize;\n                        }\n                        return;\n                    }\n\n                    if (response.validToken === undefined) {\n                        // Memory limit behavior: If occurs the validToken is not in the response\n                        // Then we scale the limit down to default and retry\n                        // If the retry also fails with memory limit exceeded we skip this chunk\n                        if (this._requestParams.limit === this._lastChunkSize) {\n                            this._successfulChunk = this._requestParams.limit;\n                            requestRetry = false;\n                            return;\n                        }\n\n                        this._chunkSize = this._DEFAULT_CHUNK_SIZE;\n                        this._lastChunkSize = this._chunkSize;\n                        this._requestParams.limit = this._chunkSize;\n                        return;\n                    }\n\n                    if (!response.validToken) {\n                        this.interrupt = WORKER_INTERRUPT_TYPE.TAKEOVER;\n                        this._successfulChunk = 0;\n                        requestRetry = false;\n                        return;\n                    }\n\n                    this._successfulChunk = this._requestParams.limit;\n                    const afterRequestTime = new Date();\n                    this._handleChunkSize(afterRequestTime.getTime() - beforeRequestTime.getTime());\n                    requestRetry = false;\n                }).catch((response) => {\n                    if (!response || !response.response) {\n                        // Request timeout behavior: scale chunk size down on first occur and back to default on second\n                        requestFailedCount += 1;\n                        if (this._requestParams.limit === this._lastChunkSize) {\n                            this._chunkSize = this._DEFAULT_CHUNK_SIZE;\n                            this._requestParams.limit = this._chunkSize;\n                        } else {\n                            this._handleChunkSize();\n                            this._lastChunkSize = this._chunkSize; // next time reset to default chunk size\n                            this._requestParams.limit = this._chunkSize;\n                        }\n                        return;\n                    }\n\n                    if (response.response.status === 500) {\n                        // Don't retry if server errors happen, only if something is wrong with the connection.\n                        this._successfulChunk = this._requestParams.limit;\n                        requestRetry = false;\n                        return;\n                    }\n\n                    const afterRequestTime = new Date();\n                    this._handleChunkSize(afterRequestTime.getTime() - beforeRequestTime.getTime());\n\n                    requestFailedCount += 1;\n                });\n\n                if (requestFailedCount >= 3) {\n                    this._successfulChunk = 0;\n                    requestRetry = false;\n                    if (this.operation === WORKER_API_OPERATION[1]) {\n                        this.interrupt = WORKER_INTERRUPT_TYPE.CONNECTION_LOST;\n                    } else {\n                        this.interrupt = WORKER_INTERRUPT_TYPE.PAUSE;\n                    }\n                }\n            }\n            /* eslint-enable no-await-in-loop, no-loop-func */\n\n            resolve();\n        });\n    }\n\n    /**\n     * Update the chunkSize depending on the requestTime / maxRequestTime proportion\n     *\n     * @param {number} requestTime Request time in milliseconds (fallback to 30s for timeout simulation)\n     * @private\n     */\n    _handleChunkSize(requestTime = 30000) {\n        this._lastChunkSize = this._chunkSize;\n        const factor = this._MAX_REQUEST_TIME / requestTime;\n\n        if (requestTime < this._MAX_REQUEST_TIME) {\n            // Scale chunk size up\n            const weightedFactor = (factor - 1) * this._CHUNK_PROPORTION_UP_WEIGHT + 1;\n            this._chunkSize = Math.ceil(this._chunkSize * weightedFactor);\n            return;\n        }\n\n        // Scale chunk size down\n        const weightedFactor = (factor - 1) * this._CHUNK_PROPORTION_DOWN_WEIGHT + 1;\n        this._chunkSize = Math.ceil(this._chunkSize * weightedFactor);\n\n        if (this._chunkSize < this._DEFAULT_CHUNK_SIZE) {\n            this._chunkSize = this._DEFAULT_CHUNK_SIZE;\n        }\n    }\n\n    /**\n     * @returns {Boolean|Vue}\n     */\n    get applicationRoot() {\n        if (this._applicationRoot) {\n            return this._applicationRoot;\n        }\n        this._applicationRoot = Application.getApplicationRoot();\n        return this._applicationRoot;\n    }\n}\n\nexport default WorkerRequest;\n","import StorageBroadcastService from '../storage-broadcaster.service';\nimport { WorkerRequest } from './swag-migration-worker-request.service';\nimport { MIGRATION_STATUS, WorkerStatusManager } from './swag-migration-worker-status-manager.service';\n\nconst { Application, State } = Shopware;\n\n/**\n * @package services-settings\n */\nexport const MIGRATION_ACCESS_TOKEN_NAME = 'swagMigrationAccessToken';\n\n/**\n * @package services-settings\n */\nexport const WORKER_INTERRUPT_TYPE = Object.freeze({\n    TAKEOVER: 'takeover',\n    STOP: 'stop',\n    PAUSE: 'pause',\n    CONNECTION_LOST: 'connectionLost',\n});\n\n/**\n * @package services-settings\n */\nclass MigrationWorkerService {\n    /**\n     * @param {MigrationApiService} migrationService\n     * @param {MigrationIndexingWorker} migrationIndexingWorker\n     */\n    constructor(\n        migrationService,\n        migrationIndexingWorker,\n    ) {\n        // will be toggled when we receive a response for our 'migrationWanted' request\n        this._broadcastResponseFlag = false;\n\n        // handles cross browser tab communication\n        this._broadcastService = new StorageBroadcastService(\n            this._onBroadcastReceived.bind(this),\n            'swag-migration-service',\n        );\n\n        this._migrationService = migrationService;\n        this._migrationIndexingWorker = migrationIndexingWorker;\n        this._workerStatusManager = new WorkerStatusManager(\n            this._migrationService,\n        );\n        this._workRunner = null;\n\n        /** @type MigrationProcessStore */\n        this._migrationProcessState = State.get('swagMigration/process');\n        // state variables\n        this._interruptSubscriber = null;\n        this._restoreState = {};\n\n        window.addEventListener('beforeunload', this.onBrowserTabClosing.bind(this));\n    }\n\n    /**\n     * Show the browser tab closing prompt to confirm the page leave.\n     * Custom text support is deprecated so it will display the browser specific default message.\n     * For more information look here:\n     * https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onbeforeunload\n     *\n     * @param {Event} e\n     * @returns {string}\n     */\n    onBrowserTabClosing(e) {\n        if (this._migrationProcessState.isMigrating &&\n            this._migrationProcessState.statusIndex !== MIGRATION_STATUS.FINISHED) {\n            e.preventDefault();\n            e.returnValue = '';\n            return '';\n        }\n\n        return '';\n    }\n\n    /**\n     * Returns the accessToken out of the local storage\n     *\n     * @returns {string}\n     */\n    static get migrationAccessToken() {\n        let token = localStorage.getItem(MIGRATION_ACCESS_TOKEN_NAME);\n\n        if (token === null) {\n            token = '';\n        }\n\n        return token;\n    }\n\n    _onInterrupt(value) {\n        State.commit('swagMigration/process/setIsMigrating', false);\n        this._callInterruptSubscriber(value);\n    }\n\n    /**\n     * Check if the last migration was not finished, the accessToken is valid and set the restoreState.\n     *\n     * @returns {Promise<{\n     *   runUuid: null,\n     *   isMigrationRunning: boolean,\n     *   isMigrationAccessTokenValid: boolean,\n     *   status: object|null,\n     *   accessToken: string|null\n     * }>}\n     */\n    checkForRunningMigration() {\n        return new Promise((resolve) => {\n            this._migrationService.getState({\n                swagMigrationAccessToken: MigrationWorkerService.migrationAccessToken,\n            }).then((state) => {\n                resolve(this.processStateResponse(state));\n            }).catch((error) => {\n                const returnValue = {\n                    runUuid: null,\n                    isMigrationRunning: false,\n                    isMigrationAccessTokenValid: false,\n                    status: null,\n                    accessToken: null,\n                    requestErrorCode: error !== undefined && error.response !== undefined ? error.response.code : '',\n                };\n\n                returnValue.isMigrationAccessTokenValid = true;\n                this._restoreState = {};\n                resolve(returnValue);\n            });\n        });\n    }\n\n    /**\n     * Try to create a new migration run and process the return state.\n     *\n     * @returns {Promise<{\n     *   runUuid: null,\n     *   isMigrationRunning: boolean,\n     *   isMigrationAccessTokenValid: boolean,\n     *   status: object|null,\n     *   accessToken: string|null\n     * }>}\n     */\n    createMigration(dataSelectionIds) {\n        return new Promise((resolve) => {\n            this._migrationService.createMigration(\n                this._migrationProcessState.connectionId,\n                dataSelectionIds,\n            ).then((state) => {\n                const returnState = this.processStateResponse(state);\n\n                if (returnState.isMigrationRunning === false && returnState.isMigrationAccessTokenValid === true) {\n                    State.commit('swagMigration/process/setStatusIndex', MIGRATION_STATUS.PREMAPPING);\n                }\n\n                State.commit('swagMigration/process/setRunId', returnState.runUuid);\n                resolve(returnState);\n            }).catch(() => {\n                const returnValue = {\n                    runUuid: null,\n                    isMigrationRunning: false,\n                    isMigrationAccessTokenValid: true,\n                    status: null,\n                    accessToken: null,\n                };\n\n                this._restoreState = {};\n                resolve(returnValue);\n            });\n        });\n    }\n\n    /**\n     * Check if the migration was not finished, the accessToken is valid and set the restoreState.\n     *\n     * @param {Object} state\n     * @return {{\n     *          runUuid: null,\n     *          isMigrationRunning: boolean,\n     *          isMigrationAccessTokenValid: boolean,\n     *          status: object|null,\n     *          accessToken: string|null\n     *          }}\n     */\n    processStateResponse(state) {\n        const returnValue = {\n            runUuid: null,\n            isMigrationRunning: false,\n            isMigrationAccessTokenValid: false,\n            status: null,\n            accessToken: null,\n            runProgress: null,\n        };\n\n        this._restoreState = state;\n        returnValue.runUuid = state.runId;\n        returnValue.accessToken = state.accessToken;\n        returnValue.runProgress = state.runProgress;\n\n        if (state.validMigrationRunToken === false) {\n            State.commit('swagMigration/process/setRunId', state.runId);\n            returnValue.isMigrationRunning = true;\n            returnValue.status = state.status;\n\n            return returnValue;\n        }\n\n        if (state.migrationRunning === true) {\n            State.commit('swagMigration/process/setRunId', this._restoreState.runId);\n            returnValue.isMigrationRunning = true;\n            returnValue.isMigrationAccessTokenValid = true;\n            returnValue.status = state.status;\n\n            return returnValue;\n        }\n\n        returnValue.isMigrationAccessTokenValid = true;\n        return returnValue;\n    }\n\n    /**\n     * Continue the migration (possible after checkForRunningMigration resolved true).\n     */\n    restoreRunningMigration(startMigration = true) {\n        if (this._restoreState === null || this._restoreState === {}) {\n            return;\n        }\n\n        if (this._restoreState.migrationRunning === false) {\n            return;\n        }\n\n        State.commit('swagMigration/process/setRunId', this._restoreState.runId);\n        State.commit('swagMigration/process/setEntityGroups', this._restoreState.runProgress);\n        State.commit('swagMigration/process/setStatusIndex', this._restoreState.status);\n\n        if (!startMigration) {\n            return;\n        }\n\n        // Get current group and entity index\n        const indicies = this._getIndiciesByEntityName(this._restoreState.entity);\n\n        this.startMigration(\n            this._migrationProcessState.runId,\n            this._migrationProcessState.statusIndex,\n            indicies.groupIndex,\n            indicies.entityIndex,\n            this._restoreState.finishedCount,\n        );\n    }\n\n    stopMigration() {\n        if (this._workRunner === null) {\n            this._callInterruptSubscriber(WORKER_INTERRUPT_TYPE.STOP);\n            return;\n        }\n\n        this._workRunner.interrupt = WORKER_INTERRUPT_TYPE.STOP;\n    }\n\n    pauseMigration() {\n        this._workRunner.interrupt = WORKER_INTERRUPT_TYPE.PAUSE;\n    }\n\n    /**\n     * Takeover the current migration and save the given accessToken into the localStorage.\n     *\n     * @return {Promise}\n     */\n    takeoverMigration() {\n        return new Promise((resolve) => {\n            this._migrationService.takeoverMigration(this._migrationProcessState.runId)\n                .then((migrationAccessToken) => {\n                    localStorage.setItem(MIGRATION_ACCESS_TOKEN_NAME, migrationAccessToken.accessToken);\n                    resolve();\n                });\n        });\n    }\n\n    /**\n     * Get the groupIndex and the entityIndex from the entityGroups for the specified entityName.\n     *\n     * @param {string} entityName\n     * @returns {{groupIndex: number, entityIndex: number}}\n     * @private\n     */\n    _getIndiciesByEntityName(entityName) {\n        for (let groupIndex = 0; groupIndex < this._migrationProcessState.entityGroups.length; groupIndex += 1) {\n            for (let entityIndex = 0;\n                entityIndex < this._migrationProcessState.entityGroups[groupIndex].entities.length;\n                entityIndex += 1\n            ) {\n                if (this._migrationProcessState.entityGroups[groupIndex]\n                    .entities[entityIndex].entityName === entityName\n                ) {\n                    return {\n                        groupIndex,\n                        entityIndex,\n                    };\n                }\n            }\n        }\n\n        return {\n            groupIndex: -1,\n            entityIndex: -1,\n        };\n    }\n\n    /**\n     * @param {function} callback\n     */\n    subscribeInterrupt(callback) {\n        this._interruptSubscriber = callback;\n    }\n\n    unsubscribeInterrupt() {\n        this._interruptSubscriber = null;\n    }\n\n    /**\n     * @private\n     */\n    _callInterruptSubscriber(value) {\n        if (this._interruptSubscriber !== null) {\n            this._interruptSubscriber(value);\n        }\n    }\n\n    /**\n     * @param {String} runId\n     * @param {number} statusIndex\n     * @param {number} groupStartIndex\n     * @param {number} entityStartIndex\n     * @param {number} entityOffset\n     * @returns {Promise}\n     */\n    startMigration(\n        runId,\n        statusIndex = MIGRATION_STATUS.FETCH_DATA,\n        groupStartIndex = 0,\n        entityStartIndex = 0,\n        entityOffset = 0,\n    ) {\n        return new Promise(async (resolve) => {\n            // Wait for the 'migrationWanted' request and response to allow or deny the migration\n            State.commit('swagMigration/process/setIsMigrating', true);\n            State.commit('swagMigration/process/setRunId', runId);\n\n            let processMediaFiles = false;\n            this._migrationProcessState.entityGroups.forEach((group) => {\n                if (group.processMediaFiles) {\n                    processMediaFiles = true;\n                }\n            });\n\n            const params = {\n                swagMigrationAccessToken: MigrationWorkerService.migrationAccessToken,\n                runUuid: this._migrationProcessState.runId,\n            };\n\n            this._workRunner = new WorkerRequest(\n                params,\n                this._workerStatusManager,\n                this._migrationService,\n                this._onInterrupt.bind(this),\n            );\n\n            // fetch\n            if (statusIndex <= MIGRATION_STATUS.FETCH_DATA) {\n                await this._startWorkRunner(\n                    MIGRATION_STATUS.FETCH_DATA,\n                    groupStartIndex,\n                    entityStartIndex,\n                    entityOffset,\n                );\n\n                groupStartIndex = 0;\n                entityStartIndex = 0;\n                entityOffset = 0;\n            }\n\n            // write\n            if (statusIndex <= MIGRATION_STATUS.WRITE_DATA) {\n                await this._startWorkRunner(\n                    MIGRATION_STATUS.WRITE_DATA,\n                    groupStartIndex,\n                    entityStartIndex,\n                    entityOffset,\n                );\n\n                groupStartIndex = 0;\n                entityStartIndex = 0;\n                entityOffset = 0;\n            }\n\n            // download\n            if (statusIndex <= MIGRATION_STATUS.PROCESS_MEDIA_FILES && processMediaFiles) {\n                await this._startWorkRunner(\n                    MIGRATION_STATUS.PROCESS_MEDIA_FILES,\n                    groupStartIndex,\n                    entityStartIndex,\n                    entityOffset,\n                );\n\n                groupStartIndex = 0;\n                entityStartIndex = 0;\n                entityOffset = 0;\n            }\n\n            // finish\n            await this._migrateFinish();\n            resolve();\n        });\n    }\n\n    /**\n     * Start the WorkerRequest or WorkerMediaFiles runner.\n     *\n     * @param {number} status\n     * @param {number} groupStartIndex\n     * @param {number} entityStartIndex\n     * @param {number} entityOffset\n     * @returns {Promise}\n     * @private\n     */\n    _startWorkRunner(status, groupStartIndex, entityStartIndex, entityOffset) {\n        return new Promise(async (resolve) => {\n            if (!this._migrationProcessState.isMigrating) {\n                resolve();\n                return;\n            }\n\n            if (groupStartIndex === 0 && entityStartIndex === 0 && entityOffset === 0) {\n                this._resetProgress();\n            }\n\n            await this._workRunner.migrateProcess(\n                status,\n                groupStartIndex,\n                entityStartIndex,\n                entityOffset,\n            );\n\n            resolve();\n        });\n    }\n\n    /**\n     * Resolves with true if a migration is already running in another tab. otherwise false.\n     * It will resolve after 300ms.\n     *\n     * @returns {Promise}\n     * @private\n     */\n    isMigrationRunningInOtherTab() {\n        return new Promise(async (resolve) => {\n            this._broadcastService.sendMessage({\n                migrationMessage: 'migrationWanted',\n            });\n\n            const oldFlag = this._broadcastResponseFlag;\n            setTimeout(() => {\n                if (this._broadcastResponseFlag !== oldFlag) {\n                    resolve(true);\n                    return;\n                }\n\n                resolve(false);\n            }, 300);\n        });\n    }\n\n    /**\n     * Gets called with data from another browser tab\n     *\n     * @param {Object} data\n     * @private\n     */\n    _onBroadcastReceived(data) {\n        // answer incoming migration wanted request based on current migration state.\n        if (data.migrationMessage === 'migrationWanted') {\n            if (this._migrationProcessState.isMigrating) {\n                this._broadcastService.sendMessage({\n                    migrationMessage: 'migrationDenied',\n                });\n            }\n        }\n\n        // allow own migration if no migrationDenied response comes back.\n        if (data.migrationMessage === 'migrationDenied') {\n            this._broadcastResponseFlag = !this._broadcastResponseFlag;\n        }\n    }\n\n    /**\n     * @returns {Promise}\n     * @private\n     */\n    _migrateFinish() {\n        if (!this._migrationProcessState.isMigrating) {\n            return Promise.resolve();\n        }\n\n        return this._workerStatusManager.changeStatus(\n            this._migrationProcessState.runId,\n            MIGRATION_STATUS.FINISHED,\n        ).then(() => {\n            this._showFinishNotification(this._migrationProcessState.runId);\n            this._resetProgress();\n            this._assignThemes().finally(() => {\n                this._handleIndexing();\n            });\n\n            return Promise.resolve();\n        });\n    }\n\n    _showFinishNotification(runId) {\n        State.dispatch('notification/createNotification', {\n            title: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.notification.title'),\n            message: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.notification.message'),\n            variant: 'info',\n            growl: false,\n            actions: [\n                {\n                    label: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.notification.actionLabel'),\n                    route: { name: 'swag.migration.index.history.detail', params: { id: runId } },\n                },\n            ],\n        });\n    }\n\n    _assignThemes() {\n        return this._migrationService.assignThemes(this._migrationProcessState.runId);\n    }\n\n    _handleIndexing() {\n        let notificationId = null;\n        State.dispatch('notification/createNotification', {\n            title: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.indexingNotification.running.title'),\n            message: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.indexingNotification.running.message'),\n            variant: 'info',\n            isLoading: true,\n            growl: false,\n        }).then((id) => {\n            notificationId = id;\n            return this._migrationIndexingWorker.start();\n        }).then(() => {\n            // indexing finished\n            State.dispatch('notification/updateNotification', {\n                uuid: notificationId,\n                title: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.indexingNotification.finished.title'),\n                message: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.indexingNotification.finished.message'),\n                variant: 'info',\n                isLoading: false,\n                visited: false,\n                growl: true,\n            });\n        });\n    }\n\n    _resetProgress() {\n        State.commit('swagMigration/process/resetProgress');\n    }\n\n    /**\n     * @returns {Boolean|Vue}\n     */\n    get applicationRoot() {\n        if (this._applicationRoot) {\n            return this._applicationRoot;\n        }\n        this._applicationRoot = Application.getApplicationRoot();\n        return this._applicationRoot;\n    }\n}\n\nexport default MigrationWorkerService;\n","import template from './swag-migration-process-screen.html.twig';\nimport './swag-migration-process-screen.scss';\nimport { UI_COMPONENT_INDEX } from '../../../../core/data/migrationUI.store';\nimport { MIGRATION_STATUS } from '../../../../core/service/migration/swag-migration-worker-status-manager.service';\nimport {\n    MIGRATION_ACCESS_TOKEN_NAME,\n    WORKER_INTERRUPT_TYPE,\n} from '../../../../core/service/migration/swag-migration-worker.service';\n\nconst { Component, State, Mixin } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-process-screen', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n        /** @var {MigrationWorkerService} migrationWorkerService */\n        migrationWorkerService: 'migrationWorkerService',\n        /** @var {MigrationProcessStoreInitService} migrationProcessStoreInitService */\n        migrationProcessStoreInitService: 'processStoreInitService',\n        /** @var {MigrationUiStoreInitService} migrationUiStoreInitService */\n        migrationUiStoreInitService: 'uiStoreInitService',\n    },\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            errorList: [],\n            isTakeoverForbidden: false,\n            isMigrationInterrupted: false,\n            isOtherMigrationRunning: false,\n            showAbortMigrationConfirmDialog: false,\n            isPausedBeforeAbortDialog: false,\n            UI_COMPONENT_INDEX: UI_COMPONENT_INDEX,\n            displayFlowChart: true,\n            flowChartItemIndex: 0,\n            flowChartItemVariant: 'info',\n            flowChartInitialItemVariants: [],\n            isWarningConfirmed: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'statusIndex',\n            'isMigrating',\n            'connectionId',\n            'environmentInformation',\n            'runId',\n        ]),\n\n        ...mapState('swagMigration/ui', [\n            'componentIndex',\n            'isPaused',\n            'isLoading',\n            'isPremappingValid',\n            'unfilledPremapping',\n            'premapping',\n            'dataSelectionIds',\n            'startMigration',\n        ]),\n\n        /**\n         * @returns {string}\n         */\n        abortMigrationBackText() {\n            if (this.isPausedBeforeAbortDialog) {\n                return this.$tc('swag-migration.index.confirmAbortDialog.cancelPause');\n            }\n\n            return this.$tc('swag-migration.index.confirmAbortDialog.cancelRunning');\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        componentIndexIsResult() {\n            return this.componentIndex === UI_COMPONENT_INDEX.RESULT_SUCCESS;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        abortButtonVisible() {\n            return this.isPaused || (\n                this.isMigrating &&\n                !this.isLoading &&\n                !this.componentIndexIsResult\n            );\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        backButtonVisible() {\n            return this.componentIndexIsResult;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        migrateButtonVisible() {\n            return (!this.isMigrating && !this.isPaused) ||\n                (this.statusIndex === MIGRATION_STATUS.FETCH_DATA &&\n                    this.isMigrating) ||\n                (this.componentIndexIsResult && this.isMigrating);\n        },\n\n        isFetching() {\n            return this.statusIndex === MIGRATION_STATUS.FETCH_DATA &&\n                this.isMigrating;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        migrateButtonDisabled() {\n            return this.isLoading ||\n                this.isFetching ||\n                this.componentIndexIsResult;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        startButtonVisible() {\n            return !this.isLoading &&\n                this.statusIndex === MIGRATION_STATUS.PREMAPPING &&\n                this.isMigrating;\n        },\n\n        premappingIsNotReady() {\n            return this.statusIndex === MIGRATION_STATUS.PREMAPPING &&\n                this.componentIndex !== UI_COMPONENT_INDEX.WARNING_CONFIRM &&\n                this.isMigrating &&\n                !this.isPremappingValid;\n        },\n\n        warningIsNotReady() {\n            return this.componentIndex === UI_COMPONENT_INDEX.WARNING_CONFIRM &&\n                this.isWarningConfirmed === false;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        startButtonDisabled() {\n            return this.isLoading ||\n                this.premappingIsNotReady ||\n                this.warningIsNotReady;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        pauseButtonVisible() {\n            return this.isMigrating &&\n                !this.isPaused &&\n                !this.componentIndexIsResult &&\n                [\n                    MIGRATION_STATUS.WAITING,\n                    MIGRATION_STATUS.PREMAPPING,\n                ].includes(this.statusIndex) === false;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        pauseButtonDisabled() {\n            return this.isLoading;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        continueButtonVisible() {\n            return this.isPaused;\n        },\n    },\n\n    watch: {\n        statusIndex: {\n            immediate: true,\n            /**\n             * @param {number} status\n             */\n            handler(status) {\n                if (this.isLoading) {\n                    return;\n                }\n\n                if (status === MIGRATION_STATUS.WAITING) {\n                    return;\n                }\n\n                if (status === MIGRATION_STATUS.PREMAPPING) {\n                    this.$nextTick(() => {\n                        this.flowChartItemIndex = status;\n                    });\n                    return;\n                }\n\n                this.$nextTick(() => {\n                    this.flowChartItemIndex = status;\n\n                    if (status !== MIGRATION_STATUS.FINISHED) {\n                        this.flowChartItemVariant = 'info';\n                    } else {\n                        this.flowChartItemVariant = 'success';\n                    }\n\n                    if (this.flowChartInitialItemVariants.length < this.flowChartItemIndex) {\n                        while (this.flowChartInitialItemVariants.length < this.flowChartItemIndex) {\n                            this.flowChartInitialItemVariants.push('success');\n                        }\n                    }\n                });\n\n                if (status === MIGRATION_STATUS.PROCESS_MEDIA_FILES) {\n                    this.onProcessMediaFiles();\n                }\n\n                if (status === MIGRATION_STATUS.FINISHED) {\n                    this.isOtherMigrationRunning = false;\n                    this.onFinishWithoutErrors();\n                }\n            },\n        },\n\n        isPremappingValid: {\n            handler(valid) {\n                if (valid) {\n                    this.flowChartItemVariant = 'success';\n                    return;\n                }\n\n                this.flowChartItemVariant = 'error';\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    beforeDestroy() {\n        this.beforeDestroyedComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            State.commit('swagMigration/ui/setIsLoading', true);\n\n            const shouldStartMigration = this.startMigration;\n            State.commit('swagMigration/ui/setStartMigration', false);\n\n            let otherInstanceMigrating = this.isMigrating;\n            if (this.isMigrating === false) {\n                await this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                    if (isRunning) {\n                        otherInstanceMigrating = true;\n                        this.isTakeoverForbidden = true;\n                        this.onInvalidMigrationAccessToken();\n                    }\n                });\n\n                if (!this.isTakeoverForbidden) {\n                    await this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                        if (runState.isMigrationAccessTokenValid === false && runState.isMigrationRunning === true) {\n                            otherInstanceMigrating = true;\n                            this.onInvalidMigrationAccessToken();\n                            return;\n                        }\n\n                        State.commit('swagMigration/ui/setIsPaused', runState.isMigrationRunning);\n                        if (this.isPaused) {\n                            otherInstanceMigrating = true;\n                            State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.LOADING_SCREEN);\n                        }\n\n                        this.restoreFlowChart(runState.status);\n                    });\n                }\n            }\n\n            if (\n                this.connectionId === null\n                || this.environmentInformation === null\n            ) {\n                await this.migrationProcessStoreInitService.initProcessStore();\n            }\n\n            if (this.connectionId === null) {\n                this.$router.push({ name: 'swag.migration.wizard.introduction' });\n                return Promise.resolve();\n            }\n\n            // Do connection check\n            return this.migrationService.checkConnection(this.connectionId)\n                .then(async (connectionCheckResponse) => {\n                    State.commit('swagMigration/process/setEnvironmentInformation', connectionCheckResponse);\n\n                    if (\n                        (\n                            connectionCheckResponse.requestStatus.isWarning === false &&\n                            connectionCheckResponse.requestStatus.code !== ''\n                        ) ||\n                        (!otherInstanceMigrating && !shouldStartMigration)\n                    ) {\n                        this.$router.push({ name: 'swag.migration.index.main' });\n                        return Promise.resolve();\n                    }\n\n                    this.migrationWorkerService.restoreRunningMigration(false);\n\n                    if (\n                        (this.isMigrating ||\n                        this.migrationWorkerService.status === MIGRATION_STATUS.FINISHED) &&\n                        !shouldStartMigration\n                    ) {\n                        this.restoreRunningMigration();\n                    }\n\n                    if (shouldStartMigration) {\n                        await this.onMigrate();\n                    }\n\n                    State.commit('swagMigration/ui/setIsLoading', false);\n\n                    return Promise.resolve();\n                }).catch(() => {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                });\n        },\n\n        beforeDestroyedComponent() {\n            this.migrationWorkerService.unsubscribeInterrupt();\n        },\n\n        restoreFlowChart(currentStatus) {\n            this.flowChartItemIndex = currentStatus;\n\n            if (currentStatus !== MIGRATION_STATUS.FINISHED) {\n                this.flowChartItemVariant = 'info';\n            } else {\n                this.flowChartItemVariant = 'success';\n            }\n\n            if (currentStatus === MIGRATION_STATUS.PREMAPPING && this.unfilledPremapping.length > 0) {\n                this.flowChartItemVariant = 'error';\n            }\n\n            this.flowChartInitialItemVariants = [];\n            for (let i = 0; i < currentStatus; i += 1) {\n                this.flowChartInitialItemVariants.push('success');\n            }\n        },\n\n        resetFlowChart() {\n            this.flowChartItemIndex = 0;\n            this.flowChartItemVariant = 'info';\n            this.flowChartInitialItemVariants = [];\n        },\n\n        restoreRunningMigration() {\n            this.displayFlowChart = true;\n\n            // show loading or premapping screen\n            if (this.statusIndex === MIGRATION_STATUS.PREMAPPING &&\n                this.componentIndex === UI_COMPONENT_INDEX.WARNING_CONFIRM) {\n                State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.WARNING_CONFIRM);\n            } else if (this.statusIndex === MIGRATION_STATUS.PREMAPPING) {\n                State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.PREMAPPING);\n            } else if (this.statusIndex === MIGRATION_STATUS.PROCESS_MEDIA_FILES) {\n                this.onProcessMediaFiles();\n            } else if (this.statusIndex === MIGRATION_STATUS.FINISHED) {\n                this.onFinishWithoutErrors();\n            } else {\n                State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.LOADING_SCREEN);\n            }\n\n            if (this.statusIndex !== MIGRATION_STATUS.WAITING) {\n                this.restoreFlowChart(this.statusIndex);\n            }\n\n            // subscribe to the interrupt event again\n            this.migrationWorkerService.subscribeInterrupt(this.onInterrupt);\n        },\n\n        onAbortButtonClick() {\n            this.isOtherMigrationRunning = false;\n\n            if (this.statusIndex === MIGRATION_STATUS.PREMAPPING) {\n                State.commit('swagMigration/ui/setIsLoading', true);\n                this.onInterrupt(WORKER_INTERRUPT_TYPE.STOP);\n                return;\n            }\n\n            this.showAbortMigrationConfirmDialog = true;\n            this.isPausedBeforeAbortDialog = this.isPaused;\n\n            if (!this.isPaused) {\n                State.commit('swagMigration/ui/setIsLoading', true);\n                this.migrationWorkerService.pauseMigration();\n            }\n        },\n\n        onSaveButtonClick() {\n            this.migrationService.writePremapping(\n                this.runId,\n                this.premapping,\n            ).then(() => {\n                this.createNotificationSuccess({\n                    message: this.$t('swag-migration.index.savePremapping.message'),\n                    growl: true,\n                });\n            });\n        },\n\n        onBackButtonClick() {\n            this.migrationWorkerService.status = MIGRATION_STATUS.WAITING;\n            State.commit('swagMigration/process/setIsMigrating', false);\n            this.isOtherMigrationRunning = false;\n            this.$router.push({ name: 'swag.migration.index.main' });\n        },\n\n        onStartButtonClick() {\n            if (this.componentIndex === UI_COMPONENT_INDEX.WARNING_CONFIRM) {\n                State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.PREMAPPING);\n                return Promise.resolve();\n            }\n\n            State.commit('swagMigration/ui/setIsLoading', true);\n            return this.migrationService.writePremapping(\n                this.runId,\n                this.premapping,\n            ).then(() => {\n                State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.LOADING_SCREEN);\n                State.commit('swagMigration/ui/setIsLoading', false);\n                return this.migrationWorkerService.startMigration(\n                    this.runId,\n                ).then(() => {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                }).catch(() => {\n                    this.onInvalidMigrationAccessToken();\n                });\n            });\n        },\n\n        onPauseButtonClick() {\n            this.migrationWorkerService.pauseMigration();\n            State.commit('swagMigration/process/setIsMigrating', false);\n            State.commit('swagMigration/ui/setIsLoading', true);\n        },\n\n        async onContinueButtonClick() {\n            State.commit('swagMigration/ui/setIsLoading', true);\n            this.isOtherMigrationRunning = false;\n            State.commit('swagMigration/process/setIsMigrating', true);\n\n            await this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                if (isRunning) {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isTakeoverForbidden = true;\n                    this.onInvalidMigrationAccessToken();\n                }\n            });\n\n            if (!this.isTakeoverForbidden) {\n                await this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                    if (runState.requestErrorCode !== undefined &&\n                        runState.requestErrorCode !== '500') {\n                        // Something is wrong with the connection\n                        State.commit('swagMigration/ui/setIsLoading', false);\n                        return;\n                    }\n\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    State.commit('swagMigration/ui/setIsPaused', false);\n\n                    if (runState.isMigrationAccessTokenValid === false) {\n                        this.onInterrupt(WORKER_INTERRUPT_TYPE.TAKEOVER);\n                        return;\n                    }\n\n                    if (runState.isMigrationRunning === false) {\n                        State.commit('swagMigration/process/setIsMigrating', false);\n                        this.$router.push({ name: 'swag.migration.index.main' });\n                        return;\n                    }\n\n                    this.migrationWorkerService.restoreRunningMigration();\n                    this.restoreRunningMigration();\n                });\n            }\n        },\n\n        async onMigrate() {\n            this.isOtherMigrationRunning = false;\n\n            this.$nextTick().then(async () => {\n                this.resetFlowChart();\n                State.commit('swagMigration/process/setIsMigrating', true);\n                this.errorList = [];\n\n                // show loading screen\n                State.commit('swagMigration/ui/setIsLoading', true);\n                State.commit('swagMigration/process/resetProgress');\n\n                let isMigrationRunningInOtherTab = false;\n                await this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                    isMigrationRunningInOtherTab = isRunning;\n                });\n\n                if (isMigrationRunningInOtherTab) {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isTakeoverForbidden = true;\n                    this.onInvalidMigrationAccessToken();\n                    return;\n                }\n\n                this.migrationWorkerService.subscribeInterrupt(this.onInterrupt.bind(this));\n\n                await this.migrationWorkerService.createMigration(\n                    this.dataSelectionIds,\n                ).then((runState) => {\n                    State.commit('swagMigration/process/setEntityGroups', runState.runProgress);\n\n                    if (\n                        runState.isMigrationAccessTokenValid === false ||\n                        runState.isMigrationRunning === true ||\n                        runState.runUuid === null ||\n                        runState.accessToken === null\n                    ) {\n                        this.onInvalidMigrationAccessToken();\n                        return;\n                    }\n\n                    localStorage.setItem(MIGRATION_ACCESS_TOKEN_NAME, runState.accessToken);\n                    State.commit('swagMigration/process/setRunId', runState.runUuid);\n\n                    if (this.environmentInformation.sourceSystemCurrency !== '' &&\n                        this.environmentInformation.targetSystemCurrency !== '' &&\n                        this.environmentInformation.sourceSystemLocale !== '' &&\n                        this.environmentInformation.targetSystemLocale !== '' &&\n                        (\n                            this.environmentInformation.sourceSystemCurrency !==\n                            this.environmentInformation.targetSystemCurrency ||\n                            this.environmentInformation.sourceSystemLocale !==\n                            this.environmentInformation.targetSystemLocale\n                        )\n                    ) {\n                        State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.WARNING_CONFIRM);\n                    } else {\n                        State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.PREMAPPING);\n                    }\n\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                });\n            });\n        },\n\n        onFinishWithoutErrors() {\n            State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.RESULT_SUCCESS);\n            this.$root.$emit('sales-channel-change');\n        },\n\n        onCloseAbortMigrationConfirmDialog() {\n            this.showAbortMigrationConfirmDialog = false;\n\n            if (!this.isPausedBeforeAbortDialog) {\n                this.$nextTick(() => {\n                    this.onContinueButtonClick();\n                });\n            }\n        },\n\n        /**\n         * Check if a takeover is allowed, takeover migration and restore state\n         */\n        async onTakeoverMigration() {\n            State.commit('swagMigration/process/setIsMigrating', true);\n            State.commit('swagMigration/ui/setIsLoading', true);\n\n            await this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                if (isRunning) {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isTakeoverForbidden = true;\n                    this.onInvalidMigrationAccessToken();\n                }\n            });\n\n            if (this.isTakeoverForbidden) {\n                return;\n            }\n\n            await this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                if (runState.isMigrationRunning === false) {\n                    State.commit('swagMigration/process/setIsMigrating', false);\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isOtherMigrationRunning = false;\n                    this.$router.push({ name: 'swag.migration.index.main' });\n                    return;\n                }\n\n                this.migrationWorkerService.takeoverMigration(runState.runUuid).then(() => {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.migrationWorkerService.restoreRunningMigration();\n                    this.restoreRunningMigration();\n                });\n            });\n        },\n\n        /**\n         * Abort the running migration on the other client so this client can start a new one.\n         */\n        async onAbortOtherMigration() {\n            State.commit('swagMigration/ui/setIsLoading', true);\n            State.commit('swagMigration/process/setIsMigrating', true);\n\n            await this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                if (isRunning) {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isTakeoverForbidden = true;\n                    this.onInvalidMigrationAccessToken();\n                }\n            });\n\n            if (this.isTakeoverForbidden) {\n                return;\n            }\n\n            await this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                if (runState.isMigrationRunning === false) {\n                    State.commit('swagMigration/process/setIsMigrating', false);\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isOtherMigrationRunning = false;\n                    this.$router.push({ name: 'swag.migration.index.main' });\n                    return;\n                }\n\n                this.migrationService.abortMigration(runState.runUuid).then(() => {\n                    State.commit('swagMigration/process/setIsMigrating', false);\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isOtherMigrationRunning = false;\n                    this.$router.push({ name: 'swag.migration.index.main' });\n                });\n            });\n        },\n\n        /**\n         * If the current migration was interrupted through a takeover, pause or stop\n         *\n         * @param {number} type\n         */\n        onInterrupt(type) {\n            if (type === WORKER_INTERRUPT_TYPE.TAKEOVER) {\n                this.onConfiscatedMigration();\n            } else if (type === WORKER_INTERRUPT_TYPE.STOP) {\n                this.onStop();\n            } else if (type === WORKER_INTERRUPT_TYPE.PAUSE) {\n                this.onPause();\n            } else if (type === WORKER_INTERRUPT_TYPE.CONNECTION_LOST) {\n                this.onConnectionLost();\n            }\n        },\n\n        /**\n         * If the current migration was confiscated by a takeover from another client\n         */\n        onConfiscatedMigration() {\n            this.onInvalidMigrationAccessToken();\n            this.isMigrationInterrupted = true;\n            this.$nextTick(() => {\n                this.$refs.loadingScreenTakeover.refreshState();\n            });\n        },\n\n        /**\n         * If the current migration was stopped\n         */\n        onStop() {\n            return this.migrationService.abortMigration(this.runId).then(() => {\n                this.showAbortMigrationConfirmDialog = false;\n                this.isMigrationInterrupted = false;\n                State.commit('swagMigration/process/setIsMigrating', false);\n                State.commit('swagMigration/ui/setIsPaused', false);\n                State.commit('swagMigration/ui/setIsLoading', false);\n                this.$nextTick(() => {\n                    this.$router.push({ name: 'swag.migration.index.main' });\n                });\n            });\n        },\n\n        /**\n         * If the current migration was paused\n         */\n        onPause() {\n            this.isMigrationInterrupted = false;\n            State.commit('swagMigration/process/setIsMigrating', false);\n            State.commit('swagMigration/ui/setIsPaused', true);\n            State.commit('swagMigration/ui/setIsLoading', false);\n            this.isOtherMigrationRunning = false;\n            State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.PAUSE_SCREEN);\n        },\n\n        onConnectionLost() {\n            State.commit('swagMigration/process/setIsMigrating', false);\n            State.commit('swagMigration/ui/setIsPaused', false);\n            State.commit('swagMigration/ui/setDataSelectionIds', []);\n            State.commit('swagMigration/ui/setDataSelectionTableData', []);\n            State.commit('swagMigration/ui/setIsLoading', false);\n            State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.CONNECTION_LOST);\n        },\n\n        /**\n         * If the current accessToken is invalid and a migration is running\n         */\n        onInvalidMigrationAccessToken() {\n            this.displayFlowChart = false;\n            this.isMigrationInterrupted = false;\n            State.commit('swagMigration/process/setIsMigrating', false);\n            State.commit('swagMigration/ui/setIsPaused', false);\n            this.isOtherMigrationRunning = true;\n            State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.TAKEOVER);\n            State.commit('swagMigration/ui/setIsLoading', false);\n        },\n\n        onWarningConfirmationChanged(confirmed) {\n            this.isWarningConfirmed = confirmed;\n        },\n\n        onProcessMediaFiles() {\n            State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.MEDIA_SCREEN);\n        },\n    },\n});\n","export default \"{% block swag_migration_process_screen %}\\n    <sw-page class=\\\"swag-migration-process-screen\\\">\\n\\n        {% block swag_migration_index_smart_bar_header %}\\n            <template #smart-bar-header>\\n                <h2>\\n                    {{ $tc('sw-settings.index.title') }}\\n                    <sw-icon name=\\\"regular-chevron-right-xs\\\" small></sw-icon>\\n                    {{ $tc('swag-migration.general.mainMenuItemGeneral') }}\\n                </h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_smart_bar_actions %}\\n            <template #smart-bar-actions>\\n\\n                {% block swag_migration_index_smart_bar_abort_button %}\\n                    <sw-button v-if=\\\"abortButtonVisible\\\" @click=\\\"onAbortButtonClick\\\">\\n                        {{ $tc('swag-migration.index.abortButton') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_smart_bar_back_button %}\\n                    <sw-button v-if=\\\"backButtonVisible\\\"\\n                               variant=\\\"primary\\\"\\n                               @click=\\\"onBackButtonClick\\\">\\n                        {{ $tc('swag-migration.index.backButton') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_smart_bar_pause_button %}\\n                    <sw-button v-if=\\\"pauseButtonVisible\\\"\\n                               variant=\\\"primary\\\"\\n                               :disabled=\\\"pauseButtonDisabled\\\"\\n                               @click=\\\"onPauseButtonClick\\\">\\n                        {{ $tc('swag-migration.index.pauseButton') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_smart_bar_continue_button %}\\n                    <sw-button v-if=\\\"continueButtonVisible\\\"\\n                               variant=\\\"primary\\\"\\n                               @click=\\\"onContinueButtonClick\\\">\\n                        {{ $tc('swag-migration.index.continueButton') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_smart_bar_button_group %}\\n                    <sw-button-group\\n                        v-if=\\\"startButtonVisible\\\"\\n                        :splitButton=\\\"true\\\">\\n\\n                        {% block swag_migration_index_smart_bar_start_button %}\\n                            <sw-button variant=\\\"primary\\\"\\n                                       :disabled=\\\"startButtonDisabled\\\"\\n                                       @click=\\\"onStartButtonClick\\\">\\n                                {{ $tc('swag-migration.index.startButton') }}\\n                            </sw-button>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_index_smart_bar_context_button %}\\n                            <sw-context-button :disabled=\\\"isLoading\\\">\\n                                <template #button>\\n                                    {% block swag_migration_index_smart_bar_context_button_content %}\\n                                        <sw-button\\n                                            square\\n                                            variant=\\\"primary\\\"\\n                                            :disabled=\\\"isLoading\\\"\\n                                        >\\n                                            <sw-icon name=\\\"regular-chevron-down-xs\\\"></sw-icon>\\n                                        </sw-button>\\n                                    {% endblock %}\\n                                </template>\\n\\n                                {% block swag_migration_index_smart_bar_premapping_save_button %}\\n                                    <sw-context-menu-item\\n                                        @click=\\\"onSaveButtonClick\\\"\\n                                        :disabled=\\\"isLoading\\\"\\n                                    >\\n                                        {{ $tc('swag-migration.index.savePremapping.saveButton') }}\\n                                    </sw-context-menu-item>\\n                            {% endblock %}\\n                            </sw-context-button>\\n                        {% endblock %}\\n\\n                    </sw-button-group>\\n                {% endblock %}\\n\\n            </template>\\n        {% endblock %}\\n\\n        <template #content>\\n            <sw-card-view v-if=\\\"!isLoading\\\" class=\\\"swag-migration-process-screen\\\">\\n\\n                {% block swag_migration_index_main_page_flow_chart %}\\n                    <sw-step-display v-if=\\\"displayFlowChart && componentIndex !== UI_COMPONENT_INDEX.WARNING_CONFIRM\\\"\\n                                     class=\\\"swag-migration-process-screen__step-display\\\"\\n                                     :itemIndex=\\\"flowChartItemIndex\\\"\\n                                     :itemVariant=\\\"flowChartItemVariant\\\"\\n                                     :initialItemVariants=\\\"flowChartInitialItemVariants\\\">\\n                        <sw-step-item>\\n                            {{ $tc('swag-migration.index.loadingScreenCard.flowChart.premapping') }}\\n                        </sw-step-item>\\n                        <sw-step-item>\\n                            {{ $tc('swag-migration.index.loadingScreenCard.flowChart.fetchData') }}\\n                        </sw-step-item>\\n                        <sw-step-item>\\n                            {{ $tc('swag-migration.index.loadingScreenCard.flowChart.writeData') }}\\n                        </sw-step-item>\\n                        <sw-step-item>\\n                            {{ $tc('swag-migration.index.loadingScreenCard.flowChart.processMedia') }}\\n                        </sw-step-item>\\n                        <sw-step-item disabledIcon=\\\"regular-checkmark-xs\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.flowChart.finish') }}\\n                        </sw-step-item>\\n                    </sw-step-display>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_confirm_warning %}\\n                    <swag-migration-confirm-warning v-if=\\\"componentIndex === UI_COMPONENT_INDEX.WARNING_CONFIRM\\\"\\n                                                    class=\\\"swag-migration-process-screen__confirm-warning\\\"\\n                                                    @confirmation-change=\\\"onWarningConfirmationChanged\\\">\\n                    </swag-migration-confirm-warning>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_premapping %}\\n                    <swag-migration-premapping v-if=\\\"componentIndex === UI_COMPONENT_INDEX.PREMAPPING\\\">\\n                    </swag-migration-premapping>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_loadingScreen %}\\n                    <swag-migration-loading-screen\\n                            v-if=\\\"componentIndex === UI_COMPONENT_INDEX.LOADING_SCREEN || componentIndex === UI_COMPONENT_INDEX.PAUSE_SCREEN\\\">\\n                    </swag-migration-loading-screen>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_loadingScreen_media %}\\n                    <swag-migration-media-process v-if=\\\"componentIndex === UI_COMPONENT_INDEX.MEDIA_SCREEN\\\">\\n                    </swag-migration-media-process>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_loadingScreen_success %}\\n                    <swag-migration-result-screen v-if=\\\"componentIndex === UI_COMPONENT_INDEX.RESULT_SUCCESS\\\"\\n                                                  :runId=\\\"runId\\\">\\n                    </swag-migration-result-screen>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_loadingScreen_takeover %}\\n                    <swag-migration-loading-screen-takeover v-if=\\\"componentIndex === UI_COMPONENT_INDEX.TAKEOVER\\\"\\n                                                            ref=\\\"loadingScreenTakeover\\\"\\n                                                            :isTakeoverForbidden=\\\"isTakeoverForbidden\\\"\\n                                                            :isMigrationInterrupted=\\\"isMigrationInterrupted\\\"\\n                                                            @onTakeoverMigration=\\\"onTakeoverMigration\\\"\\n                                                            @onAbortMigration=\\\"onAbortOtherMigration\\\">\\n                    </swag-migration-loading-screen-takeover>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_loadingScreen_connectionLost %}\\n                    <swag-migration-loading-screen-connection-lost v-if=\\\"componentIndex === UI_COMPONENT_INDEX.CONNECTION_LOST\\\">\\n                    </swag-migration-loading-screen-connection-lost>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog %}\\n                    <sw-modal v-if=\\\"showAbortMigrationConfirmDialog\\\"\\n                              class=\\\"swag-migration-index-modal-abort-migration-confirm-dialog\\\"\\n                              :title=\\\"$tc('swag-migration.index.confirmAbortDialog.title')\\\"\\n                              variant=\\\"small\\\"\\n                              @modal-close=\\\"onCloseAbortMigrationConfirmDialog\\\">\\n\\n                        {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_message %}\\n                            <p class=\\\"swag-migration-index-modal-abort-migration-confirm-dialog-content\\\">\\n                                {{ $tc('swag-migration.index.confirmAbortDialog.content') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_message_hint %}\\n                            <p class=\\\"swag-migration-index-modal-abort-migration-confirm-dialog-hint\\\">\\n                                {{ $tc('swag-migration.index.confirmAbortDialog.hint') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_footer %}\\n                            <template #modal-footer>\\n\\n                                {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_footer_cancelAction %}\\n                                    <sw-button size=\\\"small\\\" @click=\\\"onCloseAbortMigrationConfirmDialog\\\">\\n                                        {{ abortMigrationBackText }}\\n                                    </sw-button>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_footer_confirmAction %}\\n                                    <sw-button variant=\\\"primary\\\" size=\\\"small\\\" @click=\\\"onStop\\\">\\n                                        {{ $tc('swag-migration.index.confirmAbortDialog.confirm') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n                            </template>\\n                        {% endblock %}\\n                    </sw-modal>\\n                {% endblock %}\\n            </sw-card-view>\\n            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n        </template>\\n    </sw-page>\\n{% endblock %}\\n\";","export default \"{% block swag_migration_wizard %}\\n    <div class=\\\"swag-migration-wizard\\\">\\n        <sw-modal v-if=\\\"showModal\\\"\\n                  class=\\\"swag-migration-wizard__modal\\\"\\n                  :size=\\\"modalSize\\\"\\n                  :title=\\\"$tc(modalTitleSnippet)\\\"\\n                  :isLoading=\\\"isLoading\\\"\\n                  @modal-close=\\\"onCloseModal\\\">\\n\\n            {% block swag_migration_wizard_placeholder %}\\n                <div v-show=\\\"isLoading || childIsLoading\\\" class=\\\"swag-migration-wizard__placeholder\\\"></div>\\n            {% endblock %}\\n\\n            {% block swag_migration_router_view %}\\n                    <router-view v-slot=\\\"{ Component }\\\">\\n                        <component\\n                            :is=\\\"Component\\\"\\n                            v-show=\\\"!isLoading && !childIsLoading\\\"\\n                            :currentConnectionId=\\\"connection.id\\\"\\n                            :profileInformationComponent=\\\"profileInformationComponent\\\"\\n                            :credentialsComponent=\\\"credentialsComponent\\\"\\n                            :credentials=\\\"connection.credentialFields\\\"\\n                            :errorMessageSnippet=\\\"errorMessageSnippet\\\"\\n                            :connectionNameErrorCode=\\\"connectionNameErrorCode\\\"\\n                            @onChildRouteReadyChanged=\\\"onChildRouteReadyChanged\\\"\\n                            @onTriggerPrimaryClick=\\\"triggerPrimaryClick\\\"\\n                            @onProfileSelected=\\\"onProfileSelected\\\"\\n                            @onChangeConnectionName=\\\"onChangeConnectionName\\\"\\n                            @onConnectionSelected=\\\"onConnectionSelected\\\"\\n                            @onCredentialsChanged=\\\"onCredentialsChanged\\\"\\n                            @onIsLoadingChanged=\\\"onChildIsLoadingChanged\\\"\\n                        ></component>\\n                    </router-view>\\n            {% endblock %}\\n\\n            <template class=\\\"swag-migration-wizard__footer\\\" #modal-footer>\\n                {% block swag_migration_wizard_footer %}\\n                    {% block swag_migration_wizard_arrow %}\\n                        <div class=\\\"swag-migration-wizard__left-actions\\\">\\n                            <sw-button v-show=\\\"buttonBackVisible\\\"\\n                                       class=\\\"swag-migration-wizard__buttonBack\\\"\\n                                       size=\\\"small\\\"\\n                                       @click=\\\"onButtonBackClick\\\">\\n                                {{ $tc(buttonBackSnippet) }}\\n                            </sw-button>\\n                        </div>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_actions %}\\n                        <div class=\\\"swag-migration-wizard__right-actions\\\">\\n\\n                            {% block swag_migration_wizard_actions_previous %}\\n                                <sw-button v-show=\\\"buttonSecondaryVisible\\\"\\n                                           size=\\\"small\\\"\\n                                           @click=\\\"onButtonSecondaryClick\\\">\\n                                    {{ $tc(buttonSecondarySnippet) }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_wizard_actions_next %}\\n                                <sw-button size=\\\"small\\\"\\n                                           variant=\\\"primary\\\"\\n                                           :disabled=\\\"buttonPrimaryDisabled\\\"\\n                                           @click=\\\"onButtonPrimaryClick\\\">\\n                                    {{ $tc(buttonPrimarySnippet) }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n                {% endblock %}\\n            </template>\\n        </sw-modal>\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-wizard.html.twig';\nimport './swag-migration-wizard.scss';\n\nconst { Component, Mixin, State } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst SSL_REQUIRED_ERROR_CODE = 'SWAG_MIGRATION__SSL_REQUIRED';\n\nconst CONNECTION_NAME_ERRORS = Object.freeze({\n    NAME_TO_SHORT: 'SWAG_MIGRATION_CONNECTION_NAME_TO_SHORT',\n    NAME_ALREADY_EXISTS: 'SWAG_MIGRATION_CONNECTION_NAME_ALREADY_EXISTS',\n});\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n        repositoryFactory: 'repositoryFactory',\n    },\n\n    mixins: [\n        Mixin.getByName('swag-wizard'),\n    ],\n\n    data() {\n        const routes = this.getRoutes();\n\n        return {\n            context: Shopware.Context.api,\n            showModal: true,\n            isLoading: true,\n            childIsLoading: false,\n            routes,\n            connection: {},\n            connectionName: '',\n            selectedProfile: {},\n            childRouteReady: false, // child routes with forms will emit and change this value depending on their validation.\n            errorMessageSnippet: '',\n            connectionNameErrorCode: '',\n            currentErrorCode: '',\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        migrationConnectionRepository() {\n            return this.repositoryFactory.create('swag_migration_connection');\n        },\n\n        migrationGeneralSettingRepository() {\n            return this.repositoryFactory.create('swag_migration_general_setting');\n        },\n\n        modalSize() {\n            if ([\n                this.routes.credentialsSuccess,\n                this.routes.credentialsError,\n            ].includes(this.currentRoute)) {\n                return '460px';\n            }\n\n            return '688px';\n        },\n\n        modalTitleSnippet() {\n            return this.currentRoute.titleSnippet;\n        },\n\n        buttonBackSnippet() {\n            return 'swag-migration.wizard.buttonToProfileInformation';\n        },\n\n        buttonBackVisible() {\n            return (\n                !this.isLoading &&\n                this.currentRoute === this.routes.credentials &&\n                this.profileInformationComponentIsLoaded\n            );\n        },\n\n        buttonSecondarySnippet() {\n            if (this.currentRoute === this.routes.credentialsError) {\n                return 'swag-migration.wizard.buttonLater';\n            }\n\n            return 'swag-migration.wizard.buttonAbort';\n        },\n\n        buttonSecondaryVisible() {\n            return (this.currentRoute !== this.routes.credentialsSuccess);\n        },\n\n        buttonPrimarySnippet() {\n            if (this.currentRoute === this.routes.introduction) {\n                return 'swag-migration.wizard.buttonLetsGo';\n            }\n\n            if (this.currentRoute === this.routes.connectionCreate) {\n                return 'swag-migration.wizard.buttonConnectionCreate';\n            }\n\n            if (this.currentRoute === this.routes.connectionSelect) {\n                return 'swag-migration.wizard.buttonConnectionSelect';\n            }\n\n            if (this.currentRoute === this.routes.credentials) {\n                return 'swag-migration.wizard.buttonConnect';\n            }\n\n            if (this.currentRoute === this.routes.credentialsSuccess) {\n                return 'swag-migration.wizard.buttonFinish';\n            }\n\n            if (this.currentRoute === this.routes.credentialsError) {\n                if (this.currentErrorCode === SSL_REQUIRED_ERROR_CODE) {\n                    return 'swag-migration.wizard.buttonUseSsl';\n                }\n\n                return 'swag-migration.wizard.buttonEdit';\n            }\n\n            return 'swag-migration.wizard.buttonNext';\n        },\n\n        buttonPrimaryDisabled() {\n            if ([\n                this.routes.credentials,\n                this.routes.connectionCreate,\n                this.routes.connectionSelect,\n            ].includes(this.currentRoute)) {\n                return !this.childRouteReady || this.isLoading;\n            }\n\n            return this.isLoading;\n        },\n\n        profileInformationComponent() {\n            if (!this.connection || !this.connection.profileName || !this.connection.gatewayName) {\n                return '';\n            }\n\n            return `swag-migration-profile-${this.connection.profileName}-` +\n                `${this.connection.gatewayName}-page-information`;\n        },\n\n        profileInformationComponentIsLoaded() {\n            return Component.getComponentRegistry().has(this.profileInformationComponent);\n        },\n\n        credentialsComponent() {\n            if (!this.connection || !this.connection.profileName || !this.connection.gatewayName) {\n                return '';\n            }\n\n            return `swag-migration-profile-${this.connection.profileName}-${this.connection.gatewayName}-credential-form`;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    /**\n     * Close modal and after it is closed we redirect to next route.\n     * (note: without closing it first the sw-modal will stay in the DOM)\n     *\n     * @param to\n     * @param from\n     * @param next\n     */\n    beforeRouteLeave(to, from, next) {\n        this.showModal = false;\n        this.$nextTick(() => {\n            next();\n        });\n    },\n\n    methods: {\n        createdComponent() {\n            return this.loadSelectedConnection(this.$route.params.connectionId).then(() => {\n                this.onChildRouteChanged(); // update strings for current child\n                this.isLoading = false;\n            });\n        },\n\n        getRoutes() {\n            return {\n                introduction: {\n                    name: 'swag.migration.wizard.introduction',\n                    index: 0,\n                    titleSnippet: 'swag-migration.wizard.pages.introduction.title',\n                },\n                profileInstallation: {\n                    name: 'swag.migration.wizard.profileInstallation',\n                    index: 0.1,\n                    titleSnippet: 'swag-migration.wizard.pages.profileInstallation.title',\n                },\n                connectionCreate: {\n                    name: 'swag.migration.wizard.connectionCreate',\n                    index: 0.2, // not available through nextRoute (child from profile)\n                    titleSnippet: 'swag-migration.wizard.pages.connectionCreate.title',\n                },\n                connectionSelect: {\n                    name: 'swag.migration.wizard.connectionSelect',\n                    index: 0.3, // not available through nextRoute (child from profile)\n                    titleSnippet: 'swag-migration.wizard.pages.connectionSelect.title',\n                },\n                profileInformation: {\n                    name: 'swag.migration.wizard.profileInformation',\n                    index: 1,\n                    titleSnippet: 'swag-migration.wizard.pages.profileInformation.title',\n                },\n                credentials: {\n                    name: 'swag.migration.wizard.credentials',\n                    index: 2,\n                    titleSnippet: 'swag-migration.wizard.pages.credentials.title',\n                },\n                credentialsSuccess: {\n                    name: 'swag.migration.wizard.credentialsSuccess',\n                    index: 2.1, // not available through nextRoute (child from credentials)\n                    titleSnippet: 'swag-migration.wizard.pages.credentials.statusTitle',\n                },\n                credentialsError: {\n                    name: 'swag.migration.wizard.credentialsError',\n                    index: 2.1, // not available through nextRoute (child from credentials)\n                    titleSnippet: 'swag-migration.wizard.pages.credentials.statusTitle',\n                },\n            };\n        },\n\n        /**\n         * Remove any whitespaces before or after the strings in the credentials object.\n         */\n        trimCredentials() {\n            Object.keys(this.connection.credentialFields).forEach((field) => {\n                this.connection.credentialFields[field] = this.connection.credentialFields[field].trim();\n            });\n        },\n\n        onConnect() {\n            this.isLoading = true;\n            this.errorMessageSnippet = '';\n\n            this.trimCredentials();\n            return this.migrationService.updateConnectionCredentials(\n                this.connection.id,\n                this.connection.credentialFields,\n            ).then((response) => {\n                if (response.errors && response.errors.length > 0) {\n                    this.isLoading = false;\n                    this.onResponseError('');\n                }\n\n                return this.doConnectionCheck();\n            }).catch((error) => {\n                this.isLoading = false;\n                this.onResponseError(error.response.data.errors[0].code);\n            });\n        },\n\n        doConnectionCheck() {\n            this.isLoading = true;\n            return this.migrationService.checkConnection(this.connection.id).then((connectionCheckResponse) => {\n                State.commit('swagMigration/process/setConnectionId', this.connection.id);\n                State.commit('swagMigration/process/setEntityGroups', []);\n                this.isLoading = false;\n\n                if (!connectionCheckResponse) {\n                    this.onResponseError(-1);\n                    return;\n                }\n                State.commit('swagMigration/process/setEnvironmentInformation', connectionCheckResponse);\n                State.commit('swagMigration/ui/setDataSelectionIds', []);\n                State.commit('swagMigration/ui/setPremapping', []);\n                State.commit('swagMigration/ui/setDataSelectionTableData', []);\n\n                if (connectionCheckResponse.requestStatus === undefined) {\n                    this.navigateToRoute(this.routes.credentialsSuccess);\n                    return;\n                }\n\n                if (\n                    connectionCheckResponse.requestStatus.code !== '' &&\n                    connectionCheckResponse.requestStatus.isWarning === false\n                ) {\n                    this.onResponseError(connectionCheckResponse.requestStatus.code);\n                    return;\n                }\n\n                // create warning for success page\n                this.errorMessageSnippet = '';\n                if (\n                    connectionCheckResponse.requestStatus.code !== '' &&\n                    connectionCheckResponse.requestStatus.isWarning === true\n                ) {\n                    this.errorMessageSnippet =\n                        `swag-migration.wizard.pages.credentials.success.${connectionCheckResponse.requestStatus.code}`;\n                }\n\n                this.navigateToRoute(this.routes.credentialsSuccess);\n            }).catch((error) => {\n                this.isLoading = false;\n                State.commit('swagMigration/process/setConnectionId', this.connection.id);\n                State.commit('swagMigration/process/setEntityGroups', []);\n                State.commit('swagMigration/process/setEnvironmentInformation', {});\n                State.commit('swagMigration/ui/setDataSelectionIds', []);\n                State.commit('swagMigration/ui/setPremapping', []);\n                State.commit('swagMigration/ui/setDataSelectionTableData', []);\n                this.onResponseError(error.response.data.errors[0].code);\n            });\n        },\n\n        onResponseError(errorCode) {\n            if (errorCode !== '') {\n                this.errorMessageSnippet = `swag-migration.wizard.pages.credentials.error.${errorCode}`;\n            } else {\n                this.errorMessageSnippet = '';\n            }\n\n            if (this.errorMessageSnippet === this.$tc(`swag-migration.wizard.pages.credentials.error.${errorCode}`)) {\n                this.errorMessageSnippet = 'swag-migration.wizard.pages.credentials.error.undefinedErrorMsg';\n            }\n\n            this.currentErrorCode = errorCode;\n\n            this.navigateToRoute(this.routes.credentialsError);\n        },\n\n        onCloseModal() {\n            this.showModal = false;\n\n            // navigate depending on the current state\n            if (Object.keys(this.connection).length) {\n                // navigate to module\n                this.$router.push({\n                    name: 'swag.migration.index',\n                    params: { connectionId: this.connection.id },\n                });\n\n                return;\n            }\n\n            this.$router.push({\n                name: 'swag.migration.emptyScreen',\n            });\n        },\n\n        onChildRouteChanged() {\n            this.checkForDisabledRoute();\n        },\n\n        checkForDisabledRoute() {\n            if (!Object.keys(this.connection).length) {\n                // there is no connection selected. redirect to the selection\n                this.onNoConnectionSelected();\n                return;\n            }\n\n            if (!this.profileInformationComponentIsLoaded) {\n                if (this.currentRoute === this.routes.profileInformation) {\n                    this.navigateToRoute(this.routes.credentials);\n                }\n\n                // make the profileInformation route a child if there is no component\n                // so navigation to this route is not possible for the user\n                this.routes.profileInformation.index = 0.1;\n            }\n        },\n\n        onButtonBackClick() {\n            this.navigateToRoute(this.routes.profileInformation);\n        },\n\n        onButtonSecondaryClick() {\n            // Abort / Later\n            this.onCloseModal();\n        },\n\n        triggerPrimaryClick() {\n            if (!this.buttonPrimaryDisabled) {\n                this.onButtonPrimaryClick();\n            }\n        },\n\n        onButtonPrimaryClick() {\n            if (this.currentRoute === this.routes.connectionCreate) {\n                // clicked Next (save selected profile)\n                this.createNewConnection().then(() => {\n                    this.navigateToNext();\n                }).catch(() => {\n                    this.connectionNameErrorCode = CONNECTION_NAME_ERRORS.NAME_ALREADY_EXISTS;\n                    this.isLoading = false;\n                });\n                return;\n            }\n\n            if (this.currentRoute === this.routes.connectionSelect) {\n                this.saveSelectedConnection(this.connection).then(() => {\n                    this.doConnectionCheck();\n                });\n                return;\n            }\n\n            if (this.currentRoute === this.routes.credentials) {\n                // clicked Connect.\n                this.onConnect();\n                return;\n            }\n\n            if (this.currentRoute === this.routes.credentialsSuccess) {\n                // clicked Finish.\n                this.onCloseModal();\n                return;\n            }\n\n            if (this.currentRoute === this.routes.credentialsError) {\n                if (this.currentErrorCode === SSL_REQUIRED_ERROR_CODE) {\n                    this.connection.credentialFields.endpoint = this.connection.credentialFields.endpoint.replace('http:', 'https:');\n                    this.onConnect();\n                    return;\n                }\n\n                // clicked Edit\n                this.navigateToRoute(this.routes.credentials);\n                return;\n            }\n\n            if (this.currentRoute === this.routes.profileInstallation) {\n                this.navigateToRoute(this.routes.connectionCreate);\n                return;\n            }\n\n            this.navigateToNext();\n        },\n\n        loadSelectedConnection(connectionId) {\n            return new Promise((resolve) => {\n                // resolve if connection is already loaded\n                if (Object.keys(this.connection).length) {\n                    resolve();\n                    return;\n                }\n\n                this.isLoading = true;\n\n                if (connectionId !== undefined) {\n                    this.fetchConnection(connectionId).then(() => {\n                        resolve();\n                    });\n                    return;\n                }\n\n                const criteria = new Criteria(1, 1);\n                this.migrationGeneralSettingRepository.search(criteria, this.context).then((items) => {\n                    if (items.length < 1) {\n                        this.isLoading = false;\n                        this.onNoConnectionSelected();\n                        resolve();\n                        return;\n                    }\n\n                    if (items.first().selectedConnectionId === null) {\n                        this.isLoading = false;\n                        this.onNoConnectionSelected();\n                        resolve();\n                        return;\n                    }\n\n                    this.fetchConnection(items.first().selectedConnectionId);\n                });\n            });\n        },\n\n        fetchConnection(connectionId) {\n            return new Promise((resolve) => {\n                const criteria = new Criteria(1, 1);\n                criteria.addFilter(Criteria.equals('id', connectionId));\n\n                this.migrationConnectionRepository.search(criteria, this.context).then((connectionResponse) => {\n                    if (connectionResponse.length === 0 || connectionResponse.first().id === null) {\n                        this.isLoading = false;\n                        this.onNoConnectionSelected();\n                        resolve();\n                        return;\n                    }\n\n                    this.connection = connectionResponse.first();\n                    this.isLoading = false;\n                    resolve();\n                });\n            });\n        },\n\n        onNoConnectionSelected() {\n            if ([\n                this.routes.chooseAction,\n                this.routes.profileInformation,\n                this.routes.credentials,\n                this.routes.credentialsSuccess,\n                this.routes.credentialsError,\n            ].includes(this.currentRoute)) {\n                this.navigateToRoute(this.routes.profileInstallation);\n            }\n        },\n\n        createNewConnection() {\n            this.isLoading = true;\n            return this.checkConnectionName(this.connectionName).then((valid) => {\n                if (!valid) {\n                    this.isLoading = false;\n                    return Promise.reject();\n                }\n\n                this.connectionNameErrorCode = '';\n                const newConnection = this.migrationConnectionRepository.create(this.context);\n                newConnection.profileName = this.selectedProfile.profile;\n                newConnection.gatewayName = this.selectedProfile.gateway;\n                newConnection.name = this.connectionName;\n                return this.migrationConnectionRepository.save(newConnection, this.context).then(() => {\n                    return this.saveSelectedConnection(newConnection);\n                });\n            });\n        },\n\n        checkConnectionName(name) {\n            const criteria = new Criteria();\n            criteria.addFilter(Criteria.equals('name', name));\n\n            return this.migrationConnectionRepository.search(criteria, this.context).then((res) => {\n                return res.length === 0;\n            });\n        },\n\n        saveSelectedConnection(connection) {\n            return new Promise((resolve, reject) => {\n                this.isLoading = true;\n\n                State.commit('swagMigration/process/setConnectionId', connection.id);\n                State.commit('swagMigration/process/setEntityGroups', []);\n                State.commit('swagMigration/process/setEnvironmentInformation', {});\n                State.commit('swagMigration/ui/setDataSelectionIds', []);\n                State.commit('swagMigration/ui/setPremapping', []);\n                State.commit('swagMigration/ui/setDataSelectionTableData', []);\n\n                const criteria = new Criteria(1, 1);\n\n                this.migrationGeneralSettingRepository.search(criteria, this.context).then((items) => {\n                    if (items.length < 1) {\n                        this.isLoading = false;\n                        reject();\n                        return;\n                    }\n\n                    const setting = items.first();\n                    setting.selectedConnectionId = connection.id;\n                    this.migrationGeneralSettingRepository.save(setting, this.context).then(() => {\n                        this.connection = connection;\n                        this.isLoading = false;\n                        resolve();\n                    }).catch(() => {\n                        this.isLoading = false;\n                        reject();\n                    });\n                }).catch(() => {\n                    this.isLoading = false;\n                    reject();\n                });\n            });\n        },\n\n        onChildRouteReadyChanged(value) {\n            this.childRouteReady = value;\n        },\n\n        onCredentialsChanged(value) {\n            this.connection.credentialFields = value;\n        },\n\n        onProfileSelected(value) {\n            this.selectedProfile = value;\n        },\n\n        onChangeConnectionName(value) {\n            this.connectionName = value;\n            if (this.connectionName !== null && this.connectionName.length > 5) {\n                this.connectionNameErrorCode = '';\n                return;\n            }\n\n            this.connectionNameErrorCode = CONNECTION_NAME_ERRORS.NAME_TO_SHORT;\n        },\n\n        onChildIsLoadingChanged(value) {\n            this.childIsLoading = value;\n        },\n\n        onConnectionSelected(value) {\n            this.connection = value;\n        },\n    },\n});\n","import template from './swag-migration-wizard-page-introduction.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-introduction', {\n    template,\n\n    computed: {\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n});\n","export default \"{% block swag_migration_wizard_page_introduction %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-introduction\\\">\\n\\n        {% block swag_migration_wizard_page_introduction_content %}\\n            <div class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_introduction_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                        {% block swag_migration_wizard_page_introduction_svg %}\\n                            <img class=\\\"swag-migration-wizard__illustration\\\" :src=\\\"assetFilter('/swagmigrationassistant/static/img/wizard-introduction.svg')\\\">\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_introduction_api_hint %}\\n                            <h3 class=\\\"swag-migration-wizard__headline\\\">\\n                                {{ $tc('swag-migration.wizard.pages.introduction.contentHeadline') }}\\n                            </h3>\\n\\n                            <p class=\\\"swag-migration-wizard__description\\\">\\n                                {{ $tc('swag-migration.wizard.pages.introduction.contentInformation') }}\\n                            </p>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","export default \"{% block swag_migration_wizard_page_profile_installation %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-profile-installation\\\">\\n\\n        {% block swag_migration_wizard_page_profile_installation_content %}\\n            <div class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_profile_installation_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n                        {{ $tc('swag-migration.wizard.pages.profileInstallation.content') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_profile_installation_plugins %}\\n                    <div class=\\\"swag-migration-wizard-profile-installation__plugins\\\">\\n\\n                        {% block swag_migration_wizard_page_profile_installation_availabilty_headline %}\\n                            <div class=\\\"swag-migration-wizard-profile-installation__availability-headline\\\">\\n                                {{ $tc('swag-migration.wizard.pages.profileInstallation.availabilityHeadline') }}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_profile_installation_wrapper %}\\n                            <div class=\\\"swag-migration-wizard-profile-installation__wrapper\\\">\\n\\n                                {% block swag_migration_wizard_page_profile_installation_shopware_inner_wrapper %}\\n                                    <div class=\\\"swag-migration-wizard-profile-installation__inner_wrapper\\\">\\n\\n                                        {% block swag_migration_wizard_page_profile_installation_shopware_plugin_icon %}\\n                                            <div class=\\\"swag-migration-wizard-profile-installation__plugin_icon_column\\\">\\n                                                <img class=\\\"swag-migration-wizard-profile-installation__plugin-icon\\\"\\n                                                     :src=\\\"assetFilter('/swagmigrationassistant/static/img/wizard-shopware6-profile-avatar.svg')\\\">\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                        {% block swag_migration_wizard_page_profile_installation_shopware_plugin_information %}\\n                                            <div class=\\\"swag-migration-wizard-profile-installation__plugin_information_column\\\">\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_shopware_headline %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__profile_headline\\\">\\n                                                         {{ $tc('swag-migration.wizard.pages.profileInstallation.shopwareProfileHeadline') }}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_shopware_manufacturer %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__profile_manufacturer\\\">\\n                                                        {{ $tc('swag-migration.wizard.pages.profileInstallation.profileManufacturer') }}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_shopware_available_version_headline %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__available_version_headline\\\">\\n                                                        {{ $tc('swag-migration.wizard.pages.profileInstallation.availableVersionHeadline') }}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_shopware_available_version_list %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__available_version_list\\\">\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">5.4</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">5.5</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">5.6</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">5.7</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">6.3</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__last_version_box\\\">6.4</span>\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_shopware_installed_box %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__footer swag-migration-wizard-profile-installation__installed_box\\\">\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__installed_img\\\">\\n                                                            <sw-icon name=\\\"regular-check-circle-s\\\" size=\\\"16px\\\"></sw-icon>\\n                                                        </span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__installed_title\\\">{{ $tc('swag-migration.wizard.pages.profileInstallation.installedHint') }}</span>\\n                                                    </div>\\n                                                {% endblock %}\\n                                            </div>\\n                                        {% endblock %}\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_wizard_page_profile_installation_magento_inner_wrapper %}\\n                                    <div class=\\\"swag-migration-wizard-profile-installation__shopware-plugin swag-migration-wizard-profile-installation__inner_wrapper\\\">\\n\\n                                        {% block swag_migration_wizard_page_profile_installation_magento_plugin_icon %}\\n                                            <div class=\\\"swag-migration-wizard-profile-installation__plugin_icon_column\\\">\\n                                                <img class=\\\"swag-migration-wizard-profile-installation__plugin-icon\\\"\\n                                                     :src=\\\"assetFilter('/swagmigrationassistant/static/img/magento-profile-icon.svg')\\\">\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                        {% block swag_migration_wizard_page_profile_installation_magento_plugin_information %}\\n                                            <div class=\\\"swag-migration-wizard-profile-installation__plugin_information_column\\\">\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_magento_headline %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__profile_headline\\\">\\n                                                        {{ $tc('swag-migration.wizard.pages.profileInstallation.magentoProfileHeadline') }}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_magento_manufacturer %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__profile_manufacturer\\\">\\n                                                        {{ $tc('swag-migration.wizard.pages.profileInstallation.profileManufacturer') }}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_magento_available_version_headline %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__available_version_headline\\\">\\n                                                        {{ $tc('swag-migration.wizard.pages.profileInstallation.availableVersionHeadline') }}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_magento_available_version_list %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__available_version_list\\\">\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">1.9</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">2.0</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">2.1</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">2.2</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__last_version_box\\\">2.3</span>\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_magento_install_button_box %}\\n                                                    <div v-if=\\\"!isInstalled\\\" class=\\\"swag-migration-wizard-profile-installation__footer\\\">\\n\\n                                                        {% block swag_migration_wizard_page_profile_installation_magento_install_button_box_content %}\\n                                                            <sw-button-process\\n                                                                    class=\\\"swag-migration-wizard-profile-installation__installation_button\\\"\\n                                                                    size=\\\"small\\\"\\n                                                                    variant=\\\"primary\\\"\\n                                                                    :isLoading=\\\"pluginIsLoading\\\"\\n                                                                    :disabled=\\\"pluginIsLoading\\\"\\n                                                                    :processSuccess=\\\"pluginIsSaveSuccessful\\\"\\n                                                                    @click=\\\"onInstall\\\">\\n                                                                {{ $tc('swag-migration.wizard.pages.profileInstallation.installationButton') }}\\n                                                            </sw-button-process>\\n                                                        {% endblock %}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_magento_installed_box %}\\n                                                    <div v-else class=\\\"swag-migration-wizard-profile-installation__footer swag-migration-wizard-profile-installation__installed_box\\\">\\n\\n                                                        {% block swag_migration_wizard_page_profile_installation_magento_installed_box_content %}\\n                                                            <span class=\\\"swag-migration-wizard-profile-installation__installed_img\\\">\\n                                                                <sw-icon name=\\\"regular-check-circle-s\\\" size=\\\"16px\\\"></sw-icon>\\n                                                            </span>\\n                                                            <span class=\\\"swag-migration-wizard-profile-installation__installed_title\\\">{{ $tc('swag-migration.wizard.pages.profileInstallation.installedHint') }}</span>\\n                                                        {% endblock %}\\n                                                    </div>\\n                                                {% endblock %}\\n                                            </div>\\n                                        {% endblock %}\\n                                    </div>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-wizard-page-profile-installation.html.twig';\nimport './swag-migration-wizard-page-profile-installation.scss';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-profile-installation', {\n    template,\n\n    inject: ['storeService', 'extensionHelperService', 'cacheApiService', 'repositoryFactory'],\n\n    data() {\n        return {\n            pluginIsLoading: false,\n            pluginIsSaveSuccessful: false,\n            isInstalled: false,\n            pluginName: 'SwagMigrationMagento',\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        pluginRepository() {\n            return this.repositoryFactory.create('plugin');\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.refreshPlugin();\n        },\n\n        refreshPlugin() {\n            const pluginCriteria = new Criteria();\n            pluginCriteria.addFilter(Criteria.equals('plugin.name', this.pluginName))\n                .addFilter(Criteria.equals('plugin.active', true))\n                .setLimit(1);\n\n            return this.pluginRepository.search(pluginCriteria, Shopware.Context.api).then((result) => {\n                if (result.total < 1) {\n                    return;\n                }\n\n                this.isInstalled = true;\n            });\n        },\n\n        onInstall() {\n            this.setupPlugin();\n        },\n\n        setupPlugin() {\n            this.pluginIsLoading = true;\n            this.pluginIsSaveSuccessful = false;\n\n            return this.extensionHelperService.downloadStoreExtension(this.pluginName)\n                .then(() => {\n                    this.pluginIsSaveSuccessful = true;\n\n                    return this.extensionHelperService.installStoreExtension(this.pluginName, 'plugin');\n                })\n                .then(() => {\n                    return this.extensionHelperService.activateStoreExtension(this.pluginName, 'plugin');\n                })\n                .finally(() => {\n                    this.pluginIsLoading = false;\n                    this.cacheApiService.clear().then(() => {\n                        window.location.reload();\n                    });\n                });\n        },\n    },\n});\n","export default \"{% block swag_migration_wizard_page_select_profile %}\\n    <div class=\\\"swag-migration-wizard-page-select-profile\\\">\\n\\n        {% block swag_migration_wizard_page_select_profile_content %}\\n            <div class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_select_profile_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                        {% block swag_migration_wizard_page_select_profile_description %}\\n                            <p class=\\\"swag-migration-wizard__description\\\">\\n                                {{ $tc('swag-migration.wizard.pages.connectionSelect.contentInformation') }}\\n                            </p>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_select_profile_selection %}\\n                    <div class=\\\"swag-migration-wizard__form\\\">\\n                        <sw-select-field\\n                                         v-model:value=\\\"selectedConnectionId\\\"\\n                                         :options=\\\"connections\\\"\\n                                         :label=\\\"$tc('swag-migration.wizard.pages.connectionSelect.connectionLabel')\\\"\\n                                         :placeholder=\\\"$tc('swag-migration.wizard.pages.connectionSelect.connectionPlaceholder')\\\"\\n                                         @change=\\\"onConnectionSelected\\\"\\n                                         @update:value=\\\"onConnectionSelected\\\"\\n                        ></sw-select-field>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-wizard-page-connection-select.html.twig';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-connection-select', {\n    template,\n\n    inject: {\n        repositoryFactory: 'repositoryFactory',\n    },\n\n    props: {\n        currentConnectionId: {\n            type: String,\n            default: '',\n        },\n    },\n\n    data() {\n        return {\n            selectedConnectionId: null,\n            connections: [],\n            context: Shopware.Context.api,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        migrationConnectionRepository() {\n            return this.repositoryFactory.create('swag_migration_connection');\n        },\n    },\n\n    watch: {\n        currentConnectionId: {\n            immediate: true,\n            handler(newConnectionId) {\n                this.selectedConnectionId = newConnectionId;\n                this.onConnectionSelected();\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.$emit('onChildRouteReadyChanged', false);\n            const criteria = new Criteria(1, 100);\n\n            return this.migrationConnectionRepository.search(criteria, this.context).then((items) => {\n                this.connections = items;\n                this.onConnectionSelected();\n            });\n        },\n\n        onConnectionSelected() {\n            const connection = this.connections.find((con) => {\n                return con.id === this.selectedConnectionId;\n            });\n\n            if (connection) {\n                this.$emit('onChildRouteReadyChanged', true);\n                this.$emit('onConnectionSelected', connection);\n            } else {\n                this.$emit('onChildRouteReadyChanged', false);\n            }\n        },\n    },\n});\n","export default \"{% block swag_migration_wizard_page_create_profile %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-create-profile\\\"\\n         @keypress.enter=\\\"onKeyPressEnter\\\">\\n\\n        {% block swag_migration_wizard_page_create_profile_content %}\\n            <div v-if=\\\"!isLoading\\\" class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_create_profile_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                        {% block swag_migration_wizard_page_create_profile_content_information %}\\n                            <p class=\\\"swag-migration-wizard__description\\\">\\n                                {{ $tc('swag-migration.wizard.pages.connectionCreate.contentInformation') }}\\n                            </p>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_create_profile_selection %}\\n                    <div class=\\\"swag-migration-wizard__form\\\">\\n                        <sw-text-field v-autofocus\\n                                       v-model:value=\\\"selection.connectionName\\\"\\n                                       :label=\\\"$tc('swag-migration.wizard.pages.connectionCreate.connectionLabel')\\\"\\n                                       :placeholder=\\\"$tc('swag-migration.wizard.pages.connectionCreate.connectionPlaceholder')\\\"\\n                                       validation=\\\"required\\\"\\n                                       :helpText=\\\"$tc('swag-migration.wizard.pages.connectionCreate.connectionTooltip')\\\"\\n                                       :error=\\\"connectionNameError\\\"\\n                                       @update:value=\\\"onChangeConnectionName\\\"\\n                        >\\n                        </sw-text-field>\\n\\n                        <sw-single-select :label=\\\"$tc('swag-migration.wizard.pages.connectionCreate.profileLabel')\\\"\\n                                          :placeholder=\\\"$tc('swag-migration.wizard.pages.connectionCreate.profilePlaceholder')\\\"\\n                                          :popoverClasses=\\\"['swag-migration-wizard-page-create-profile']\\\"\\n                                          :popoverConfig=\\\"{active: true, resizeWidth: true, style: { zIndex: 1000, marginLeft: '8px' }}\\\"\\n                                          :options=\\\"profiles\\\"\\n                                          v-model:value=\\\"selection.profile\\\"\\n                                          valueProperty=\\\"name\\\"\\n                                          :searchFunction=\\\"profileSearch\\\"\\n                                          validation=\\\"required\\\"\\n                                          @update:value=\\\"onSelectProfile\\\"\\n                        >\\n\\n                            {% block swag_migration_wizard_page_create_profile_form_profile_field_options %}\\n                                <template #selection-label-property=\\\"{ item: singleSelection, labelProperty, valueProperty, searchTerm, getKey }\\\">\\n                                    <span v-html=\\\"getText(singleSelection)\\\"></span>\\n                                </template>\\n\\n                                <template #result-label-property=\\\"{ item, index, labelProperty, valueProperty, searchTerm, highlightSearchTerm, getKey }\\\">\\n                                    <div v-if=\\\"item.name === 'profileLink'\\\" class=\\\"swag-migration-wizard-create-connection__install-profile-link-wrapper\\\">\\n                                        <div>\\n                                            {{ $tc('swag-migration.wizard.pages.connectionCreate.profileInstall') }}\\n                                        </div>\\n                                        <div>\\n                                            <sw-icon name=\\\"regular-chevron-right-xs\\\" size=\\\"16\\\"></sw-icon>\\n                                        </div>\\n                                    </div>\\n                                    <span v-else v-html=\\\"getText(item)\\\"></span>\\n                                </template>\\n                            {% endblock %}\\n                        </sw-single-select>\\n\\n                        <sw-single-select :label=\\\"$tc('swag-migration.wizard.pages.connectionCreate.gatewayLabel')\\\"\\n                                          :placeholder=\\\"$tc('swag-migration.wizard.pages.connectionCreate.gatewayPlaceholder')\\\"\\n                                          :helpText=\\\"$tc('swag-migration.wizard.pages.connectionCreate.gatewayTooltip')\\\"\\n                                          :popoverClasses=\\\"['swag-migration-wizard-page-create-profile']\\\"\\n                                          :popoverConfig=\\\"{active: true, resizeWidth: true, style: { zIndex: 1000, marginLeft: '8px' }}\\\"\\n                                          :options=\\\"gateways\\\"\\n                                          v-model:value=\\\"selection.gateway\\\"\\n                                          valueProperty=\\\"name\\\"\\n                                          :searchFunction=\\\"gatewaySearch\\\"\\n                                          validation=\\\"required\\\"\\n                                          @update:value=\\\"onSelectGateway\\\">\\n\\n                            {% block swag_migration_wizard_page_create_profile_form_gateway_field_options %}\\n                                <template #selection-label-property=\\\"{ item: singleSelection, labelProperty, valueProperty, searchTerm, getKey }\\\">\\n                                    {{ $tc(singleSelection.snippet) }}\\n                                </template>\\n\\n                                <template #result-label-property=\\\"{ item, index, labelProperty, valueProperty, searchTerm, highlightSearchTerm, getKey }\\\">\\n                                    {{ $tc(item.snippet) }}\\n                                </template>\\n                            {% endblock %}\\n                        </sw-single-select>\\n\\n                        <sw-alert v-if=\\\"profileHint\\\">\\n                            {{ profileHint }}\\n                        </sw-alert>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-wizard-page-connection-create.html.twig';\nimport './swag-migration-wizard-page-connection-create.scss';\n\nconst { Component } = Shopware;\nconst ShopwareError = Shopware.Classes.ShopwareError;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-connection-create', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n    },\n\n    props: {\n        connectionNameErrorCode: {\n            type: String,\n            default: '',\n            required: false,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: true,\n            selection: {\n                profile: null,\n                gateway: null,\n                connectionName: null,\n            },\n            profiles: [],\n            gateways: [],\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        isReady() {\n            return (\n                this.selection.profile !== null &&\n                this.selection.gateway !== null &&\n                this.selection.connectionName !== null &&\n                this.selection.connectionName.length > 5\n            );\n        },\n\n        connectionNameError() {\n            if (this.connectionNameErrorCode === '') {\n                return null;\n            }\n\n            return new ShopwareError({\n                code: this.connectionNameErrorCode,\n            });\n        },\n\n        profileHint() {\n            if (!this.selection.gateway) {\n                return '';\n            }\n\n            const snippet = `swag-migration.wizard.pages.connectionCreate.hint.${this.selection.gateway}`;\n            if (this.$tc(snippet) !== `swag-migration.wizard.pages.connectionCreate.hint.${this.selection.gateway}`) {\n                return this.$tc(snippet);\n            }\n\n            return '';\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.setIsLoading(true);\n            this.emitOnChildRouteReadyChanged(false);\n\n            return this.migrationService.getProfiles().then((profiles) => {\n                this.profiles = profiles;\n                this.pushLinkToProfiles();\n\n                this.selectDefaultProfile();\n                this.setIsLoading(false);\n            });\n        },\n\n        pushLinkToProfiles() {\n            this.profiles.push({\n                name: 'profileLink',\n            });\n        },\n\n        profileSearch(searchParams) {\n            const searchTerm = searchParams.searchTerm;\n            return searchParams.options.filter(option => {\n                const label = `${option.sourceSystemName} ${option.version} - ${option.author}`;\n                return label.toLowerCase().includes(searchTerm.toLowerCase());\n            });\n        },\n\n        gatewaySearch(searchParams) {\n            const searchTerm = searchParams.searchTerm;\n            return searchParams.options.filter(option => {\n                const label = this.$tc(option.snippet);\n                return label.toLowerCase().includes(searchTerm.toLowerCase());\n            });\n        },\n\n        getText(item) {\n            return `${item.sourceSystemName} ${item.version} - <i>${item.author}</i>`;\n        },\n\n        selectDefaultProfile() {\n            this.onSelectProfile('shopware55').then(() => {\n                this.onSelectGateway('api');\n            });\n        },\n\n        setIsLoading(value) {\n            this.isLoading = value;\n            this.$emit('onIsLoadingChanged', this.isLoading);\n        },\n\n        onSelectProfile(value) {\n            if (this.selection.profile === value || value === null || value === undefined) {\n                return Promise.resolve();\n            }\n\n            if (value === 'profileLink') {\n                this.$router.push({ name: 'swag.migration.wizard.profileInstallation' });\n                return Promise.resolve();\n            }\n\n            this.selection.profile = value;\n\n            return new Promise((resolve) => {\n                this.emitOnChildRouteReadyChanged(false);\n                this.gateways = [];\n                this.selection.gateway = null;\n\n                if (this.selection.profile !== null) {\n                    this.migrationService.getGateways(this.selection.profile).then((gateways) => {\n                        this.gateways = gateways;\n                        this.selection.gateway = null;\n\n                        if (this.gateways.length === 1) {\n                            this.$nextTick(() => {\n                                this.selection.gateway = this.gateways[0].name;\n                                this.emitOnChildRouteReadyChanged(this.isReady);\n                            });\n                        }\n\n                        this.emitOnChildRouteReadyChanged(this.isReady);\n                        resolve();\n                    });\n                }\n            });\n        },\n\n        onSelectGateway(value) {\n            if (value !== null && value !== undefined) {\n                this.selection.gateway = value;\n            }\n\n            this.emitOnChildRouteReadyChanged(false);\n            this.$emit('onProfileSelected', this.selection);\n            this.emitOnChildRouteReadyChanged(this.isReady);\n        },\n\n        onChangeConnectionName(value) {\n            this.$emit('onChangeConnectionName', value);\n            this.emitOnChildRouteReadyChanged(this.isReady);\n        },\n\n        emitOnChildRouteReadyChanged(isReady) {\n            this.$emit('onChildRouteReadyChanged', isReady);\n        },\n\n        onKeyPressEnter() {\n            this.$emit('onTriggerPrimaryClick');\n        },\n    },\n});\n","export default \"{% block swag_migration_wizard_page_profile_information %}\\n    <div>\\n\\n        {% block swag_migration_wizard_page_profile_information_component %}\\n            <component v-if=\\\"profileInformationComponent !== '' && componentIsLoaded\\\"\\n                       :is=\\\"profileInformationComponent\\\">\\n            </component>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","import template from './swag-migration-wizard-page-profile-information.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-profile-information', {\n    template,\n\n    props: {\n        profileInformationComponent: {\n            type: String,\n            default: '',\n        },\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        componentIsLoaded() {\n            return Component.getComponentRegistry().has(this.profileInformationComponent);\n        },\n    },\n});\n","export default \"{% block swag_migration_wizard_page_credentials %}\\n    <div class=\\\"swag-migration-wizard-page-credentials\\\">\\n\\n        {% block swag_migration_wizard_page_credentials_forms %}\\n            <component v-if=\\\"credentialsComponent !== '' && componentIsLoaded\\\"\\n                       :is=\\\"credentialsComponent\\\"\\n                       :credentials=\\\"credentials\\\"\\n                       @onCredentialsChanged=\\\"$emit('onCredentialsChanged', $event)\\\"\\n                       @onChildRouteReadyChanged=\\\"$emit('onChildRouteReadyChanged', $event)\\\"\\n                       @onTriggerPrimaryClick=\\\"$emit('onTriggerPrimaryClick')\\\">\\n            </component>\\n        {% endblock %}\\n\\n        {% block swag_migration_wizard_page_credentials_no_form_found %}\\n            <template v-else class=\\\"swag-migration-wizard-page-credentials__empty_state\\\">\\n\\n                {% block swag_migration_wizard_page_credentials_no_form_found_content %}\\n                    <p class=\\\"swag-migration-wizard__emptyStateDescription\\\">\\n                        {{ $tc('swag-migration.wizard.pages.credentials.emptyState') }}\\n                    </p>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","import template from './swag-migration-wizard-page-credentials.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-credentials', {\n    template,\n\n    props: {\n        credentialsComponent: {\n            type: String,\n            default: '',\n        },\n\n        credentials: {\n            type: Object,\n            default() {\n                return {};\n            },\n        },\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        componentIsLoaded() {\n            return Component.getComponentRegistry().has(this.credentialsComponent);\n        },\n    },\n});\n","import template from './swag-migration-wizard-page-credentials-success.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-credentials-success', {\n    template,\n\n    props: {\n        errorMessageSnippet: {\n            type: String,\n            default: '',\n            required: false,\n        },\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n});\n","export default \"{% block swag_migration_wizard_page_credentials_success %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-credentials-success\\\">\\n\\n        {% block swag_migration_wizard_page_success_error_alert %}\\n            <sw-alert v-if=\\\"errorMessageSnippet !== ''\\\"\\n                      class=\\\"swag-migration-wizard-page-credentials-success__alert\\\"\\n                      id=\\\"alert-error-message\\\"\\n                      variant=\\\"warning\\\">\\n                {{ $tc(errorMessageSnippet) }}\\n            </sw-alert>\\n        {% endblock %}\\n\\n        {% block swag_migration_wizard_page_credentials_success_content %}\\n            <div class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_credentials_success_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                        {% block swag_migration_wizard_page_credentials_success_bubble %}\\n                            <div v-if=\\\"errorMessageSnippet === ''\\\"\\n                                 class=\\\"swag-migration-wizard__bubble swag-migration-wizard__bubble--success\\\">\\n                                <sw-icon class=\\\"swag-migration-wizard__success-icon\\\"\\n                                         name=\\\"regular-thumbs-up\\\"\\n                                         size=\\\"36px\\\"\\n                                         decorative>\\n                                </sw-icon>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_credentials_success_title %}\\n                            <h3 class=\\\"swag-migration-wizard__information-header\\\">\\n                                {{ $tc('swag-migration.wizard.pages.credentials.success.contentTitle') }}\\n                            </h3>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_credentials_success_api_hint %}\\n                            {{ $tc('swag-migration.wizard.pages.credentials.success.contentInformation') }}\\n                        {% endblock %}\\n\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-wizard-page-credentials-error.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-credentials-error', {\n    template,\n\n    props: {\n        errorMessageSnippet: {\n            type: String,\n            default: '',\n            required: false,\n        },\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n});\n","export default \"{% block swag_migration_wizard_page_credentials_error %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-credentials-error\\\">\\n\\n        {% block swag_migration_wizard_page_credentials_error_content %}\\n        <div class=\\\"swag-migration-wizard__content\\\">\\n\\n            {% block swag_migration_wizard_page_credentials_error_information %}\\n            <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                {% block swag_migration_wizard_page_credentials_success_bubble %}\\n                    <div class=\\\"swag-migration-wizard__bubble swag-migration-wizard__bubble--warning\\\">\\n                        <sw-icon class=\\\"swag-migration-wizard__warning-icon\\\"\\n                                 name=\\\"regular-exclamation-triangle\\\"\\n                                 size=\\\"36px\\\"\\n                                 decorative>\\n                        </sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_credentials_error_title %}\\n                    <h3 class=\\\"swag-migration-wizard__information-header\\\">\\n                        {{ $tc('swag-migration.wizard.pages.credentials.error.contentTitle') }}\\n                    </h3>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_credentials_error_api_hint %}\\n                    <template v-if=\\\"errorMessageSnippet !== ''\\\">\\n                        <p class=\\\"swag-migration-wizard__description\\\">\\n                            {{ $tc(errorMessageSnippet) }}\\n                        </p>\\n                    </template>\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","export default \"{% block sw_dashboard_index_content_intro_card %}\\n    {% parent %}\\n\\n    {%  block swag_migration_dashboard_card %}\\n\\n        {% block sw_dashboard_index_content_migration_card %}\\n            <swag-migration-dashboard-card v-if=\\\"acl.isAdmin()\\\"></swag-migration-dashboard-card>\\n        {% endblock %}\\n    {% endblock %}\\n{% endblock %}\\n\";","import template from './sw-dashboard-index.html.twig';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package services-settings\n */\nComponent.override('sw-dashboard-index', {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    data() {\n        return {\n            context: Shopware.Context.api,\n            runExists: false,\n            loading: true,\n            run: {},\n        };\n    },\n\n    computed: {\n        migrationRunRepository() {\n            return this.repositoryFactory.create('swag_migration_run');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.$super('createdComponent');\n\n            if (!this.acl.isAdmin()) {\n                return new Promise((resolve) => { resolve(); });\n            }\n\n            return this.migrationRunRepository.search(new Criteria(), this.context).then((items) => {\n                this.runExists = items.length > 0;\n\n                if (this.runExists) {\n                    this.run = items[0];\n                }\n\n                this.loading = false;\n            });\n        },\n    },\n});\n","/**\n * @type MIGRATION_STATUS\n */\nimport { MIGRATION_STATUS } from '../service/migration/swag-migration-worker-status-manager.service';\n\n/**\n * The vuex store for handling all global data that is needed for the migration process.\n * @module\n * @package services-settings\n */\nexport default {\n    namespaced: true,\n\n    state: {\n        /**\n         * The id of the currently selected connection to a source system.\n         */\n        connectionId: null,\n\n        /**\n         * The environment information of the connection check.\n         */\n        environmentInformation: {},\n\n        /**\n         * The id of the current migration run.\n         */\n        runId: null,\n\n        /**\n         * Is the migration currently running.\n         */\n        isMigrating: false,\n\n        /**\n         * The entity groups are generated in the backend depending on the selected data to migrate and contain entities.\n         * They are used for the requests to the backend and\n         * every entity in every group will be used for the fetch, write and download requests.\n         * During a migration their value can change multiple times\n         * (e.g. a state change from write to download).\n         * In general, they represent the progress and current status of the migration.\n         */\n        entityGroups: [],\n\n        /**\n         * Id of the entity group that is currently being processed.\n         */\n        currentEntityGroupId: '',\n\n        /**\n         * The current status of the migration.\n         * Each migration runs through different states (e.g. premapping, fetch, write, download)\n         */\n        statusIndex: MIGRATION_STATUS.WAITING,\n    },\n\n    mutations: {\n        setConnectionId(state, id) {\n            state.connectionId = id;\n        },\n\n        setEnvironmentInformation(state, environmentInformation) {\n            state.environmentInformation = environmentInformation;\n        },\n\n        setRunId(state, runId) {\n            state.runId = runId;\n        },\n\n        setIsMigrating(state, isMigrating) {\n            state.isMigrating = isMigrating;\n        },\n\n        setStatusIndex(state, newIndex) {\n            state.statusIndex = newIndex;\n        },\n\n        setCurrentEntityGroupId(state, newId) {\n            state.currentEntityGroupId = newId;\n        },\n\n        setEntityGroups(state, entityGroups) {\n            state.entityGroups = entityGroups;\n        },\n\n        setEntityProgress(state, { groupId, groupCurrentCount, groupTotal }) {\n            const targetGroup = state.entityGroups.find(group => group.id === groupId);\n\n            if (targetGroup === undefined) {\n                return;\n            }\n\n            if (targetGroup.total !== groupTotal) {\n                targetGroup.total = groupTotal;\n            }\n\n            targetGroup.currentCount = groupCurrentCount;\n            this.state.currentEntityGroupId = targetGroup.id;\n        },\n\n        resetProgress(state) {\n            state.entityGroups.forEach((data) => {\n                data.currentCount = 0;\n            });\n        },\n    },\n\n    getters: {\n        displayEntityGroups(state) {\n            if (state.statusIndex === MIGRATION_STATUS.PROCESS_MEDIA_FILES) {\n                return state.entityGroups.filter((group) => {\n                    return group.id === 'processMediaFiles';\n                });\n            }\n\n            return state.entityGroups.filter((group) => {\n                return group.id !== 'processMediaFiles';\n            });\n        },\n    },\n};\n","import './mixin';\nimport './component';\nimport './page';\nimport './extension/sw-dashboard-index';\nimport './profile';\nimport MigrationProcessStore from '../../core/data/migrationProcess.store';\nimport MigrationUIStore from '../../core/data/migrationUI.store';\n\nconst { Module, State } = Shopware;\n\nState.registerModule('swagMigration/process', MigrationProcessStore);\nState.registerModule('swagMigration/ui', MigrationUIStore);\n\n/**\n * @package services-settings\n */\nModule.register('swag-migration', {\n    type: 'plugin',\n    name: 'swag-migration',\n    title: 'swag-migration.general.mainMenuItemGeneral',\n    description: 'swag-migration.general.descriptionTextModule',\n    version: '0.9.0',\n    targetVersion: '0.9.0',\n    color: '#9AA8B5',\n    icon: 'regular-cog',\n\n    routes: {\n        emptyScreen: {\n            component: 'swag-migration-empty-screen',\n            path: 'empty',\n            meta: {\n                parentPath: 'sw.settings.index',\n                privilege: 'admin',\n            },\n        },\n        index: {\n            component: 'swag-migration-index',\n            path: 'index',\n            meta: {\n                parentPath: 'sw.settings.index',\n            },\n            redirect: { name: 'swag.migration.index.main' },\n            children: {\n                main: {\n                    path: 'main',\n                    component: 'swag-migration-main-page',\n                    meta: {\n                        parentPath: 'sw.settings.index',\n                        resetMigration: false,\n                        privilege: 'admin',\n                    },\n                },\n                resetMigration: {\n                    path: 'reset-migration',\n                    component: 'swag-migration-main-page',\n                    meta: {\n                        parentPath: 'sw.settings.index',\n                        resetMigration: true,\n                        privilege: 'admin',\n                    },\n                },\n                history: {\n                    path: 'history',\n                    component: 'swag-migration-history',\n                    children: {\n                        detail: {\n                            path: 'detail/:id',\n                            component: 'swag-migration-history-detail',\n                            meta: {\n                                parentPath: 'sw.settings.index',\n                                privilege: 'admin',\n                            },\n                        },\n                    },\n                    meta: {\n                        parentPath: 'sw.settings.index',\n                        privilege: 'admin',\n                    },\n                },\n                dataSelector: {\n                    path: 'dataSelector',\n                    component: 'swag-migration-data-selector',\n                    meta: {\n                        parentPath: 'sw.settings.index',\n                        privilege: 'admin',\n                    },\n                },\n            },\n        },\n        processScreen: {\n            path: 'processScreen',\n            component: 'swag-migration-process-screen',\n            meta: {\n                parentPath: 'sw.settings.index',\n                privilege: 'admin',\n            },\n        },\n        wizard: {\n            component: 'swag-migration-wizard',\n            path: 'wizard',\n            redirect: { name: 'swag.migration.wizard.introduction' },\n            children: {\n                introduction: {\n                    path: 'introduction',\n                    component: 'swag-migration-wizard-page-introduction',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                profileInstallation: {\n                    path: 'profile/installation',\n                    component: 'swag-migration-wizard-page-profile-installation',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                connectionCreate: {\n                    path: 'connection/create',\n                    component: 'swag-migration-wizard-page-connection-create',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                connectionSelect: {\n                    path: 'connection/select',\n                    component: 'swag-migration-wizard-page-connection-select',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                profileInformation: {\n                    path: 'profile/information',\n                    component: 'swag-migration-wizard-page-profile-information',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                credentials: {\n                    path: 'credentials',\n                    component: 'swag-migration-wizard-page-credentials',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                credentialsSuccess: {\n                    path: 'credentials/success',\n                    component: 'swag-migration-wizard-page-credentials-success',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                credentialsError: {\n                    path: 'credentials/error',\n                    component: 'swag-migration-wizard-page-credentials-error',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n            },\n            meta: {\n                privilege: 'admin',\n            },\n        },\n    },\n\n    settingsItem: {\n        group: 'plugins',\n        to: 'swag.migration.index',\n        iconComponent: 'swag-migration-settings-icon',\n        privilege: 'admin',\n    },\n});\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * @package services-settings\n */\nclass MigrationApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'migration') {\n        super(httpClient, loginService, apiEndpoint);\n        this.basicConfig = {\n            timeout: 30000,\n            version: Shopware.Context.api.apiVersion,\n        };\n    }\n\n    updateConnectionCredentials(connectionId, credentialFields, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/update-connection-credentials`, {\n            connectionId,\n            credentialFields,\n        }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    checkConnection(connectionId, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/check-connection`, { connectionId }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getDataSelection(connectionId, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.get(`_action/${this.getApiBasePath()}/data-selection`, {\n            ...this.basicConfig,\n            params: {\n                connectionId,\n            },\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    createMigration(connectionId, dataSelectionIds) {\n        const params = {\n            connectionId,\n            dataSelectionIds,\n        };\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/create-migration`, params, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    fetchData(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/fetch-data`, params, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    updateWriteProgress(runUuid, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/update-write-progress`, {\n            runUuid,\n        }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    updateMediaFilesProgress(runUuid, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/update-media-files-progress`, {\n            runUuid,\n        }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    writeData(additionalParams = {}, additionalHeaders = { }) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/write-data`, params, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    processMedia(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/process-media`, params, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getState(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/get-state`, params, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    takeoverMigration(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/takeover-migration`, { runUuid }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    abortMigration(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/abort-migration`, { runUuid }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    finishMigration(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/finish-migration`, { runUuid }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    assignThemes(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/assign-themes`, { runUuid }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    generatePremapping(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/generate-premapping`, { runUuid }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    writePremapping(runUuid, premapping) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/write-premapping`, { runUuid, premapping }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getProfiles() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.get(`_action/${this.getApiBasePath()}/get-profiles`, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getGateways(profileName) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.get(`_action/${this.getApiBasePath()}/get-gateways`, {\n            ...this.basicConfig,\n            params: {\n                profileName,\n            },\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getProfileInformation(profileName, gatewayName) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.get(`_action/${this.getApiBasePath()}/get-profile-information`, {\n            ...this.basicConfig,\n            params: {\n                profileName,\n                gatewayName,\n            },\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getGroupedLogsOfRun(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.get(`${this.getApiBasePath()}/get-grouped-logs-of-run`, {\n            ...this.basicConfig,\n            params: {\n                runUuid,\n            },\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    clearDataOfRun(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/clear-data-of-run`, {\n            runUuid,\n        }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    resetChecksums(connectionId, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/reset-checksums`, {\n            connectionId,\n        }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    indexing(additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n        return this.httpClient.post('_action/index', {\n            ...this.basicConfig,\n            headers,\n        });\n    }\n\n    cleanupMigrationData(additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/cleanup-migration-data`, {\n            ...this.basicConfig,\n            headers,\n        });\n    }\n\n    isMediaProcessing(additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n        return this.httpClient.get(`_action/${this.getApiBasePath()}/is-media-processing`, {\n            ...this.basicConfig,\n            headers,\n        });\n    }\n}\n\nexport default MigrationApiService;\n","const { State } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package services-settings\n */\nclass ProcessStoreInitService {\n    constructor(migrationService, repositoryFactory, context) {\n        this._migrationService = migrationService;\n        this._migrationGeneralSettingRepository = repositoryFactory.create('swag_migration_general_setting');\n        this._context = context;\n    }\n\n    initProcessStore() {\n        return new Promise((resolve, reject) => {\n            State.commit('swagMigration/process/setEntityGroups', []);\n            State.commit('swagMigration/process/setEnvironmentInformation', {});\n            const criteria = new Criteria(1, 1);\n\n            this._migrationGeneralSettingRepository.search(criteria, this._context).then((settings) => {\n                if (settings.length === 0) {\n                    reject();\n                    return null;\n                }\n\n                const connectionId = settings.first().selectedConnectionId;\n\n                if (connectionId === null) {\n                    reject();\n                    return null;\n                }\n\n                State.commit('swagMigration/process/setConnectionId', connectionId);\n                return connectionId;\n            }).then((connectionId) => {\n                if (connectionId === null) {\n                    reject();\n                    return;\n                }\n\n                this._migrationService.checkConnection(connectionId)\n                    .then((connectionCheckResponse) => {\n                        State.commit('swagMigration/process/setEnvironmentInformation', connectionCheckResponse);\n                        resolve();\n                    }).catch(() => {\n                        reject();\n                    });\n            }).catch(() => {\n                reject();\n            });\n        });\n    }\n}\n\nexport default ProcessStoreInitService;\n","const { State } = Shopware;\n\n/**\n * @package services-settings\n */\nclass UiStoreInitService {\n    constructor(migrationService) {\n        this._migrationService = migrationService;\n        this._migrationProcessState = State.get('swagMigration/process');\n    }\n\n    initUiStore() {\n        return new Promise((resolve, reject) => {\n            const connectionId = this._migrationProcessState.connectionId;\n\n            if (connectionId === undefined) {\n                resolve();\n                return;\n            }\n\n            this._migrationService.getDataSelection(connectionId).then((dataSelection) => {\n                State.commit('swagMigration/ui/setPremapping', []);\n                State.commit('swagMigration/ui/setDataSelectionTableData', dataSelection);\n                const selectedIds = dataSelection.filter(selection => selection.requiredSelection)\n                    .map(selection => selection.id);\n                State.commit('swagMigration/ui/setDataSelectionIds', selectedIds);\n                resolve();\n            }).catch(() => {\n                reject();\n            });\n        });\n    }\n}\n\nexport default UiStoreInitService;\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * @package services-settings\n */\nclass MigrationIndexingApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'migration') {\n        super(httpClient, loginService, apiEndpoint);\n        this.basicConfig = {\n            timeout: 30000,\n        };\n    }\n\n    indexing(lastIndexer = null, offset = null, timestamp = null, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        const params = {};\n        if (lastIndexer !== null && lastIndexer !== undefined) {\n            params.lastIndexer = lastIndexer;\n        }\n        if (offset !== null && offset !== undefined) {\n            params.offset = offset;\n        }\n        if (timestamp !== null && timestamp !== undefined) {\n            params.timestamp = timestamp;\n        }\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/indexing`, params, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default MigrationIndexingApiService;\n","import MigrationApiService from '../core/service/api/swag-migration.api.service';\nimport ProcessStoreInitService from '../core/service/migration/swag-migration-process-store-init.service';\nimport UiStoreInitService from '../core/service/migration/swag-migration-ui-store-init.service';\nimport MigrationIndexingApiService from '../core/service/api/swag-migration-indexing.api.service';\n\nconst { Application } = Shopware;\n\nApplication.addServiceProvider('migrationService', (container) => {\n    const initContainer = Application.getContainer('init');\n    return new MigrationApiService(initContainer.httpClient, container.loginService);\n});\n\nApplication.addServiceProvider('processStoreInitService', (container) => {\n    return new ProcessStoreInitService(\n        container.migrationService,\n        container.repositoryFactory,\n        Shopware.Context.api,\n    );\n});\n\nApplication.addServiceProvider('uiStoreInitService', (container) => {\n    return new UiStoreInitService(container.migrationService);\n});\n\nApplication.addServiceProvider('migrationIndexingApiService', (container) => {\n    const initContainer = Application.getContainer('init');\n    return new MigrationIndexingApiService(initContainer.httpClient, container.loginService);\n});\n","/**\n * @package services-settings\n */\nclass MigrationIndexingWorker {\n    /**\n     * @param {MigrationIndexingApiService} indexingApiService\n     */\n    constructor(indexingApiService) {\n        this._indexingApiService = indexingApiService;\n    }\n\n    start() {\n        return new Promise(async (resolve) => {\n            let running = true;\n            let lastResult = {};\n            while (running) {\n                // eslint-disable-next-line no-await-in-loop\n                await this._indexingApiService.indexing(\n                    lastResult.lastIndexer,\n                    lastResult.offset,\n                    lastResult.timestamp,\n                    // eslint-disable-next-line no-loop-func\n                ).then((result) => {\n                    if (result.done !== undefined && result.done === true) {\n                        running = false;\n                        return;\n                    }\n\n                    lastResult = result;\n                });\n            }\n            resolve();\n        });\n    }\n}\n\nexport default MigrationIndexingWorker;\n","import MigrationWorkerService from '../core/service/migration/swag-migration-worker.service';\nimport MigrationIndexingWorker from '../core/service/migration/swag-migration-indexing-worker.service';\n\nconst { Application } = Shopware;\n\nApplication.addServiceProvider('migrationWorkerService', (container) => {\n    return new MigrationWorkerService(\n        container.migrationService,\n        container.migrationIndexingWorkerService,\n    );\n});\n\nApplication.addServiceProvider('migrationIndexingWorkerService', (container) => {\n    return new MigrationIndexingWorker(\n        container.migrationIndexingApiService,\n    );\n});\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware57-api-page-information',\n    'swag-migration-profile-shopware-api-page-information',\n    {},\n);\n","const { Mixin } = Shopware;\nconst { debug } = Shopware.Utils;\n\n/**\n * Mixin for the navigation logic inside a wizard.\n * See swag-migration-wizard as an example.\n *\n * @package services-settings\n */\nMixin.register('swag-wizard', {\n    inject: [\n        'feature'\n    ],\n    data() {\n        return {\n            routes: {},\n            /* Example routes\n            routes: {\n                introduction: {\n                    name: 'swag.migration.wizard.introduction',\n                    index: 0 // the index defines the order of the navigation (it can be changed a runtime)\n                },\n                profile: {\n                    name: 'swag.migration.wizard.profile',\n                    index: 1\n                },\n                profileCreate: {\n                    name: 'swag.migration.wizard.profileCreate',\n                    index: 1.1 // not available through nextRoute (child from profile)\n                },\n                profileSelect: {\n                    name: 'swag.migration.wizard.profileSelect',\n                    index: 1.1 // not available through nextRoute (child from profile)\n                },\n                profileInformation: {\n                    name: 'swag.migration.wizard.profileInformation',\n                    index: 2\n                }\n            } */\n            currentRoute: {\n                name: '',\n                index: 0,\n            },\n        };\n    },\n\n    computed: {\n        /**\n         * Current route index (wizard step).\n         * This does not include child routes like 5.1\n         *\n         * @returns {number}\n         */\n        routeIndex() {\n            return Math.floor(this.currentRoute.index);\n        },\n\n        /**\n         * Get the number of steps that the wizard runs through.\n         * This includes all routes except for the child routes like 5.1\n         *\n         * @returns {number}\n         */\n        routeCount() {\n            const routeIndices = [];\n            Object.keys(this.routes).forEach((routeIndex) => {\n                if (!routeIndices.includes(Math.floor(this.routes[routeIndex].index))) {\n                    routeIndices.push(Math.floor(this.routes[routeIndex].index));\n                }\n            });\n\n            return routeIndices.length;\n        },\n\n        /**\n         * Returns the previous route (next round number that is smaller than the current index).\n         * If the user is on a child route for example 5.1 it will return the route with index of 5.\n         *\n         * @returns {Object|boolean<false>}\n         */\n        routePrevious() {\n            let previousRoute;\n\n            Object.keys(this.routes).forEach((route) => {\n                if (this.routes[route].index < this.currentRoute.index) {\n                    if (previousRoute === undefined ||\n                        Math.floor(this.routes[route].index) > previousRoute.index\n                    ) {\n                        previousRoute = this.routes[route];\n                    }\n                }\n            });\n\n            return previousRoute !== undefined ? previousRoute : false;\n        },\n\n        /**\n         * Returns the next route (next round number that is bigger than the current index).\n         * (except for child routes which are excluded like 5.1).\n         *\n         * @returns {Object|boolean<false>}\n         */\n        routeNext() {\n            let nextRoute;\n            Object.keys(this.routes).forEach((route) => {\n                if (Math.floor(this.routes[route].index) > this.routeIndex) {\n                    if (nextRoute === undefined ||\n                        Math.floor(this.routes[route].index) < nextRoute.index\n                    ) {\n                        nextRoute = this.routes[route];\n                    }\n                }\n            });\n\n            return nextRoute !== undefined ? nextRoute : false;\n        },\n\n        /**\n         * Checks if there is a previous route we can navigate to.\n         *\n         * @returns {boolean}\n         */\n        navigateToPreviousPossible() {\n            return this.routePrevious !== false;\n        },\n\n        /**\n         * Checks if there is a next route we can navigate to.\n         *\n         * @returns {boolean}\n         */\n        navigateToNextPossible() {\n            return this.routeNext !== false;\n        },\n    },\n\n    /**\n     * Match the current route when the component gets created.\n     */\n    created() {\n        // don't trigger the callback when the wizard is created.\n        // but set the right current route.\n        this.matchCurrentRoute(false);\n    },\n\n    updated() {\n        this.matchCurrentRoute(true);\n    },\n\n    methods: {\n        /**\n         * Logic for matching the current route.\n         * It searches for the route inside this.routes.\n         */\n        matchCurrentRoute(notifyCallback = true) {\n            const routerCurrentRoute = this.$router.currentRoute.value;\n\n            // check for current child route\n            let currentRoute;\n            const currentRouteFound = Object.keys(this.routes).some((routeIndex) => {\n                if (this.routes[routeIndex].name === routerCurrentRoute.name) {\n                    currentRoute = this.routes[routeIndex];\n                    return true;\n                }\n\n                return false;\n            });\n\n            if (currentRouteFound) {\n                this.currentRoute = currentRoute;\n                if (notifyCallback) {\n                    this.onChildRouteChanged();\n                }\n            }\n        },\n\n        /**\n         * Gets called when a route change has happened. This is useful to update texts inside the modal but\n         * outside of the router view (for example headlines, buttons, ...)\n         * Note: does not get called on created (to allow loading things from the api first)\n         */\n        onChildRouteChanged() {\n            debug.warn(\n                'swag-wizard Mixin',\n                'When using the wizard mixin you have to implement your custom \"onChildRouteChanged()\" method.',\n            );\n        },\n\n        /**\n         * Navigate to the specified route. You can get the route from this.routes\n         *\n         * @param {Object} route\n         */\n        navigateToRoute(route) {\n            this.$router.push({ name: route.name }).catch((error) => {\n                console.info(error.message)\n            });\n        },\n\n        /**\n         * Navigate to the previous route inside this.routes.\n         * It will skip route child indices like '3.1'\n         * It will return false if there is nothing to navigate to.\n         *\n         * @returns {boolean}\n         */\n        navigateToPrevious() {\n            if (this.navigateToPreviousPossible) {\n                this.navigateToRoute(this.routePrevious);\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Navigate to the next route inside this.routes.\n         * It will skip route child indices like '3.1'.\n         * It will return false if there is nothing to navigate to.\n         *\n         * @returns {boolean}\n         */\n        navigateToNext() {\n            if (this.navigateToNextPossible) {\n                this.navigateToRoute(this.routeNext);\n                return true;\n            }\n\n            return false;\n        },\n    },\n});\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-shop-avatar.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"472e795e\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-pause-screen.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1a2c4392\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-wizard-page-profile-installation.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3515d908\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-loading-screen.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5191a3c9\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--16-1!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--16-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--16-3!./swag-migration-media-process.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1695d0fb\", content, true, {});"],"sourceRoot":""}